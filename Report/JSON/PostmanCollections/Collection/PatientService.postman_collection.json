{
  "collection": {
    "_": {
      "postman_id": "8d91950a-d4a0-494b-b157-923533a8e4c4",
      "exporter_id": "33071978",
      "collection_link": "https://planetary-moon-946240.postman.co/workspace/Team-Workspace~b71c68f9-be16-4953-8b0f-b19e310fc6ac/collection/32153414-8d91950a-d4a0-494b-b157-923533a8e4c4?action=share&source=collection_link&creator=33071978"
    },
    "item": [
      {
        "id": "6ab39693-9c59-47f3-9d8a-22f3b2143fd3",
        "name": "Lists information of all patients' data whose state is confirmed",
        "item": [
          {
            "id": "84b97a55-6d25-4bf7-9aac-216c2cf78098",
            "name": "Validate list of confirmed Patient",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "10"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json, text/plain, */*"
                },
                {
                  "key": "Accept-Language",
                  "value": "en-GB,en-US;q=0.9,en;q=0.8"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1NGQ4ZDQ0OC1lMGUxLTcwNTItMzVhYi1kMzM2ODc4NTc2MTIiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI1MTk1ZjQwMy01YmY1LTQ1ZTktYmZiNi1lNWNhZTAxNmU4ZjYiLCJldmVudF9pZCI6ImM3ODQwZjBjLTA5OWEtNGFjNC05ODQ4LWU0NTVlNjQ4ZGZhZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTk0NzIxNDMsImV4cCI6MTcxOTQ3NTc0MywiaWF0IjoxNzE5NDcyMTQzLCJqdGkiOiJkNmIzOGJjZS1mNGRiLTQxNzItOWM1Yi02ZjliMzQxZTRiNTUiLCJ1c2VybmFtZSI6IjU0ZDhkNDQ4LWUwZTEtNzA1Mi0zNWFiLWQzMzY4Nzg1NzYxMiJ9.tMjoxDwie0kIXFenk6AsY8OD6CSoPU1XVbdAJWxfCZn2QfwWWXJa3iTyDD64cN_rzA0o4qVt4LEXv-J4LC2omEeI2llx5DUa9sjGVxdBTX4th11vC-as5EMLMc1ZDOrLV5zVdunocxVr-F9HPEzyNPeUvFF6RafIxOp0p_NeHGF35O878GHsOvz-Zkf7m4UZHmKYwOys0TbwBS5U3k0UIgYMxVfRTiayLUCxsbGKDLOabEVdP5rrhvhkbbiXvM9LAzneWRlTxL7ZPrkU32u3EyedXMumXCC3T7RVz-faimDoLHlJE87hRyMPdCLSLZC9q8goN3pk779fxD9BoFHFtg"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Origin",
                  "value": "http://localhost:3000"
                },
                {
                  "key": "Referer",
                  "value": "http://localhost:3000/"
                },
                {
                  "key": "User-Agent",
                  "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
                }
              ],
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c9f0806c-218b-4084-a9f4-f4b9f8a78587",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient information fetched successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "a122ae13-e6d1-4c9a-a46c-13d9e2eb70fe"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "00deff84-9981-4168-8536-b6224ce2e051",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ca57914-cce1-4bae-9ec3-dc4024a97c15"
                }
              }
            ]
          },
          {
            "id": "9e241d7f-293a-4962-8329-1ba363d79ff8",
            "name": "Validate list of confirmed Patient not displaying without Authorization",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "1"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "81095d15-ab75-4da1-a14e-1f7a2b586025",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "b1cbd4b0-f63f-408b-b429-1a14c9997770"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "c824ce6b-a124-4cf6-8c7d-eae9e7187a4b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e2e5ee2-d5ce-4ce0-9ebe-93ad4c3615f1"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "e228695f-6a26-43c1-b0a0-d0e5e940fbb9",
            "name": "Validate list of confirmed Patient not displaying to the user as token is invalid/expired.",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "1"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d9c5a4f1-e8fd-437d-a09b-10fc43da837c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "9fe9d793-f1bc-45c9-87e8-6f6e8df66eb8"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "92656b0b-2369-4392-8079-f8a87a6d6c90",
            "name": "Validate list of confirmed Patient not displaying with incorrect query data",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "100"
                  },
                  {
                    "key": "limit",
                    "value": "100"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7cdb2487-b470-4705-a05f-7977e03c861d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Cannot find patients\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "9553e4c5-8cee-4af8-b299-546602fb55c3"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "14854e8c-6c6f-4366-b31c-617f95e26b0c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d547375-7312-4e37-9231-832b2f25eba3"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "de8c4d0a-6cf1-42a7-b7d3-89a18f0cdde5",
            "name": "Validate list of confirmed Patient not displaying to the user as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "0"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "38d44af9-de84-4d2c-b318-2d171b037f85",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "3ca642a0-aa8f-4234-b0ea-2a2701014a9b"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7d45973-b8cd-47e0-8336-ce9b954cff8d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a750652-6762-4e53-8891-552d6ad0200b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
        "name": "patient variant file upload",
        "item": [
          {
            "id": "9b50759f-1773-4a9f-956d-77287aa64411",
            "name": "Validate user is able to upload variants file successfully",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                    "});\r",
                    "\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "let p_info_task_id = response.data.id;\r",
                    "// Set the ID as an environment variable\r",
                    "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                    "\r",
                    "// Log the environment variable to the Postman console for verification\r",
                    "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                    "\r",
                    "let url = response.data.data[0].url;\r",
                    "\r",
                    "// Set the URL as an environment variable\r",
                    "pm.environment.set(\"file_url\", url);"
                  ],
                  "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                }
              }
            ]
          },
          {
            "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
            "name": "Validate user is able to upload multiple variants file successfully",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": [
                      "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                      "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    ]
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                }
              }
            ]
          },
          {
            "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
            "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                  "type": "text/javascript",
                  "exec": [],
                  "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                }
              }
            ]
          },
          {
            "id": "700b3998-8199-4973-8a9a-a175e87ab023",
            "name": "Validate user is able  to upload variants file without id",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                    "});\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "let p_info_task_id = response.data.id;\r",
                    "// Set the ID as an environment variable\r",
                    "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                    "\r",
                    "// Log the environment variable to the Postman console for verification\r",
                    "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                    "\r",
                    "let url = response.data.data[0].url;\r",
                    "\r",
                    "// Set the URL as an environment variable\r",
                    "pm.environment.set(\"file_url\", url);\r",
                    ""
                  ],
                  "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                }
              }
            ]
          },
          {
            "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
            "name": "Validate user is unable to upload without variants file",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                    "\r",
                    "setTimeout(function() {\r",
                    "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                    "}, delay);\r",
                    ""
                  ],
                  "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                }
              }
            ]
          },
          {
            "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
            "name": "Validate user is unable to upload variants file as user is unauthorized",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                }
              }
            ]
          },
          {
            "id": "10cfbd55-1350-4c27-a191-47395c13561a",
            "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "23a01cb6-d7c8-4870-a533-95a0f9352705",
        "name": "Start Validation Variants",
        "item": [
          {
            "id": "c33289c5-5825-4808-9185-45219e1e1aff",
            "name": "Validate the user is able to validate variants successfully",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2003266d-804e-4741-a0bc-dc041fa49807",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) validated successfully\");\r",
                    "});\r",
                    "\r",
                    "\r",
                    "let p_variant_task_id = response.data.task_id;\r",
                    "// Set the ID as an environment variable\r",
                    "pm.environment.set(\"p_variant_task_id\", p_variant_task_id);\r",
                    "\r",
                    "// Log the environment variable to the Postman console for verification\r",
                    "console.log(\"p_variant_task_id set to:\", p_variant_task_id);"
                  ],
                  "_lastExecutionId": "141e1c2c-a6c8-4ce6-a29c-10b7b051762e"
                }
              }
            ]
          },
          {
            "id": "ddb477c4-1745-4e50-a22b-717383d26ece",
            "name": "Validate the user is unable to validate variants with incorrect query data",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "12345"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b7fb0ca6-64c8-4979-b459-9b03b353a10d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "f3afb49d-ff00-4b85-96b8-7e431dabd48d"
                }
              }
            ]
          },
          {
            "id": "3e1867f9-4016-49bd-8628-bfa06dd76701",
            "name": "Validate the user is unable to validate variants without query data",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e5326141-b166-46b3-9a55-54828fea4ebd",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "c9167043-ed89-40ac-a9d1-5864e4f073b7"
                }
              }
            ]
          },
          {
            "id": "c80caf43-7d78-4669-b01d-b882a9c27cf8",
            "name": "Validate the user is unable to validate variants without Authorization",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "81949366-cf6a-46ce-97dd-7aa11b51792c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "997e6710-3db9-4481-b6a0-8008f13ef844"
                }
              }
            ]
          },
          {
            "id": "be0e83a5-89d4-48a0-987d-b9dba8ecc44b",
            "name": "Validate the user is unable to validate variants as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1780e7c4-4d66-4992-8faa-13356cf970df",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "1e858664-f065-42ef-9e62-1efb88181726"
                }
              }
            ]
          },
          {
            "id": "d9dbe890-4156-4145-bd83-a37735b280c7",
            "name": "Validate the user is unable to validate variants as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a859a256-e5ce-4d39-8d8f-82863a5b6c3e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "34b8e686-8919-4bb4-b5b9-59fac3a5ee38"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
        "name": "patient medical file upload",
        "item": [
          {
            "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
            "name": "Validate user is able to upload medical files successfully",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                }
              }
            ]
          },
          {
            "id": "b499e471-8849-4710-87c6-4914225a98a1",
            "name": "Validate user is able to upload medical files successfully without id",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                }
              }
            ]
          },
          {
            "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
            "name": "Validate user is able to upload multiple medical files successfully",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": [
                      "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                      "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    ]
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                    "});\r",
                    "let responseData = pm.response.json();\r",
                    "let p_other_task_id = responseData.task_id;\r",
                    "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                  ],
                  "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                }
              }
            ]
          },
          {
            "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
            "name": "Validate user is unable to upload medical fileswith incorrect id",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "12345"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                }
              }
            ]
          },
          {
            "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
            "name": "Validate user is unable to upload medical files as user is unauthorized",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                }
              }
            ]
          },
          {
            "id": "965385e0-5aca-450f-92df-9de7e76871ed",
            "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "8c02300b-ebee-4a56-bf71-92fc10f11049",
        "name": "check task status",
        "item": [
          {
            "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
            "name": "Validate user is able to check status of task successfully for Patient info",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
                }
              }
            ]
          },
          {
            "id": "ff66f542-7d9f-4651-a0e5-f7691348f068",
            "name": "Validate user is able to check status of task successfully for Patient Variant File",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ec5ec586-901d-4bba-9a02-d716d4e5684e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "7161bbb0-69d8-4d8e-9052-0bfe300866a9"
                }
              }
            ]
          },
          {
            "id": "5853c684-b770-4e12-a312-64d1c38f3640",
            "name": "Validate user is unable to check status as task_id is incorrect.",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "12669a2d-144e-4628-aa01-064ec779b05c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "6431a0f2-2732-4dc9-8472-7aa00ff48cfa"
                }
              }
            ]
          },
          {
            "id": "f474f736-19b3-4eec-a0cd-bd9cdda2ceae",
            "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9fc3292c-3310-4c63-8995-b2ffe3425d4a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "72605b4b-c4f0-4ff7-a1c0-a2c9514b9f26"
                }
              }
            ]
          },
          {
            "id": "1c4dafeb-520e-49ae-b305-7375a2ef062f",
            "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "64d8268b-bdc3-4cea-bf11-1114b08f659a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "0f6d1daf-78d6-4312-922d-3bfa174a2cda"
                }
              }
            ]
          },
          {
            "id": "62aaa003-7636-4064-bb85-79cab54549fb",
            "name": "Validate user is unable to check status as the token is invalid.",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e79c92ef-1fbf-4d48-95e9-131024c4684a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "cc88a5ca-5017-4581-9fa0-85630cc1039f"
                }
              }
            ]
          },
          {
            "id": "fba8e0ba-22dc-4368-86f3-d8cdff0dba66",
            "name": "Validate user is unable check status as incorrect CRUD operation is used.",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a570fc80-e138-4907-8d15-2f9206e6e760",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "aefedbde-d726-4576-8266-caf674878f8f"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "44e62f0e-fdf2-4078-9774-09a2f31c06f5",
        "name": "Lists information of a Patient's data",
        "item": [
          {
            "id": "83479e18-2505-48b9-b4df-e23598618caf",
            "name": "Validate user is able to fetch patient's data successfully",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "05434c8b-d8bc-4f30-ba48-548b6ca3c2ad"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f27e72a5-5d44-4e41-96e3-4331fea1c373",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Status Code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient details fetched successfully.\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "d037ec88-b2cd-4ac8-9598-04d7a38993bd"
                }
              }
            ]
          },
          {
            "id": "712a3eb0-76de-4ae5-9a80-ae2894f29584",
            "name": "Validate user is unable to fetch patient's data with incorrect query data",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "12345"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "529c5f73-8b5e-4c74-ac6d-6a7c6c858ace",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status Code is 400\", function () {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Invalid id\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "49a5b661-d0cb-4095-a8cd-b8df65b0692b"
                }
              }
            ]
          },
          {
            "id": "a98ab882-c926-4743-92e3-0e23ea620441",
            "name": "Validate user is unable to fetch patient's data without query data",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "90fa6945-940b-43c0-8909-d46b69ab438f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Invalid id\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "0e0d87a3-9fbb-498e-907a-e5f4e3a50b73"
                }
              }
            ]
          },
          {
            "id": "550b3043-c4d9-4f30-84c9-0b5ff5fa892d",
            "name": "Validate user is unable to fetch patient's data without Authorization",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b5dc3762-f090-49ee-86cd-8c30ea0f61a6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8da91116-7a13-4aa4-9284-aaf6c20f720a"
                }
              }
            ]
          },
          {
            "id": "e343a949-c4e9-4d6a-817b-a8b5f8d2a68f",
            "name": "Validate user is unable to fetch patient's data with invalid/expired token",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "928383f0-dc47-408b-be68-ea421a946ceb",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "1371a6d4-0843-4e2e-b59e-fefc5022ba6c"
                }
              }
            ]
          },
          {
            "id": "24b5f09e-67c2-459f-a33f-c0f041956e35",
            "name": "Validate user is unable to fetch patient's data as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8c2af4a3-658d-4ae0-a85d-c221dd9d71bd",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "6dedce8e-ab83-43d1-b273-f4bb6982f2ed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "79a75f7e-a03a-431d-94dc-2cbd06a99950",
        "name": "Updates the information of Patient's data",
        "item": [
          {
            "id": "7741ba1d-975c-4aeb-a8df-853584226638",
            "name": "Validate user is able to check patient id successfully",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "08a34abd-2ae9-42be-8335-070ad7c2acf1",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient id does not exist\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "a3e6ffc8-6707-4b53-ac4a-a37272d9bcfd"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8b9000a-ce66-4ed8-b893-926ab8274095",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let patientId = \"patient_\" + new Date().getTime();\r",
                    "\r",
                    "// Set the environment variable\r",
                    "pm.environment.set(\"patient_id\", patientId);\r",
                    "\r",
                    "console.log(\"Environment Patient ID set to:\", patientId);\r",
                    "\r",
                    "function getRandomString(length) {\r",
                    "    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
                    "    let result = '';\r",
                    "    for (let i = 0; i < length; i++) {\r",
                    "        result += chars.charAt(Math.floor(Math.random() * chars.length));\r",
                    "    }\r",
                    "    return result;\r",
                    "}\r",
                    "\r",
                    "// Generate a unique name using a random string\r",
                    "let name = \"Name_\" + getRandomString(8) + \"_\" + new Date().getTime();\r",
                    "pm.environment.set(\"name\", name);"
                  ],
                  "_lastExecutionId": "f91c173f-2ee2-46aa-8b1b-6e5fbb0503ac"
                }
              }
            ]
          },
          {
            "id": "51567a6d-d629-4611-8521-0c5baf194eee",
            "name": "Validate user is able to update patient's information successfully",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\":\"4a92ba9f-d7be-4eb1-bad0-2b22660b2a79\",\r\n    \"patient_id\":\"{{patient_id}}\",\r\n     \"name\": \"{{name}}\",\r\n    \"age\": 20,\r\n    \"gender\":\"female\",\r\n    \"tumor_type\":\"liver_cancer\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\"\r\n    \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d94b4b58-9b00-413f-b127-3102d105acef",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient info updated successfully.\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "948e1d65-4028-4b99-bdfa-31573ac538d8"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3886c61-e719-4c85-a048-70d7bb3b16db",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49f2bc38-16d2-4b4a-a0c7-a4eb4b01171c"
                }
              }
            ]
          },
          {
            "id": "3e488e27-d160-4200-95fe-2027bf85aefe",
            "name": "Validate user is unable to update patient's information with missing required field in the body",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n\"id\":\"{{p_info_task_id}}\",\r\n  \"name\": \"Patient Name\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c226a19b-028a-4490-97ab-f6935c4604bc",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Missing required fields\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "654044f9-7cfe-4d46-9d5e-cae744488481"
                }
              }
            ]
          },
          {
            "id": "a0c6e1f5-f3ff-48da-b51d-02dd8fdae1cb",
            "name": "Validate user is unable to update patient's information without Authorization",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2d8ba41b-03bf-488e-9129-588655cd9146",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "9a343448-ed90-45b7-b55a-df42ea827632"
                }
              }
            ]
          },
          {
            "id": "41dd9579-1c60-4c5c-95b4-bac9fe06991e",
            "name": "Validate user is unable to update patient's information as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "78fad59f-92a5-4c98-85c5-b15b3acfa58f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "1bd15bbc-3fd0-49a3-ad4d-8ba5c256ea3f"
                }
              }
            ]
          },
          {
            "id": "ba469383-19ef-42db-bbd5-c2db2658c3b5",
            "name": "Validate user is unable to update patient's information as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8dd2e12a-1997-49bf-931e-fc7cc688d9cb",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "72585f0f-f6d8-4b5e-89b8-ebd431809718"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "98f6f828-13ad-4732-a724-95120eafb0a2",
        "name": "Check Patient ID",
        "item": [
          {
            "id": "0d9f8e69-0c14-4b5d-bffa-351ef145f117",
            "name": "Validate user is able to check patient id successfully(true)",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2ffb7241-c359-4f99-8ec7-1bc6646bdb66",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient id already exists.\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "c9deecad-bbac-44b6-b286-a175307e1a0d"
                }
              }
            ]
          },
          {
            "id": "2603292c-2f21-43d8-afcb-b7e5706b5afa",
            "name": "Validate user is unable to check patient id as patient_id is missing in the body",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3d3ae6e3-91f2-4399-9b62-cac6cd09678a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "9f32f225-baad-4ab4-8146-3c56eed645a4"
                }
              }
            ]
          },
          {
            "id": "0c28e7e4-514c-4b38-a836-b55dfce376f4",
            "name": "Validate user is unable to check patient id as incorrect patient_id is provided",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"K345678\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d0e84754-7c9d-4cd8-9126-1248a3a1b49a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient id does not exist\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "484ac959-7735-4378-b7cf-0b4d3469dbde"
                }
              }
            ]
          },
          {
            "id": "1927f782-1126-4bdb-b6eb-103302327142",
            "name": "Validate user is unable to check patient id without authorization",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c25fd9b1-b298-4f4e-8a46-868a468e7738",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "3b5f8148-118d-437b-aa00-4190bb24beb6"
                }
              }
            ]
          },
          {
            "id": "8bf43d8a-e0c9-46d0-860b-56e41a8a86cf",
            "name": "Validate user is unable to check patient id as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "abeeb150-18a9-4b66-8aa5-a0bfeb8dd258",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "2a6ae6ce-9ba4-4973-a4bd-db05ebccceb5"
                }
              }
            ]
          },
          {
            "id": "54f79343-8fbb-4e39-8e47-1b015ce79135",
            "name": "Validate user is unable to check patient id as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "77984d4f-2b79-44ca-aef4-fbed829baeeb",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "25e9c3a4-7e81-4a1b-bdd5-f00392b388a4"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "ab7dcdc1-8132-451f-9ec9-7e37da9b3ba2",
        "name": "Search patients",
        "item": [
          {
            "id": "6d6273d0-a89e-449e-a1ab-43e943c4867c",
            "name": "Validate user is able to search patients successfully",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "keyword",
                    "value": "{{patient_id}}"
                  },
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "10"
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3e66ff56-af8e-4283-9798-9208c284ea04",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Search items fetched successfully\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "19e8527c-705c-418d-9871-1aa33f4356dc"
                }
              }
            ]
          },
          {
            "id": "d54ef909-18a5-4bef-bcf8-9744db6e2e7c",
            "name": "Validate user is able to search patients if optional parameters are missing",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "page",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "limit",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": ""
                  },
                  {
                    "key": "keyword",
                    "value": "{{patient_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5022273f-84c8-4832-ab70-ce2ea5ad61bc",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Search items fetched successfully\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "1ba99fe0-ccdc-42ed-951b-6f30ec7898d8"
                }
              }
            ]
          },
          {
            "id": "f9ccd354-f6e7-4b9a-b64d-eb538f87a1ed",
            "name": "Validate user is unable to search patients as required parameter is missing",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "keyword",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "limit",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "page",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "679913fd-ff4b-43ef-ab11-7d7fc89931f1",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "256950fe-f87a-40ce-bde9-678d4262f139"
                }
              }
            ]
          },
          {
            "id": "f659a578-aaaf-49be-9d8a-d99c5116d18e",
            "name": "Validate user is unable to search patients without Authorization",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "keyword",
                    "value": "{{patient_id}}"
                  },
                  {
                    "disabled": true,
                    "key": "limit",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "page",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4d08f429-f875-4773-8e5b-d4f971e5898f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "12be6f57-595f-4a0d-b160-ea6a4a14977d"
                }
              }
            ]
          },
          {
            "id": "46ee63aa-a123-4c0b-a412-7e5e997cb271",
            "name": "Validate user is unable to search patients as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "keyword",
                    "value": "{{patient_id}}"
                  },
                  {
                    "disabled": true,
                    "key": "limit",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "page",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2a094705-9c63-4ba4-af56-9e10e61bd79c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "124aadf6-80d1-4b96-98f8-83a26e0ea47b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "33711155-2d4a-407d-b215-0218c6195046",
        "name": "Get current user task info",
        "item": [
          {
            "id": "5f0ac1c9-1d45-4995-a0df-556e593eb96b",
            "name": "Validate user is able to get current user task info successfully",
            "request": {
              "url": {
                "path": [
                  "get-current-user-task-info"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0d51a62f-9fd7-450a-8544-fbc52d239224",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient details fetched successfully.\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "39aa580e-e092-4e25-ac9d-e22d95b221e9"
                }
              }
            ]
          },
          {
            "id": "1135ffbc-3498-4f08-b830-f94b68bab842",
            "name": "Validate user is unable to get current user task info without authorization",
            "request": {
              "url": {
                "path": [
                  "get-current-user-task-info"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e6f46434-ca25-4ddb-8449-c24454afd263",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "    });"
                  ],
                  "_lastExecutionId": "1a026763-73d7-46d3-93c9-fc17495fa2ff"
                }
              }
            ]
          },
          {
            "id": "a3f54401-1e9e-47db-9106-a12570916433",
            "name": "Validate user is unable to get current user task info as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "get-current-user-task-info"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "84b35c1c-933b-430b-b308-2d76733c37fa",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "fa399c13-7b46-4030-a8e9-8458c9d6b0e1"
                }
              }
            ]
          },
          {
            "id": "476c51f5-19ee-4cce-bb38-7183d164644e",
            "name": "Validate user is unable to get current user task info as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "get-current-user-task-info"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0c61700d-6ade-42ac-bc9a-bd6a5d08101b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "03113058-10ed-48d7-bc7f-d2a257edc68f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "25ca0ee1-b58e-4adb-a251-b4dfbc2f7692",
        "name": "Start variant processing",
        "item": [
          {
            "id": "9c1bfb68-a97f-4dc6-9173-309b6ee8fe0b",
            "name": "Validate user is able to start variant processing successfully",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "4a92ba9f-d7be-4eb1-bad0-2b22660b2a79"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6e917a79-3290-4489-b324-3563fac68477",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) processed successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "cc40213e-670b-48ff-a726-be408769b784"
                }
              }
            ]
          },
          {
            "id": "f01e4e13-77ea-4dfd-aae1-89cd685b5bfe",
            "name": "Validate user is unable to start variant processing as required parameter is missing",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a4f8462b-96e0-4973-9bd1-4d3be750368c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "518e7237-1781-489f-8421-7e8acc3d3e6c"
                }
              }
            ]
          },
          {
            "id": "807800bb-8c2a-444a-9180-5a882ee11449",
            "name": "Validate user is unable to start variant processing without Authorization",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "87d13a16-9fb0-43da-bd9c-8c2014ce8426",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "542afeef-f827-43f9-ac9b-7c2f6fb6a9db"
                }
              }
            ]
          },
          {
            "id": "32637ac7-9968-48f1-abba-871d8f87e8b1",
            "name": "Validate user is unable to start variant processing as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b604098c-777b-40a9-9ce9-df1fa0b868bb",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "30e5ef3e-5945-4d9d-9370-970805b9e71c"
                }
              }
            ]
          },
          {
            "id": "2ec95f86-1c1e-417b-a62a-4f07ede45ece",
            "name": "Validate user is unable to start variant processing as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "dddea6da-984a-49c8-8f15-a98f2d502997",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "1c715c5f-55f4-45a6-b599-7a7ffb09202a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "677955b7-3d79-4d39-88f3-a5833a6771d7",
        "name": "Patient demograph dropdown",
        "item": [
          {
            "id": "00b6f6cd-0645-41ff-87bc-c5b9a3c83b2f",
            "name": "Validate user is able to display patient demograph dropdown successfully",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "tmb"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a19681e6-015e-4391-843e-34759a776314",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Parse the JSON response\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "// Expected array elements\r",
                    "let expectedElements = [\"High\", \"Low\", \"Intermediate\", \"Unknown\"];\r",
                    "\r",
                    "// Validate the response is an array\r",
                    "pm.test(\"Response is an array\", function () {\r",
                    "    pm.expect(response).to.be.an('array');\r",
                    "});\r",
                    "\r",
                    "// Validate the response contains all expected elements\r",
                    "pm.test(\"Response contains all expected elements\", function () {\r",
                    "    expectedElements.forEach(function(element) {\r",
                    "        pm.expect(response).to.include(element);\r",
                    "    });\r",
                    "});\r",
                    "\r",
                    "// Validate the response does not contain any unexpected elements\r",
                    "pm.test(\"Response does not contain unexpected elements\", function () {\r",
                    "    response.forEach(function(element) {\r",
                    "        pm.expect(expectedElements).to.include(element);\r",
                    "    });\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "054d476b-ec97-4e69-b934-6787fa0ea906"
                }
              }
            ]
          },
          {
            "id": "b25460cd-3863-443c-971e-a404fb2dd8cb",
            "name": "Validate user is unable to display patient demograph dropdown with missing required parameter",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "fe47533c-5524-40bc-9fcc-ee70b09156dd",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "4765b8c1-0974-4811-ac25-63ea497a6b59"
                }
              }
            ]
          },
          {
            "id": "dc798213-7a32-47d6-b24e-220afdd38bf2",
            "name": "Validate user is unable to display patient demograph dropdown with incorrect query parameter",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3f60db93-995d-412a-8c15-5090441b5856",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "4acf6a24-cd7e-430a-81e1-0d132dd76f22"
                }
              }
            ]
          },
          {
            "id": "b3827a28-e958-405d-ad0a-c10f18b734e9",
            "name": "Validate user is unable to display patient demograph dropdown without Authorization",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "tmb"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9789e637-8206-4d2a-bca0-b9d4b0f2d0d3",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "c4e409d1-3e1d-4ad3-8128-3d2bfce2c38b"
                }
              }
            ]
          },
          {
            "id": "75f35b87-82c4-4e99-bf62-e4b1353d377f",
            "name": "Validate user is unable to display patient demograph dropdown as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "tmb"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "92941d2f-d1a0-418d-88b7-52f8628a28fb",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "69488203-bda7-4972-baee-b5def5eccc2f"
                }
              }
            ]
          },
          {
            "id": "953d3013-0b90-49fb-99f7-b0c63851cf13",
            "name": "Validate user is unable to display patient demograph dropdown as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "tmb"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "97d649f4-287d-4c6f-8945-3bc29056de3c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8a5cfaf4-a4c1-4f88-85d7-4b93d62ea3b6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "050a53c9-dfea-4935-b075-70e6387211e5",
        "name": "Sub tumor dropdown",
        "item": [
          {
            "id": "96d5da50-9958-4fb4-b63e-ac22d72920a4",
            "name": "Validate user is able to display sub tumor type dropdown successfully",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "lung_cancer"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5a699fb8-913d-416e-b290-7b52b80078d0",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Parse the JSON response\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "// Expected array elements\r",
                    "let expectedElements = [\r",
                    "    \"Small Cell Lung Cancer\",\r",
                    "    \"Non-Small Cell Lung Cancer\",\r",
                    "    \"Combined Small Cell Lung Carcinoma (CSCLC)\",\r",
                    "    \"Inflammatory Myofibroblastic Lung Tumor (IMTL)\",\r",
                    "    \"Lung Adenocarcinoma In Situ (LAIS)\",\r",
                    "    \"Lung Neuroendocrine Tumor (LNET)\",\r",
                    "    \"Non-Small Cell Lung Cancer (NSCLC)\",\r",
                    "    \"Pleuropulmonary Blastoma (PPB)\",\r",
                    "    \"Pulmonary Lymphangiomyomatosis (LAM)\",\r",
                    "    \"Sarcomatoid Carcinoma of the Lung (SARCL)\",\r",
                    "    \"Atypical Lung Carcinoid (ALUCA)\",\r",
                    "    \"Large Cell Neuroendocrine Carcinoma (LUNE)\",\r",
                    "    \"Lung Carcinoid (LUCA)\",\r",
                    "    \"Small Cell Lung Cancer (SCLC)\",\r",
                    "    \"Ciliated Muconodular Papillary Tumor of the Lung (CMPT)\",\r",
                    "    \"Large Cell Lung Carcinoma (LCLC)\",\r",
                    "    \"Lung Adenocarcinoma (LUAD)\",\r",
                    "    \"Lung Adenosquamous Carcinoma (LUAS)\",\r",
                    "    \"Lung Squamous Cell Carcinoma (LUSC)\",\r",
                    "    \"NUT Carcinoma of the Lung (NUTCL)\",\r",
                    "    \"Pleomorphic Carcinoma of the Lung (LUPC)\",\r",
                    "    \"Poorly Differentiated Non-Small Cell Lung Cancer (NSCLCPD)\",\r",
                    "    \"Salivary Gland-Type Tumor of the Lung (SGTTL)\",\r",
                    "    \"Spindle Cell Carcinoma of the Lung (SPCC)\",\r",
                    "    \"Basaloid Large Cell Carcinoma of the Lung (BLCLC)\",\r",
                    "    \"Clear Cell Carcinoma of the Lung (CCLC)\",\r",
                    "    \"Giant Cell Carcinoma of the Lung (GCLC)\",\r",
                    "    \"Large Cell Lung Carcinoma With Rhabdoid Phenotype (RLCLC)\",\r",
                    "    \"Lymphoepithelioma-like Carcinoma of the Lung (LECLC)\",\r",
                    "    \"Adenoid Cystic Carcinoma of the Lung (LUACC)\",\r",
                    "    \"Mucoepidermoid Carcinoma of the Lung (LUMEC)\"\r",
                    "];\r",
                    "\r",
                    "// Validate the response is an array\r",
                    "pm.test(\"Response is an array\", function () {\r",
                    "    pm.expect(response).to.be.an('array');\r",
                    "});\r",
                    "\r",
                    "// Validate the response contains all expected elements\r",
                    "pm.test(\"Response contains all expected elements\", function () {\r",
                    "    expectedElements.forEach(function(element) {\r",
                    "        pm.expect(response).to.include(element);\r",
                    "    });\r",
                    "});\r",
                    "\r",
                    "// Validate the response does not contain any unexpected elements\r",
                    "pm.test(\"Response does not contain unexpected elements\", function () {\r",
                    "    response.forEach(function(element) {\r",
                    "        pm.expect(expectedElements).to.include(element);\r",
                    "    });\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "4e2425bf-3a6b-47c7-b87d-456cf39e8cd9"
                }
              }
            ]
          },
          {
            "id": "b49a29dd-2c82-4545-9d49-09bb4d61046c",
            "name": "Validate user is unable to display sub tumor type dropdown with missing required parameter",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "216919cc-5c8d-4c0b-bacd-299994a98b36",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "c3722b41-cfa3-4cd9-b4f1-af193ea953e4"
                }
              }
            ]
          },
          {
            "id": "894d63ee-6ac7-4430-9d8f-0d67ec11e307",
            "name": "Validate user is unable to display sub tumor type dropdown with incorrect query parameter",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6b6cc3ef-de0b-4004-9388-e12429d35b60",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "996827bb-7f55-42d4-9b55-3c5c2bf56828"
                }
              }
            ]
          },
          {
            "id": "e2951a7b-65b2-482d-a9d2-ea7a3a74d07d",
            "name": "Validate user is unable to display sub tumor type dropdown without Authorization",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "lung_cancer"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "edc9dcc9-bbe3-48ee-9359-436a6bf7d42f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "5f6c8bd3-21ff-41a3-9e35-4eba5247cb5d"
                }
              }
            ]
          },
          {
            "id": "b368bff1-bf9e-476e-af5a-c21928f8da91",
            "name": "Validate user is unable to display sub tumor type dropdown as toekn is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "lung_cancer"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "afa9fa0f-2433-451f-9c7b-11558e540257",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "b7352111-7059-4e61-aaf7-ece9b2ea34ad"
                }
              }
            ]
          },
          {
            "id": "4f69ce3e-6e53-43d7-a831-11a768800140",
            "name": "Validate user is unable to display sub tumor type dropdown as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "{{key}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "49380a43-3c90-470d-9e94-73fa4e82d7e6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "f68b39c3-024f-4fa9-ab82-f7fcd6860638"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e6abbb32-cb1c-4441-92d6-463c883b5da0",
        "name": "Get patient file details",
        "item": [
          {
            "id": "3c48feda-2690-4429-9756-50d18746c2af",
            "name": "Validate user is able to get patient file details successfully",
            "request": {
              "url": {
                "port": "8001",
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "13",
                  "233",
                  "37",
                  "45"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "958fd271-1a6f-4cbb-8c53-bb1cbd3405cc"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f29f14a5-9823-4eca-a834-d3761d6e3db1",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient file details retrieved\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "8623fef7-8b65-4e08-9ec5-6515f86ec4ac"
                }
              }
            ]
          },
          {
            "id": "d53a09cd-51bf-4f25-a94c-4363b6b76749",
            "name": "Validate user is unable to get patient file details with missing required parameter",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "96d39541-107c-4da9-ac86-1ffdf113e6e6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient not found\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "fa9e1192-e45a-47fa-b977-86863b1ff354"
                }
              }
            ]
          },
          {
            "id": "6c88a548-1202-4a33-8ba2-f6ec5df9502e",
            "name": "Validate user is unable to get patient file details with incorrect query parameter",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c6717396-485c-44a1-9e48-1cbee6380ea1",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient not found\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "deab4d3e-67ba-4745-9775-3698902b0835"
                }
              }
            ]
          },
          {
            "id": "34b186cb-b13c-4d26-8ef7-74ff91940759",
            "name": "Validate user is unable to get patient file details without Authorization",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "54eb3c98-9b14-46f3-9b96-90e003c2c14d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "b0b5a76f-9e18-4f89-aed8-77c010b3b395"
                }
              }
            ]
          },
          {
            "id": "56b5148f-fe65-4789-b53e-eeb22c7f6d57",
            "name": "Validate user is unable to get patient file details as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c2baf766-f01c-4521-bace-aa76727e8932",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "65400ab2-268b-4548-ab4e-9d948d9ce110"
                }
              }
            ]
          },
          {
            "id": "f3cf1e9d-f4bd-4b50-9488-331f30d739fb",
            "name": "Validate user is unable to get patient file details as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{uid}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "51c5bc69-18cd-4b7b-9768-359a1198ae3c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "ccf4fbcc-3f46-4150-bb52-943520771e44"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "df27c4bf-29e8-4980-ae78-b347357f1048",
        "name": "Export Files",
        "item": [
          {
            "id": "ef485259-4b58-4bb8-b5cf-278806d6718e",
            "name": "Successfully export files",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9ee937fe-1a79-49ea-8520-3d94d239b2da",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "906bb57b-fbe0-49a4-abe0-7b6187b20fde"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "53e3fd53-30b3-4004-bbd1-017fe2e9f060",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62571398-f37f-4047-8ae9-51019c438f87"
                }
              }
            ]
          },
          {
            "id": "6a25efca-d272-47fd-baa2-3986c719acb3",
            "name": "Successfully could not export files with incorrect id",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "1234567890"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b406a11e-c318-40c2-b7bc-eedd0e7ca3c7",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "1f49703b-a521-4475-8c80-8bf6b56ad1c7"
                }
              }
            ]
          },
          {
            "id": "21661624-d37b-4091-84e8-013cf7a8aff6",
            "name": "Could not export files  due to missing authorization",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6e2f2aea-e943-4a50-8931-a6b26d22e285",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "1838fb49-07e0-45fc-920e-4400204bbad1"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "31ccc7b7-5cc6-4650-bbf9-bf0818ebe566",
                  "type": "text/javascript",
                  "exec": [],
                  "_lastExecutionId": "2073438e-55b2-449f-ac38-438e947c2e58"
                }
              }
            ]
          },
          {
            "id": "1daaa912-e4a8-4cd0-b381-809faf7fb17e",
            "name": "Could not export files  due to invalid  authorization",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "52fcf039-ea62-4634-869b-7fd1c2199c5c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "28daa24f-f3ab-49f7-8c05-806458c8f4f7"
                }
              }
            ]
          },
          {
            "id": "4734b044-1aa0-4490-bbcc-92622cd3c30b",
            "name": "Could not export files  due to invalid CRUD operation",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "503d1054-be46-443b-8357-14f139933918",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "ba8e27f0-2c3f-4192-bda4-555f7e9b390b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40ddb9d4-68d4-4f91-a2ca-791c7447cb36",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                "\r",
                "setTimeout(function() {\r",
                "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                "}, delay);\r",
                ""
              ],
              "_lastExecutionId": "6ba603b8-5d80-45ad-926a-c36f36037719"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58ca40f0-7527-4d37-af5d-2877f0bb6344",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "\r",
                ""
              ],
              "_lastExecutionId": "562443fe-e0cf-43d7-8e1b-8555cc97fc19"
            }
          }
        ]
      },
      {
        "id": "a93c7e72-3644-414c-b63d-215ed1696c3c",
        "name": "Update Patient Workflow",
        "item": [
          {
            "id": "ae8ba29f-17ca-489c-a8f3-d8e3e588e176",
            "name": "Update patient workflow",
            "request": {
              "url": {
                "port": "8001",
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "13",
                  "233",
                  "37",
                  "45"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"958fd271-1a6f-4cbb-8c53-bb1cbd3405cc\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"{{currentUTCTime}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "35e6d8eb-35ad-4313-a167-2df74048e6da",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Updated Task\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "e2f93e93-979d-492f-986e-53a856bba97e"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "68fef269-385c-4182-86e0-35f22191e931",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "774ac79f-3618-4449-8a66-320d1eaff6f5"
                }
              }
            ]
          },
          {
            "id": "0e0e3813-5475-4a62-a639-c999d264dcd3",
            "name": "Could not Update patient workflow with incorrect id",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"1234567890\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4f491cd1-e73f-4ecd-95a3-0b136936b326",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "f92ac5c3-e615-4832-acfd-798950c84131"
                }
              }
            ]
          },
          {
            "id": "9b2746fe-16e9-49bb-9d6e-dda133d2b9df",
            "name": "Could not Update patient workflow with missing required fields",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2d3d3673-505b-4888-ad85-d4b1f747147f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Missing required fields\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "1c42aae1-3b80-425b-852b-c50a6440d711"
                }
              }
            ]
          },
          {
            "id": "c4b940df-d0e4-4a97-8b32-9bf8a9f3ae03",
            "name": "Could not Update patient workflow with missing Authorization",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "078e6dd6-c6a4-4b47-9b0f-d85f5c8d2f0a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "500bd8c5-c2f0-45bf-8ccc-6183ab36c5a8"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "547efe9e-a717-4e7a-8bd7-f3cc81735d6f",
                  "type": "text/javascript",
                  "exec": [],
                  "_lastExecutionId": "d2cdde34-fb4f-4956-8f47-93ef9a13833a"
                }
              }
            ]
          },
          {
            "id": "325d8f18-096c-4a97-b0b9-bb025ff8c6e8",
            "name": "Could not Update patient workflow with invalid Authorization",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fM",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5407856c-8374-4f49-8bbe-4b7a7d8aa205",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "789175af-748f-4984-9396-10c6ea2a2849"
                }
              }
            ]
          },
          {
            "id": "87489046-535b-47b9-8a00-a5ec80f7269b",
            "name": "Could not Update patient workflow with invalid CRUD  operation",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "170bbabc-a2e0-4b1d-8b76-85f1444f258b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "7a99050d-7e8d-4272-af65-9b0d2251b223"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f9f70ac-5af5-4ff2-a573-429602525c1d",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "const currentUTCTime = new Date().toISOString();\r",
                "\r",
                "// Log the current time in UTC ISO format (optional)\r",
                "console.log(currentUTCTime);\r",
                "\r",
                "// Set the current time as an environment variable\r",
                "pm.environment.set(\"currentUTCTime\", currentUTCTime);"
              ],
              "_lastExecutionId": "411fa266-2570-443d-bd25-aac660cfc86f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02ccd9c0-4737-4aa2-965c-9ce758c53205",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "_lastExecutionId": "21665011-0296-431e-a2f6-8bb7525eaef4"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "8d91950a-d4a0-494b-b157-923533a8e4c4",
      "name": "PatientService",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2024-07-25T09:04:02.667Z",
      "postman_exported_using": "Postman/11.3.2"
    },
    "id": "31a12bec-5eff-4e5c-969b-554cbb3dd5f4",
    "name": "OncoConnect",
    "values": [
      {
        "type": "any",
        "value": "http://3.137.2.183:8000",
        "key": "baseUrl"
      },
      {
        "type": "any",
        "value": "lukasz.ryley@floodouts.com",
        "key": "fakemail_address"
      },
      {
        "type": "any",
        "value": "testuser606588@yopmail.com",
        "key": "temporary_email"
      },
      {
        "type": "any",
        "value": "",
        "key": "email_username"
      },
      {
        "type": "any",
        "value": "",
        "key": "email_domain"
      },
      {
        "type": "any",
        "value": "072455",
        "key": "reset_otp"
      },
      {
        "type": "any",
        "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
        "key": "bearer_token"
      },
      {
        "type": "any",
        "value": "",
        "key": "refresh_token"
      },
      {
        "type": "any",
        "value": "valafab314@cmheia.com",
        "key": "mailinator_email"
      },
      {
        "type": "any",
        "value": "http://3.137.2.183:8001",
        "key": "baseUrl_patient_service"
      },
      {
        "type": "any",
        "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d",
        "key": "p_info_task_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "uid"
      },
      {
        "type": "any",
        "value": "",
        "key": "task_id"
      },
      {
        "type": "any",
        "value": "540e4cf9-f971-48c4-8bb8-254795b0bfa9",
        "key": "p_variant_task_id"
      },
      {
        "type": "any",
        "value": "patient_1721906752065",
        "key": "patient_id"
      },
      {
        "type": "any",
        "value": "Name_TFXOFkwr_1721906752066",
        "key": "name"
      },
      {
        "type": "any",
        "value": "",
        "key": "file_url"
      },
      {
        "type": "any",
        "value": null,
        "key": "p_other_task_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "variant_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "variantIds"
      },
      {
        "type": "any",
        "value": "http://3.137.2.183:8002",
        "key": "base_Url_caseManger"
      },
      {
        "type": "any",
        "value": "",
        "key": "variant_ids"
      },
      {
        "type": "any",
        "value": "",
        "key": "dynamic_payload"
      },
      {
        "type": "any",
        "value": "2024-07-25T11:26:53.126Z",
        "key": "currentUTCTime"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_1"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_2"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_3"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_4"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_5"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_6"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_7"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_8"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_9"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_10"
      }
    ]
  },
  "globals": {
    "id": "7690b83a-4066-4859-88d3-24ce8e19eba2",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 92,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 127,
        "pending": 0,
        "failed": 2
      },
      "prerequests": {
        "total": 92,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 92,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 92,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 219,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 103,
        "pending": 0,
        "failed": 2
      },
      "prerequestScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 621.6956521739131,
      "responseMin": 261,
      "responseMax": 2180,
      "responseSd": 338.92120217750374,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721906719085,
      "completed": 1721906813462
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 92,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0f02c3f3-dd2c-4e8c-8b75-ba5a580d063b",
          "httpRequestId": "77796ecf-40d9-4ea9-92e2-4b1474631279"
        },
        "item": {
          "id": "84b97a55-6d25-4bf7-9aac-216c2cf78098",
          "name": "Validate list of confirmed Patient",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "Accept-Language",
                "value": "en-GB,en-US;q=0.9,en;q=0.8"
              },
              {
                "key": "Authorization",
                "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1NGQ4ZDQ0OC1lMGUxLTcwNTItMzVhYi1kMzM2ODc4NTc2MTIiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI1MTk1ZjQwMy01YmY1LTQ1ZTktYmZiNi1lNWNhZTAxNmU4ZjYiLCJldmVudF9pZCI6ImM3ODQwZjBjLTA5OWEtNGFjNC05ODQ4LWU0NTVlNjQ4ZGZhZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTk0NzIxNDMsImV4cCI6MTcxOTQ3NTc0MywiaWF0IjoxNzE5NDcyMTQzLCJqdGkiOiJkNmIzOGJjZS1mNGRiLTQxNzItOWM1Yi02ZjliMzQxZTRiNTUiLCJ1c2VybmFtZSI6IjU0ZDhkNDQ4LWUwZTEtNzA1Mi0zNWFiLWQzMzY4Nzg1NzYxMiJ9.tMjoxDwie0kIXFenk6AsY8OD6CSoPU1XVbdAJWxfCZn2QfwWWXJa3iTyDD64cN_rzA0o4qVt4LEXv-J4LC2omEeI2llx5DUa9sjGVxdBTX4th11vC-as5EMLMc1ZDOrLV5zVdunocxVr-F9HPEzyNPeUvFF6RafIxOp0p_NeHGF35O878GHsOvz-Zkf7m4UZHmKYwOys0TbwBS5U3k0UIgYMxVfRTiayLUCxsbGKDLOabEVdP5rrhvhkbbiXvM9LAzneWRlTxL7ZPrkU32u3EyedXMumXCC3T7RVz-faimDoLHlJE87hRyMPdCLSLZC9q8goN3pk779fxD9BoFHFtg"
              },
              {
                "key": "Connection",
                "value": "keep-alive"
              },
              {
                "key": "Origin",
                "value": "http://localhost:3000"
              },
              {
                "key": "Referer",
                "value": "http://localhost:3000/"
              },
              {
                "key": "User-Agent",
                "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c9f0806c-218b-4084-a9f4-f4b9f8a78587",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient information fetched successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "a122ae13-e6d1-4c9a-a46c-13d9e2eb70fe"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "00deff84-9981-4168-8536-b6224ce2e051",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "0ca57914-cce1-4bae-9ec3-dc4024a97c15"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "Accept-Language",
              "value": "en-GB,en-US;q=0.9,en;q=0.8"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Referer",
              "value": "http://localhost:3000/"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6ecae898-5d20-45bc-8efb-79e60fd92c02",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b18416c3-f001-4834-8051-8733f25817ff",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:19 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "4273"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "access-control-allow-credentials",
              "value": "true"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              110,
              102,
              111,
              114,
              109,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              57,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              115,
              34,
              58,
              49,
              57,
              48,
              44,
              34,
              112,
              114,
              101,
              118,
              105,
              111,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              34,
              58,
              50,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              100,
              57,
              101,
              56,
              50,
              48,
              102,
              45,
              55,
              57,
              48,
              55,
              45,
              52,
              57,
              48,
              98,
              45,
              98,
              101,
              102,
              49,
              45,
              102,
              97,
              54,
              97,
              52,
              55,
              56,
              97,
              101,
              102,
              52,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              67,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              53,
              58,
              51,
              56,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              103,
              97,
              110,
              105,
              109,
              54,
              48,
              48,
              52,
              57,
              64,
              98,
              115,
              105,
              100,
              101,
              115,
              109,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              48,
              58,
              53,
              50,
              58,
              51,
              50,
              46,
              51,
              49,
              57,
              55,
              48,
              52,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              49,
              48,
              102,
              49,
              99,
              55,
              102,
              45,
              97,
              50,
              97,
              52,
              45,
              52,
              53,
              49,
              98,
              45,
              56,
              56,
              52,
              55,
              45,
              49,
              55,
              54,
              53,
              53,
              54,
              57,
              52,
              57,
              56,
              55,
              54,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              65,
              115,
              105,
              115,
              104,
              67,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              53,
              58,
              51,
              57,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              100,
              97,
              116,
              101,
              116,
              105,
              109,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              48,
              58,
              52,
              57,
              58,
              49,
              50,
              46,
              56,
              48,
              50,
              90,
              34,
              125,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              97,
              115,
              105,
              115,
              104,
              46,
              110,
              97,
              121,
              97,
              107,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              48,
              58,
              52,
              57,
              58,
              49,
              53,
              46,
              49,
              54,
              52,
              49,
              53,
              49,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              50,
              56,
              54,
              54,
              56,
              51,
              52,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              48,
              58,
              50,
              49,
              58,
              53,
              51,
              46,
              55,
              54,
              53,
              52,
              54,
              57,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              99,
              97,
              97,
              100,
              52,
              97,
              50,
              45,
              49,
              48,
              55,
              100,
              45,
              52,
              52,
              49,
              97,
              45,
              57,
              55,
              51,
              56,
              45,
              56,
              55,
              101,
              102,
              49,
              57,
              51,
              49,
              49,
              52,
              99,
              50,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              65,
              115,
              105,
              115,
              104,
              67,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              52,
              58,
              51,
              52,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              103,
              101,
              110,
              101,
              116,
              105,
              99,
              95,
              114,
              105,
              115,
              107,
              115,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              100,
              97,
              116,
              101,
              116,
              105,
              109,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              53,
              55,
              58,
              51,
              56,
              46,
              50,
              48,
              57,
              90,
              34,
              125,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              97,
              115,
              105,
              115,
              104,
              46,
              110,
              97,
              121,
              97,
              107,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              53,
              55,
              58,
              52,
              48,
              46,
              53,
              48,
              49,
              54,
              48,
              50,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              112,
              114,
              111,
              103,
              110,
              111,
              115,
              116,
              105,
              99,
              95,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              99,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              112,
              114,
              111,
              103,
              110,
              111,
              115,
              116,
              105,
              99,
              95,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              99,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              50,
              55,
              102,
              101,
              100,
              98,
              98,
              45,
              49,
              100,
              99,
              99,
              45,
              52,
              49,
              50,
              57,
              45,
              98,
              99,
              100,
              97,
              45,
              50,
              55,
              97,
              49,
              53,
              48,
              98,
              55,
              56,
              51,
              54,
              101,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              54,
              58,
              48,
              50,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              54,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              99,
              110,
              115,
              95,
              98,
              114,
              97,
              105,
              110,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              99,
              108,
              105,
              110,
              105,
              99,
              97,
              108,
              95,
              116,
              114,
              105,
              97,
              108,
              115,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              100,
              97,
              116,
              101,
              116,
              105,
              109,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              51,
              52,
              58,
              48,
              54,
              46,
              48,
              52,
              51,
              90,
              34,
              125,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              115,
              97,
              109,
              98,
              105,
              116,
              46,
              115,
              97,
              104,
              111,
              111,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              53,
              54,
              58,
              53,
              50,
              46,
              55,
              52,
              53,
              51,
              52,
              56,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              99,
              102,
              53,
              50,
              49,
              55,
              55,
              45,
              98,
              101,
              49,
              100,
              45,
              52,
              57,
              100,
              49,
              45,
              97,
              102,
              99,
              57,
              45,
              55,
              48,
              56,
              97,
              51,
              98,
              102,
              56,
              57,
              49,
              53,
              52,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              77,
              97,
              100,
              104,
              117,
              115,
              109,
              105,
              116,
              97,
              64,
              49,
              51,
              58,
              49,
              52,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              52,
              57,
              58,
              51,
              52,
              46,
              54,
              51,
              54,
              48,
              51,
              48,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              99,
              49,
              49,
              53,
              51,
              54,
              97,
              45,
              57,
              102,
              49,
              48,
              45,
              52,
              101,
              57,
              100,
              45,
              57,
              98,
              52,
              98,
              45,
              51,
              53,
              55,
              98,
              49,
              97,
              50,
              57,
              56,
              98,
              52,
              53,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              65,
              80,
              84,
              50,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              53,
              49,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              111,
              119,
              101,
              108,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              109,
              97,
              100,
              104,
              117,
              115,
              109,
              105,
              116,
              97,
              110,
              97,
              116,
              104,
              56,
              48,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              56,
              58,
              51,
              50,
              58,
              49,
              54,
              46,
              56,
              56,
              52,
              55,
              56,
              57,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              100,
              56,
              55,
              100,
              98,
              97,
              50,
              45,
              56,
              100,
              99,
              54,
              45,
              52,
              52,
              102,
              52,
              45,
              98,
              52,
              102,
              54,
              45,
              99,
              97,
              97,
              52,
              52,
              57,
              54,
              98,
              51,
              57,
              54,
              99,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              67,
              114,
              101,
              97,
              116,
              101,
              78,
              111,
              119,
              64,
              54,
              58,
              52,
              56,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              97,
              115,
              105,
              115,
              104,
              46,
              110,
              97,
              121,
              97,
              107,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              52,
              58,
              52,
              48,
              58,
              53,
              50,
              46,
              54,
              54,
              52,
              57,
              50,
              51,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              101,
              99,
              50,
              98,
              57,
              55,
              57,
              101,
              45,
              53,
              52,
              100,
              57,
              45,
              52,
              53,
              55,
              55,
              45,
              97,
              50,
              99,
              56,
              45,
              97,
              53,
              51,
              54,
              97,
              102,
              98,
              99,
              98,
              100,
              101,
              49,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              65,
              80,
              84,
              49,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              53,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              101,
              115,
              111,
              112,
              104,
              97,
              103,
              101,
              97,
              108,
              95,
              115,
              116,
              111,
              109,
              97,
              99,
              104,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              109,
              97,
              100,
              104,
              117,
              115,
              109,
              105,
              116,
              97,
              110,
              97,
              116,
              104,
              56,
              48,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              52,
              84,
              49,
              49,
              58,
              48,
              53,
              58,
              53,
              50,
              46,
              49,
              51,
              50,
              51,
              53,
              49,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              54,
              51,
              98,
              53,
              57,
              102,
              101,
              45,
              101,
              55,
              97,
              97,
              45,
              52,
              100,
              54,
              98,
              45,
              97,
              55,
              52,
              56,
              45,
              52,
              49,
              102,
              102,
              49,
              57,
              99,
              98,
              48,
              98,
              52,
              54,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              73,
              110,
              116,
              101,
              103,
              114,
              97,
              116,
              105,
              111,
              110,
              55,
              40,
              48,
              57,
              45,
              48,
              55,
              45,
              50,
              48,
              50,
              52,
              41,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              103,
              97,
              110,
              105,
              109,
              54,
              48,
              48,
              52,
              57,
              64,
              98,
              115,
              105,
              100,
              101,
              115,
              109,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              52,
              84,
              49,
              48,
              58,
              49,
              52,
              58,
              49,
              57,
              46,
              54,
              57,
              53,
              55,
              51,
              51,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              99,
              108,
              105,
              110,
              105,
              99,
              97,
              108,
              95,
              116,
              114,
              105,
              97,
              108,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1047,
          "responseSize": 4273
        },
        "id": "84b97a55-6d25-4bf7-9aac-216c2cf78098",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4c5d613a-b6f1-45eb-9886-2ee270e83181",
          "length": 92,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cdba47a9-a44a-45f9-af9c-8069ef3bc5d3"
        },
        "item": {
          "id": "9e241d7f-293a-4962-8329-1ba363d79ff8",
          "name": "Validate list of confirmed Patient not displaying without Authorization",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "81095d15-ab75-4da1-a14e-1f7a2b586025",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "b1cbd4b0-f63f-408b-b429-1a14c9997770"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "c824ce6b-a124-4cf6-8c7d-eae9e7187a4b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "3e2e5ee2-d5ce-4ce0-9ebe-93ad4c3615f1"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1acd20f0-e1bf-44e3-b231-28cb4b1389ed",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "4abc24cd-3fe4-4687-b990-b0de0d6decaa",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:21 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 266,
          "responseSize": 62
        },
        "id": "9e241d7f-293a-4962-8329-1ba363d79ff8",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a20ae603-864e-4481-87fb-d6f155892e6b",
          "length": 92,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "baf40ff9-a1a9-474b-99e5-f8508b6313fe"
        },
        "item": {
          "id": "e228695f-6a26-43c1-b0a0-d0e5e940fbb9",
          "name": "Validate list of confirmed Patient not displaying to the user as token is invalid/expired.",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d9c5a4f1-e8fd-437d-a09b-10fc43da837c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "9fe9d793-f1bc-45c9-87e8-6f6e8df66eb8"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1b3821c6-2ba4-4c91-8220-0eb5f6fd1776",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "853664f4-c8ae-418a-a145-6b2db747b472",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:21 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 296,
          "responseSize": 58
        },
        "id": "e228695f-6a26-43c1-b0a0-d0e5e940fbb9",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ff724f40-e61e-4ba8-b4f2-56df6ffa59ec",
          "length": 92,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99dce813-1605-4fb1-9f8f-0375d029dc9a"
        },
        "item": {
          "id": "92656b0b-2369-4392-8079-f8a87a6d6c90",
          "name": "Validate list of confirmed Patient not displaying with incorrect query data",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "100"
                },
                {
                  "key": "limit",
                  "value": "100"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7cdb2487-b470-4705-a05f-7977e03c861d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Cannot find patients\");\r",
                  "});"
                ],
                "_lastExecutionId": "9553e4c5-8cee-4af8-b299-546602fb55c3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "14854e8c-6c6f-4366-b31c-617f95e26b0c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "6d547375-7312-4e37-9231-832b2f25eba3"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "100"
              },
              {
                "key": "limit",
                "value": "100"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9ebb65e7-f4e0-4c8c-aae1-799ffbf58516",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "48306c43-d5f2-4973-aff0-7a614a64e5bc",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:21 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "51"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              97,
              110,
              110,
              111,
              116,
              32,
              102,
              105,
              110,
              100,
              32,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 686,
          "responseSize": 51
        },
        "id": "92656b0b-2369-4392-8079-f8a87a6d6c90",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "691d8cf4-e455-4feb-8070-ac8cb077f8fe",
          "length": 92,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6e7fdce5-2620-4c82-ab2a-f5a08d0d7e86"
        },
        "item": {
          "id": "de8c4d0a-6cf1-42a7-b7d3-89a18f0cdde5",
          "name": "Validate list of confirmed Patient not displaying to the user as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "0"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "38d44af9-de84-4d2c-b318-2d171b037f85",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "3ca642a0-aa8f-4234-b0ea-2a2701014a9b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d7d45973-b8cd-47e0-8336-ce9b954cff8d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "6a750652-6762-4e53-8891-552d6ad0200b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "0"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3eef1837-e763-4e8e-99f4-5ec3e32ddfa3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d8e14d01-455f-42de-969b-fe6f7739fe01",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:22 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 266,
          "responseSize": 31
        },
        "id": "de8c4d0a-6cf1-42a7-b7d3-89a18f0cdde5",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "760c68d6-1f6d-480e-a145-edf2dc1adb4c",
          "length": 92,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1cd272c7-5ec3-429d-86e0-4b9d2c340692"
        },
        "item": {
          "id": "9b50759f-1773-4a9f-956d-77287aa64411",
          "name": "Validate user is able to upload variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);"
                ],
                "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1fb63a5c-7993-4f01-ab09-05717478ec55",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "db61ceca-3048-4c22-94d8-15ee46cad65c",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:22 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 529,
          "responseSize": 90
        },
        "id": "9b50759f-1773-4a9f-956d-77287aa64411",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
              "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:6)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "Cannot read properties of undefined (reading 'id')",
              "checksum": "7968b7e0e6adfbc32cfd96627c083201",
              "id": "01fd80f7-731d-4265-81e2-a0c136ab4329",
              "timestamp": 1721906722641,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "83468850-ccf5-4c0c-834d-ba24592ac0a7",
          "length": 92,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0f797f61-aa58-44e4-87ec-e68344a25af8"
        },
        "item": {
          "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
          "name": "Validate user is able to upload multiple variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                    "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95606b33-9117-47af-8e4e-bdf9cd5445c0",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5cd98681-eafb-4862-b94d-44272a4aa6ea",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:23 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 527,
          "responseSize": 90
        },
        "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
              "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d0839d2c-f03a-44f8-bd3c-50d64cf455aa",
          "length": 92,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d94ba466-c0ed-458b-b984-5842469264fe"
        },
        "item": {
          "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
          "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c9df95b1-ae69-43c7-840d-2354d5d2b051",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e74e2b79-7e60-47f5-979a-05ff3adca1b9",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:24 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 531,
          "responseSize": 90
        },
        "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 400 but got 422",
              "stack": "AssertionError: expected response to have status code 400 but got 422\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Only VCF and TSV files are allowed'",
              "stack": "AssertionError: expected undefined to deeply equal 'Only VCF and TSV files are allowed'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ef9dd85e-d600-4d58-862a-769cde1cceae",
          "length": 92,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6195ea31-ec1b-4248-aeab-6b6fc9502e24"
        },
        "item": {
          "id": "700b3998-8199-4973-8a9a-a175e87ab023",
          "name": "Validate user is able  to upload variants file without id",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);\r",
                  ""
                ],
                "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a76a860d-bc22-47d5-b703-f6981aa61696",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c89ef21e-20a2-487f-b401-495da3578be0",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:24 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 525,
          "responseSize": 90
        },
        "id": "700b3998-8199-4973-8a9a-a175e87ab023",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
              "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:9)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "Cannot read properties of undefined (reading 'id')",
              "checksum": "7968b7e0e6adfbc32cfd96627c083201",
              "id": "ff0002c0-ec5f-4b70-b6f6-1554c4f05ace",
              "timestamp": 1721906724461,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0c63073f-f15f-4f76-a3b7-c9d3ce4ffe1b",
          "length": 92,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac4282ab-96dc-430c-8630-eb653435f07a"
        },
        "item": {
          "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
          "name": "Validate user is unable to upload without variants file",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                  "\r",
                  "setTimeout(function() {\r",
                  "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                  "}, delay);\r",
                  ""
                ],
                "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "beebf314-047b-4a0e-b11f-4fc9ecdd6ce9",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "173",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "fileName": ""
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "8f13408e-e212-4dfc-9237-5938991bffba",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:30 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "65"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              121,
              32,
              86,
              67,
              70,
              32,
              97,
              110,
              100,
              32,
              84,
              83,
              86,
              32,
              102,
              105,
              108,
              101,
              115,
              32,
              97,
              114,
              101,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 933,
          "responseSize": 65
        },
        "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d2df9e9b-86fd-4b40-81fa-2cc9d06c4622",
          "length": 92,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "42605c33-2cbd-4167-b5db-1a904c4d2954"
        },
        "item": {
          "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
          "name": "Validate user is unable to upload variants file as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a497a3e5-a924-4f44-b511-507727363c0a",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ce1d3dcf-8fac-4099-bcce-52787ca6157d",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:32 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 550,
          "responseSize": 90
        },
        "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 401 but got 422",
              "stack": "AssertionError: expected response to have status code 401 but got 422\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Token is invalid or expired'",
              "stack": "AssertionError: expected undefined to deeply equal 'Token is invalid or expired'\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "dc018a7e-0985-4d50-8e45-d64a49025221",
          "length": 92,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5b03abce-7269-4f58-9f33-70bbc35ab429"
        },
        "item": {
          "id": "10cfbd55-1350-4c27-a191-47395c13561a",
          "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "10277779-cd7a-4842-a3be-0fe6e0abed8f",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "97f64954-667d-4716-8c32-e9b7375a1a3a",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:32 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 579,
          "responseSize": 31
        },
        "id": "10cfbd55-1350-4c27-a191-47395c13561a",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cbb0b7c8-0505-4602-814f-63f0be6c3bdd",
          "length": 92,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f87cbe52-aac0-4a7e-8611-1977c197589a"
        },
        "item": {
          "id": "c33289c5-5825-4808-9185-45219e1e1aff",
          "name": "Validate the user is able to validate variants successfully",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2003266d-804e-4741-a0bc-dc041fa49807",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) validated successfully\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  "let p_variant_task_id = response.data.task_id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_variant_task_id\", p_variant_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_variant_task_id set to:\", p_variant_task_id);"
                ],
                "_lastExecutionId": "141e1c2c-a6c8-4ce6-a29c-10b7b051762e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "82e62b79-9f67-49c5-a6de-650dfe14260f",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c4141ef5-8154-49b8-8a80-e9ee98a62865",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:33 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2757"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              40,
              115,
              41,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              57,
              53,
              97,
              49,
              55,
              97,
              51,
              98,
              45,
              98,
              98,
              102,
              101,
              45,
              52,
              52,
              57,
              53,
              45,
              98,
              49,
              51,
              101,
              45,
              54,
              97,
              52,
              55,
              51,
              55,
              54,
              50,
              48,
              50,
              100,
              51,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              102,
              49,
              56,
              54,
              52,
              97,
              53,
              51,
              45,
              48,
              99,
              99,
              50,
              45,
              52,
              54,
              99,
              48,
              45,
              57,
              52,
              55,
              100,
              45,
              102,
              97,
              54,
              53,
              97,
              56,
              99,
              53,
              50,
              102,
              56,
              102,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              57,
              55,
              102,
              52,
              98,
              57,
              51,
              45,
              99,
              53,
              98,
              53,
              45,
              52,
              100,
              53,
              100,
              45,
              98,
              52,
              98,
              57,
              45,
              56,
              102,
              98,
              97,
              50,
              102,
              102,
              48,
              48,
              102,
              51,
              101,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              55,
              52,
              48,
              98,
              99,
              99,
              48,
              57,
              45,
              100,
              54,
              57,
              57,
              45,
              52,
              101,
              102,
              57,
              45,
              57,
              101,
              98,
              56,
              45,
              57,
              102,
              102,
              49,
              49,
              102,
              99,
              99,
              55,
              48,
              97,
              49,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              51,
              55,
              101,
              52,
              56,
              49,
              53,
              48,
              45,
              54,
              56,
              99,
              50,
              45,
              52,
              98,
              49,
              98,
              45,
              56,
              56,
              53,
              55,
              45,
              52,
              55,
              55,
              100,
              51,
              51,
              101,
              97,
              98,
              49,
              101,
              100,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              97,
              97,
              52,
              98,
              101,
              54,
              57,
              55,
              45,
              49,
              99,
              55,
              102,
              45,
              52,
              56,
              56,
              102,
              45,
              97,
              99,
              54,
              55,
              45,
              50,
              101,
              56,
              54,
              52,
              57,
              98,
              98,
              54,
              97,
              99,
              50,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              57,
              50,
              48,
              98,
              56,
              98,
              50,
              98,
              45,
              97,
              50,
              50,
              51,
              45,
              52,
              98,
              57,
              57,
              45,
              97,
              100,
              52,
              48,
              45,
              50,
              56,
              97,
              51,
              52,
              54,
              51,
              52,
              99,
              56,
              101,
              98,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              56,
              52,
              54,
              102,
              56,
              101,
              102,
              50,
              45,
              52,
              48,
              52,
              48,
              45,
              52,
              98,
              48,
              54,
              45,
              98,
              54,
              56,
              102,
              45,
              102,
              49,
              57,
              49,
              101,
              101,
              54,
              53,
              101,
              53,
              102,
              51,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              93,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              52,
              48,
              101,
              52,
              99,
              102,
              57,
              45,
              102,
              57,
              55,
              49,
              45,
              52,
              56,
              99,
              52,
              45,
              56,
              98,
              98,
              56,
              45,
              50,
              53,
              52,
              55,
              57,
              53,
              98,
              48,
              98,
              102,
              97,
              57,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              110,
              103,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              80,
              69,
              78,
              68,
              73,
              78,
              71,
              34,
              44,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              98,
              97,
              99,
              107,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              95,
              100,
              111,
              110,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              50,
              53,
              58,
              51,
              52,
              46,
              55,
              53,
              48,
              50,
              52,
              55,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2180,
          "responseSize": 2757
        },
        "id": "c33289c5-5825-4808-9185-45219e1e1aff",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d0548a9f-b6ff-4b40-b7ab-08cd3cd3ac78",
          "length": 92,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9bb9e97b-d824-4673-bcd3-8ec2a071b15f"
        },
        "item": {
          "id": "ddb477c4-1745-4e50-a22b-717383d26ece",
          "name": "Validate the user is unable to validate variants with incorrect query data",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7fb0ca6-64c8-4979-b459-9b03b353a10d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "f3afb49d-ff00-4b85-96b8-7e431dabd48d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e02163a9-8ee2-4c4c-88ca-dabddf927e52",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3fa765ab-aa50-4917-aa59-21942e7098a6",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:33 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 935,
          "responseSize": 53
        },
        "id": "ddb477c4-1745-4e50-a22b-717383d26ece",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e2993dde-7b2e-4386-91ff-58dbe0de8d7a",
          "length": 92,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f1fadb40-1684-4870-9fdc-217f0f28aa0d"
        },
        "item": {
          "id": "3e1867f9-4016-49bd-8628-bfa06dd76701",
          "name": "Validate the user is unable to validate variants without query data",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e5326141-b166-46b3-9a55-54828fea4ebd",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "c9167043-ed89-40ac-a9d1-5864e4f073b7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5a399cec-d294-4c4e-95f6-3b50ffd7a8c5",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "71db98de-fdd2-4127-a8c5-970cabe1cbd1",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:36 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1004,
          "responseSize": 53
        },
        "id": "3e1867f9-4016-49bd-8628-bfa06dd76701",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8ea0ce8b-e5d1-4195-ae6f-12fdda3c53ff",
          "length": 92,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "05b115e8-fb16-4a51-a931-e99dd32b719e"
        },
        "item": {
          "id": "c80caf43-7d78-4669-b01d-b882a9c27cf8",
          "name": "Validate the user is unable to validate variants without Authorization",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "81949366-cf6a-46ce-97dd-7aa11b51792c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "997e6710-3db9-4481-b6a0-8008f13ef844"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b48274b3-91da-4f51-aab1-529994f20fc5",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "ad78d7a9-8b8d-4190-9e0b-ecfdfea89746",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:37 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 533,
          "responseSize": 62
        },
        "id": "c80caf43-7d78-4669-b01d-b882a9c27cf8",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8eb20334-7a89-4475-b392-f76f064d5aee",
          "length": 92,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "45373a3e-e5dd-4f40-ab4c-dab22c9a7c82"
        },
        "item": {
          "id": "be0e83a5-89d4-48a0-987d-b9dba8ecc44b",
          "name": "Validate the user is unable to validate variants as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1780e7c4-4d66-4992-8faa-13356cf970df",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "1e858664-f065-42ef-9e62-1efb88181726"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ba8f8940-9795-41dc-a0af-6f47b09f1cd3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "fa8ac3ad-a8bc-4f80-9bf7-7dc7a204cc28",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:37 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 573,
          "responseSize": 58
        },
        "id": "be0e83a5-89d4-48a0-987d-b9dba8ecc44b",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e5857371-ca30-4919-836b-a781de0976fa",
          "length": 92,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6084c693-b869-4f70-9945-bc7ccd4a3cbb"
        },
        "item": {
          "id": "d9dbe890-4156-4145-bd83-a37735b280c7",
          "name": "Validate the user is unable to validate variants as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a859a256-e5ce-4d39-8d8f-82863a5b6c3e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "34b8e686-8919-4bb4-b5b9-59fac3a5ee38"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "872e206a-151a-4045-b5f0-0660d29c2732",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "82a2523f-5113-4361-ab3f-e95846222550",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:38 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 531,
          "responseSize": 31
        },
        "id": "d9dbe890-4156-4145-bd83-a37735b280c7",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1f245216-6ff8-40a3-a9e1-688a690144b8",
          "length": 92,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "97efbab2-7bb8-44da-a125-7f879d535ded"
        },
        "item": {
          "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
          "name": "Validate user is able to upload medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "84465054-7aba-4a53-a2c2-d392054bd5fb",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "32b96de3-d6d0-409e-ac68-dc0ca68bb0ab",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:38 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 533,
          "responseSize": 90
        },
        "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:19)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
              "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:19)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a15d8895-359d-495f-8206-0a50c303d6dd",
          "length": 92,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "50348925-1fde-4d9c-9ee1-29513ef84542"
        },
        "item": {
          "id": "b499e471-8849-4710-87c6-4914225a98a1",
          "name": "Validate user is able to upload medical files successfully without id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e3027deb-5254-456e-b719-88c3e549aeb3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9e8a9030-c97b-45c6-8900-b43d9b815742",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:39 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 531,
          "responseSize": 90
        },
        "id": "b499e471-8849-4710-87c6-4914225a98a1",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
              "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "20d8e30a-d859-4b3e-86ab-3404718a28d3",
          "length": 92,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "72de8765-024b-4869-bfeb-6069378f5821"
        },
        "item": {
          "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
          "name": "Validate user is able to upload multiple medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                    "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  "let responseData = pm.response.json();\r",
                  "let p_other_task_id = responseData.task_id;\r",
                  "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                ],
                "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "127c338c-eff4-4569-8d56-83adccb23120",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "573b93c9-521d-4e5f-8168-7ed7866661cb",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:40 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 541,
          "responseSize": 90
        },
        "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
              "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "3dbd7c3b-854c-4f1a-ac68-97e44661b369",
          "length": 92,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a797aad1-1045-4671-9ad2-44a0d13531d3"
        },
        "item": {
          "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
          "name": "Validate user is unable to upload medical fileswith incorrect id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9bd247a3-4ca0-4c69-9edf-a444b3d77f25",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7ac7f6ac-0319-4af6-b967-77fd53af6afe",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:40 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 530,
          "responseSize": 90
        },
        "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 400 but got 422",
              "stack": "AssertionError: expected response to have status code 400 but got 422\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Unknown error occurred'",
              "stack": "AssertionError: expected undefined to deeply equal 'Unknown error occurred'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "c04bb097-150c-4502-8257-92b853510ce4",
          "length": 92,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0db9300-fadb-4203-b73d-7ac23823b7b1"
        },
        "item": {
          "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
          "name": "Validate user is unable to upload medical files as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9fca95eb-0fb2-40bb-a5de-b27fa09a6416",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3612820d-f071-41b2-aa16-bf0160a8c54f",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:41 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 530,
          "responseSize": 90
        },
        "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 401 but got 422",
              "stack": "AssertionError: expected response to have status code 401 but got 422\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Token is invalid or expired'",
              "stack": "AssertionError: expected undefined to deeply equal 'Token is invalid or expired'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "90b742d3-4fce-49d9-bedc-612cbfc84ac9",
          "length": 92,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9ae4f344-35cc-454a-bef6-253ed85c6985"
        },
        "item": {
          "id": "965385e0-5aca-450f-92df-9de7e76871ed",
          "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9e7a6879-0084-495f-abef-90aefa19630e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "05f01fbb-be75-4780-b5cb-d26b000c9fb9",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:41 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 531,
          "responseSize": 31
        },
        "id": "965385e0-5aca-450f-92df-9de7e76871ed",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ebd5dd78-28ee-4964-9007-4368004ca186",
          "length": 92,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bb442eba-a640-4ebc-89ea-139e22787096"
        },
        "item": {
          "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
          "name": "Validate user is able to check status of task successfully for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fad852b9-e4ce-422d-86c2-b3162c6468c9",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "57",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e0bdf62c-87f3-4114-a883-89f2423af942",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:42 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "66"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              97,
              115,
              107,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              99,
              111,
              117,
              108,
              100,
              32,
              110,
              111,
              116,
              32,
              98,
              101,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1139,
          "responseSize": 66
        },
        "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response has all required fields",
              "message": "expected { status: 'error', …(1) } to have property 'data'",
              "stack": "AssertionError: expected { status: 'error', …(1) } to have property 'data'\n   at Object.eval sandbox-script.js:1:25)"
            }
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:2:25)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response message is Valid",
              "message": "expected 'Task details could not be retrieved' to deeply equal 'Task details retrieved successfully'",
              "stack": "AssertionError: expected 'Task details could not be retrieved' to deeply equal 'Task details retrieved successfully'\n   at Object.eval sandbox-script.js:3:25)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "80435c03-066a-4a7f-9f3e-135c50625e79",
          "length": 92,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fcbfc378-2738-4bab-b7e6-52352e7e455e"
        },
        "item": {
          "id": "ff66f542-7d9f-4651-a0e5-f7691348f068",
          "name": "Validate user is able to check status of task successfully for Patient Variant File",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec5ec586-901d-4bba-9a02-d716d4e5684e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "7161bbb0-69d8-4d8e-9052-0bfe300866a9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f37a42ae-7304-4b17-ad00-f5106d2c71a0",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "57",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"540e4cf9-f971-48c4-8bb8-254795b0bfa9\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "43351e07-a49d-4a12-8c94-109c32867d49",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "1036"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              97,
              115,
              107,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              52,
              48,
              101,
              52,
              99,
              102,
              57,
              45,
              102,
              57,
              55,
              49,
              45,
              52,
              56,
              99,
              52,
              45,
              56,
              98,
              98,
              56,
              45,
              50,
              53,
              52,
              55,
              57,
              53,
              98,
              48,
              98,
              102,
              97,
              57,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              83,
              85,
              67,
              67,
              69,
              83,
              83,
              34,
              44,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              123,
              39,
              115,
              117,
              109,
              109,
              97,
              114,
              121,
              95,
              116,
              101,
              120,
              116,
              39,
              58,
              32,
              39,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              32,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              32,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              39,
              44,
              32,
              39,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              108,
              105,
              115,
              116,
              39,
              58,
              32,
              91,
              123,
              39,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              39,
              58,
              32,
              39,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              39,
              44,
              32,
              39,
              83,
              116,
              97,
              116,
              117,
              115,
              39,
              58,
              32,
              39,
              86,
              97,
              108,
              105,
              100,
              39,
              44,
              32,
              39,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              39,
              58,
              32,
              39,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              99,
              101,
              49,
              55,
              99,
              102,
              52,
              98,
              45,
              101,
              51,
              54,
              99,
              45,
              52,
              98,
              100,
              99,
              45,
              56,
              99,
              53,
              53,
              45,
              98,
              49,
              52,
              52,
              48,
              56,
              99,
              50,
              101,
              52,
              54,
              98,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              39,
              44,
              32,
              39,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              39,
              58,
              32,
              39,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              39,
              44,
              32,
              39,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              39,
              58,
              32,
              39,
              50,
              48,
              48,
              48,
              48,
              39,
              44,
              32,
              39,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              39,
              58,
              32,
              39,
              49,
              48,
              48,
              48,
              48,
              39,
              44,
              32,
              39,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              39,
              58,
              32,
              39,
              53,
              48,
              48,
              48,
              39,
              125,
              44,
              32,
              123,
              39,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              39,
              58,
              32,
              39,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              39,
              44,
              32,
              39,
              83,
              116,
              97,
              116,
              117,
              115,
              39,
              58,
              32,
              39,
              86,
              97,
              108,
              105,
              100,
              39,
              44,
              32,
              39,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              39,
              58,
              32,
              39,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              102,
              101,
              48,
              54,
              101,
              50,
              50,
              97,
              45,
              54,
              102,
              50,
              56,
              45,
              52,
              52,
              54,
              98,
              45,
              98,
              54,
              101,
              54,
              45,
              98,
              55,
              101,
              98,
              56,
              54,
              99,
              100,
              97,
              102,
              97,
              49,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              39,
              44,
              32,
              39,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              39,
              58,
              32,
              39,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              39,
              44,
              32,
              39,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              39,
              58,
              32,
              39,
              50,
              48,
              48,
              48,
              48,
              39,
              44,
              32,
              39,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              39,
              58,
              32,
              39,
              49,
              48,
              48,
              48,
              48,
              39,
              44,
              32,
              39,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              39,
              58,
              32,
              39,
              53,
              48,
              48,
              48,
              39,
              125,
              93,
              125,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              98,
              97,
              99,
              107,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              95,
              100,
              111,
              110,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              32,
              49,
              49,
              58,
              50,
              53,
              58,
              52,
              50,
              46,
              55,
              48,
              54,
              48,
              48,
              54,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1391,
          "responseSize": 1036
        },
        "id": "ff66f542-7d9f-4651-a0e5-f7691348f068",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "93ebed48-78f7-4e42-95c7-108e5d206f11",
          "length": 92,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fcaf76a7-ca74-48ff-ac90-a912fd5d34fa"
        },
        "item": {
          "id": "5853c684-b770-4e12-a312-64d1c38f3640",
          "name": "Validate user is unable to check status as task_id is incorrect.",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "12669a2d-144e-4628-aa01-064ec779b05c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                  "});"
                ],
                "_lastExecutionId": "6431a0f2-2732-4dc9-8472-7aa00ff48cfa"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8de24566-b87c-4fb1-9682-97f83e1c93ce",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "27",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e9d0de0e-f4d1-4581-8d34-9a1c27f0989e",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "66"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              97,
              115,
              107,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              99,
              111,
              117,
              108,
              100,
              32,
              110,
              111,
              116,
              32,
              98,
              101,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1117,
          "responseSize": 66
        },
        "id": "5853c684-b770-4e12-a312-64d1c38f3640",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "335c78fe-7844-48ad-83cf-d972a07ae13a",
          "length": 92,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "935978c7-9bbf-4bd1-b114-691f4a676912"
        },
        "item": {
          "id": "f474f736-19b3-4eec-a0cd-bd9cdda2ceae",
          "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9fc3292c-3310-4c63-8995-b2ffe3425d4a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "72605b4b-c4f0-4ff7-a1c0-a2c9514b9f26"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "84e35157-e805-482c-8887-028602269cb6",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "8",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5064cf74-9da5-4077-a540-17cac8a7dfda",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:46 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 922,
          "responseSize": 53
        },
        "id": "f474f736-19b3-4eec-a0cd-bd9cdda2ceae",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "28f27f85-b12e-4c91-9b0b-dd52a0cfe981",
          "length": 92,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d280c714-54c7-4422-beac-75e08f288c93"
        },
        "item": {
          "id": "1c4dafeb-520e-49ae-b305-7375a2ef062f",
          "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "64d8268b-bdc3-4cea-bf11-1114b08f659a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "0f6d1daf-78d6-4312-922d-3bfa174a2cda"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "eb9b4da9-1dcf-4d4f-86a1-334044a2a480",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "8",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1aa212c0-9670-4200-a190-8b373e7342f9",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:47 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 946,
          "responseSize": 53
        },
        "id": "1c4dafeb-520e-49ae-b305-7375a2ef062f",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d62058b4-d370-4b7e-9281-676ef4cac26e",
          "length": 92,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "44799ac6-3614-4cca-9894-9bc8dccf7f6d"
        },
        "item": {
          "id": "62aaa003-7636-4064-bb85-79cab54549fb",
          "name": "Validate user is unable to check status as the token is invalid.",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e79c92ef-1fbf-4d48-95e9-131024c4684a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "cc88a5ca-5017-4581-9fa0-85630cc1039f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1e2c5923-4826-466f-a35b-eadd9d1d4dc0",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "40",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5c4ed054-0b7f-4b43-b275-027d6c795087",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:47 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 595,
          "responseSize": 58
        },
        "id": "62aaa003-7636-4064-bb85-79cab54549fb",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f3638380-b305-4524-ba92-faa6e9a7448a",
          "length": 92,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3a3feb08-eca6-4435-ba76-a4bc07d4645f"
        },
        "item": {
          "id": "fba8e0ba-22dc-4368-86f3-d8cdff0dba66",
          "name": "Validate user is unable check status as incorrect CRUD operation is used.",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a570fc80-e138-4907-8d15-2f9206e6e760",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "aefedbde-d726-4576-8266-caf674878f8f"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f7089e58-545e-45d7-94cf-19ad031e014f",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "40",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "2b82ed25-0fc8-496f-ae35-864b1ad4b392",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 528,
          "responseSize": 31
        },
        "id": "fba8e0ba-22dc-4368-86f3-d8cdff0dba66",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3eb9271e-6f4b-41bb-8ec9-2c6ac70b8a3e",
          "length": 92,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2c25756c-1fb1-486e-bb63-5b1970538861"
        },
        "item": {
          "id": "83479e18-2505-48b9-b4df-e23598618caf",
          "name": "Validate user is able to fetch patient's data successfully",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "05434c8b-d8bc-4f30-ba48-548b6ca3c2ad"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f27e72a5-5d44-4e41-96e3-4331fea1c373",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Status Code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient details fetched successfully.\");\r",
                  "});"
                ],
                "_lastExecutionId": "d037ec88-b2cd-4ac8-9598-04d7a38993bd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "05434c8b-d8bc-4f30-ba48-548b6ca3c2ad"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "86d8cacf-1502-4ff1-9db5-e96d7a024f0c",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1990d61b-96ea-459e-a908-491547f30772",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2147"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              46,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              53,
              52,
              51,
              52,
              99,
              56,
              98,
              45,
              100,
              56,
              98,
              99,
              45,
              52,
              102,
              51,
              48,
              45,
              98,
              97,
              52,
              56,
              45,
              53,
              52,
              56,
              98,
              54,
              99,
              97,
              51,
              99,
              50,
              97,
              100,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              48,
              52,
              49,
              56,
              51,
              53,
              52,
              53,
              50,
              49,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              78,
              97,
              109,
              101,
              95,
              54,
              79,
              103,
              83,
              51,
              74,
              90,
              49,
              95,
              49,
              55,
              50,
              48,
              52,
              49,
              56,
              51,
              53,
              52,
              53,
              50,
              49,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              101,
              99,
              111,
              103,
              95,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              99,
              111,
              109,
              111,
              114,
              98,
              105,
              100,
              105,
              116,
              105,
              101,
              115,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              115,
              117,
              98,
              95,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              111,
              110,
              100,
              105,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              77,
              111,
              100,
              101,
              114,
              97,
              116,
              101,
              108,
              121,
              32,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              116,
              105,
              97,
              116,
              101,
              100,
              32,
              97,
              100,
              101,
              110,
              111,
              99,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              119,
              105,
              116,
              104,
              32,
              97,
              32,
              112,
              114,
              101,
              100,
              111,
              109,
              105,
              110,
              97,
              110,
              116,
              108,
              121,
              32,
              109,
              105,
              99,
              114,
              111,
              112,
              97,
              112,
              105,
              108,
              108,
              97,
              114,
              121,
              32,
              112,
              97,
              116,
              116,
              101,
              114,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              116,
              97,
              115,
              116,
              97,
              115,
              105,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              116,
              97,
              115,
              116,
              97,
              116,
              105,
              99,
              95,
              115,
              105,
              116,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              112,
              108,
              111,
              105,
              100,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              101,
              115,
              116,
              105,
              109,
              97,
              116,
              101,
              100,
              95,
              116,
              117,
              109,
              111,
              114,
              95,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              95,
              116,
              117,
              109,
              111,
              114,
              95,
              99,
              101,
              108,
              108,
              117,
              108,
              97,
              114,
              105,
              116,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              112,
              101,
              99,
              105,
              109,
              101,
              110,
              95,
              115,
              105,
              116,
              101,
              95,
              117,
              115,
              101,
              100,
              95,
              102,
              111,
              114,
              95,
              110,
              103,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              95,
              104,
              105,
              115,
              116,
              111,
              114,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              116,
              109,
              98,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              105,
              99,
              114,
              111,
              115,
              97,
              116,
              101,
              108,
              105,
              116,
              101,
              95,
              105,
              110,
              115,
              116,
              97,
              98,
              105,
              108,
              105,
              116,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              105,
              115,
              109,
              97,
              116,
              99,
              104,
              95,
              114,
              101,
              112,
              97,
              105,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              104,
              111,
              109,
              111,
              108,
              111,
              103,
              111,
              117,
              115,
              95,
              114,
              101,
              99,
              111,
              109,
              98,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              114,
              101,
              112,
              97,
              105,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              112,
              100,
              95,
              108,
              49,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              101,
              114,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              112,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              104,
              101,
              114,
              50,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              111,
              116,
              104,
              101,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              116,
              114,
              101,
              97,
              116,
              101,
              109,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              116,
              114,
              101,
              97,
              116,
              101,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              111,
              116,
              95,
              116,
              114,
              101,
              97,
              116,
              101,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              99,
              111,
              110,
              102,
              105,
              114,
              109,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              109,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              115,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              91,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              53,
              50,
              99,
              98,
              102,
              55,
              99,
              101,
              45,
              49,
              97,
              98,
              48,
              45,
              52,
              51,
              100,
              56,
              45,
              98,
              57,
              50,
              98,
              45,
              102,
              48,
              53,
              54,
              100,
              50,
              54,
              100,
              102,
              102,
              100,
              101,
              95,
              95,
              95,
              95,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              118,
              99,
              102,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              48,
              53,
              52,
              51,
              52,
              99,
              56,
              98,
              45,
              100,
              56,
              98,
              99,
              45,
              52,
              102,
              51,
              48,
              45,
              98,
              97,
              52,
              56,
              45,
              53,
              52,
              56,
              98,
              54,
              99,
              97,
              51,
              99,
              50,
              97,
              100,
              47,
              100,
              101,
              102,
              102,
              56,
              97,
              48,
              100,
              45,
              101,
              48,
              57,
              97,
              45,
              52,
              53,
              98,
              101,
              45,
              98,
              100,
              98,
              57,
              45,
              99,
              54,
              98,
              53,
              54,
              53,
              99,
              100,
              51,
              52,
              57,
              98,
              95,
              95,
              95,
              95,
              115,
              97,
              109,
              112,
              108,
              101,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              93,
              44,
              34,
              111,
              116,
              104,
              101,
              114,
              95,
              109,
              101,
              100,
              105,
              99,
              97,
              108,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              99,
              114,
              101,
              101,
              110,
              115,
              104,
              111,
              116,
              32,
              50,
              48,
              50,
              51,
              45,
              49,
              50,
              45,
              50,
              57,
              32,
              49,
              50,
              53,
              48,
              49,
              53,
              46,
              112,
              110,
              103,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              111,
              116,
              104,
              101,
              114,
              95,
              109,
              101,
              100,
              105,
              99,
              97,
              108,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              57,
              51,
              100,
              50,
              101,
              52,
              54,
              99,
              45,
              101,
              98,
              56,
              49,
              45,
              52,
              51,
              55,
              54,
              45,
              98,
              49,
              101,
              57,
              45,
              97,
              52,
              102,
              48,
              49,
              98,
              55,
              101,
              56,
              98,
              98,
              53,
              95,
              95,
              95,
              95,
              83,
              99,
              114,
              101,
              101,
              110,
              115,
              104,
              111,
              116,
              50,
              48,
              50,
              51,
              45,
              49,
              50,
              45,
              50,
              57,
              49,
              50,
              53,
              48,
              49,
              53,
              46,
              112,
              110,
              103,
              34,
              125,
              93,
              44,
              34,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              95,
              115,
              117,
              109,
              109,
              97,
              114,
              121,
              95,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              32,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              32,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              34,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              105,
              116,
              105,
              111,
              110,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              95,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              48,
              56,
              84,
              48,
              53,
              58,
              53,
              53,
              58,
              50,
              55,
              46,
              55,
              52,
              50,
              55,
              48,
              51,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              48,
              56,
              84,
              48,
              54,
              58,
              48,
              55,
              58,
              51,
              51,
              46,
              55,
              53,
              56,
              57,
              54,
              57,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              105,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              105,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              48,
              56,
              84,
              48,
              54,
              58,
              48,
              55,
              58,
              51,
              49,
              46,
              48,
              48,
              51,
              48,
              48,
              48,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              115,
              117,
              109,
              109,
              97,
              114,
              121,
              95,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              32,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              32,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 678,
          "responseSize": 2147
        },
        "id": "83479e18-2505-48b9-b4df-e23598618caf",
        "assertions": [
          {
            "assertion": "Status Code is 200",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2f153b00-fdab-42e4-87f8-68092617cbee",
          "length": 92,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "51b8ba67-a99f-46b7-aa85-77dda8239657"
        },
        "item": {
          "id": "712a3eb0-76de-4ae5-9a80-ae2894f29584",
          "name": "Validate user is unable to fetch patient's data with incorrect query data",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "529c5f73-8b5e-4c74-ac6d-6a7c6c858ace",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status Code is 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Invalid id\");\r",
                  "});"
                ],
                "_lastExecutionId": "49a5b661-d0cb-4095-a8cd-b8df65b0692b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fb02d609-5052-4bb1-825d-71fd6accdcc9",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e841c571-a8c8-4659-b1f4-a10d48c1c05d",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "41"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              105,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 653,
          "responseSize": 41
        },
        "id": "712a3eb0-76de-4ae5-9a80-ae2894f29584",
        "assertions": [
          {
            "assertion": "Status Code is 400",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9ad61e2e-4d34-4777-80e5-8c3ed610a307",
          "length": 92,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "04d364a7-9432-4f50-b2ae-6d7f58c4a505"
        },
        "item": {
          "id": "a98ab882-c926-4743-92e3-0e23ea620441",
          "name": "Validate user is unable to fetch patient's data without query data",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90fa6945-940b-43c0-8909-d46b69ab438f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Invalid id\");\r",
                  "});"
                ],
                "_lastExecutionId": "0e0d87a3-9fbb-498e-907a-e5f4e3a50b73"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "11b319c1-942c-4f3f-a964-7c59865b0363",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "88fadd88-ce02-4b6e-b0fc-bf2258739d3b",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "41"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              105,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 691,
          "responseSize": 41
        },
        "id": "a98ab882-c926-4743-92e3-0e23ea620441",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9b2bad28-da5b-4333-afbd-1514403be9cf",
          "length": 92,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bcfe6b4a-f2bd-4511-bc38-e491b99e7a66"
        },
        "item": {
          "id": "550b3043-c4d9-4f30-84c9-0b5ff5fa892d",
          "name": "Validate user is unable to fetch patient's data without Authorization",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b5dc3762-f090-49ee-86cd-8c30ea0f61a6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "8da91116-7a13-4aa4-9284-aaf6c20f720a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d29a6a56-26a8-47ff-ae7e-44f59807031e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "ab6cb802-7ddd-459d-be78-1c4561081d15",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 264,
          "responseSize": 62
        },
        "id": "550b3043-c4d9-4f30-84c9-0b5ff5fa892d",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7f3a13fd-21dc-44fa-bbc4-144cd243f182",
          "length": 92,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4e5f792d-3a8f-4a59-9b6d-b305fe6f8620"
        },
        "item": {
          "id": "e343a949-c4e9-4d6a-817b-a8b5f8d2a68f",
          "name": "Validate user is unable to fetch patient's data with invalid/expired token",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "928383f0-dc47-408b-be68-ea421a946ceb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "1371a6d4-0843-4e2e-b59e-fefc5022ba6c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5156e749-bb9e-468a-9a73-a31bbd5296b0",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1955c786-02cc-43dd-ae6b-d97e1515aa6c",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 306,
          "responseSize": 58
        },
        "id": "e343a949-c4e9-4d6a-817b-a8b5f8d2a68f",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4f085ce9-5963-4192-af64-fa9015da6945",
          "length": 92,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "24d8faad-1840-4600-9a2b-ace9d4f38c42"
        },
        "item": {
          "id": "24b5f09e-67c2-459f-a33f-c0f041956e35",
          "name": "Validate user is unable to fetch patient's data as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8c2af4a3-658d-4ae0-a85d-c221dd9d71bd",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "6dedce8e-ab83-43d1-b273-f4bb6982f2ed"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e39bc918-0380-466e-965f-9d67c64cfac3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1fd36858-0aab-41ac-9a50-7fa62dade36f",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 264,
          "responseSize": 31
        },
        "id": "24b5f09e-67c2-459f-a33f-c0f041956e35",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "310b1426-4e82-4571-9b4d-5f1b86e83248",
          "length": 92,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "828e8d04-ffcd-4369-98a6-c6945e4b2cb5"
        },
        "item": {
          "id": "7741ba1d-975c-4aeb-a8df-853584226638",
          "name": "Validate user is able to check patient id successfully",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "08a34abd-2ae9-42be-8335-070ad7c2acf1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient id does not exist\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "a3e6ffc8-6707-4b53-ac4a-a37272d9bcfd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e8b9000a-ce66-4ed8-b893-926ab8274095",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let patientId = \"patient_\" + new Date().getTime();\r",
                  "\r",
                  "// Set the environment variable\r",
                  "pm.environment.set(\"patient_id\", patientId);\r",
                  "\r",
                  "console.log(\"Environment Patient ID set to:\", patientId);\r",
                  "\r",
                  "function getRandomString(length) {\r",
                  "    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
                  "    let result = '';\r",
                  "    for (let i = 0; i < length; i++) {\r",
                  "        result += chars.charAt(Math.floor(Math.random() * chars.length));\r",
                  "    }\r",
                  "    return result;\r",
                  "}\r",
                  "\r",
                  "// Generate a unique name using a random string\r",
                  "let name = \"Name_\" + getRandomString(8) + \"_\" + new Date().getTime();\r",
                  "pm.environment.set(\"name\", name);"
                ],
                "_lastExecutionId": "f91c173f-2ee2-46aa-8b1b-6e5fbb0503ac"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "19a78a96-096a-42c7-b71d-7c702efe303b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "45",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721906752065\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bc0bf2b4-c9ff-4d67-904c-8580dd0e38ff",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:53 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "71"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              100,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              101,
              120,
              105,
              115,
              116,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 889,
          "responseSize": 71
        },
        "id": "7741ba1d-975c-4aeb-a8df-853584226638",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "252b7482-d1d2-4be1-afc6-0eb3e2ab36b0",
          "length": 92,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0d082227-7adf-44da-84c7-2a236fdf6aaa"
        },
        "item": {
          "id": "51567a6d-d629-4611-8521-0c5baf194eee",
          "name": "Validate user is able to update patient's information successfully",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\":\"4a92ba9f-d7be-4eb1-bad0-2b22660b2a79\",\r\n    \"patient_id\":\"{{patient_id}}\",\r\n     \"name\": \"{{name}}\",\r\n    \"age\": 20,\r\n    \"gender\":\"female\",\r\n    \"tumor_type\":\"liver_cancer\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\"\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d94b4b58-9b00-413f-b127-3102d105acef",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient info updated successfully.\");\r",
                  "});"
                ],
                "_lastExecutionId": "948e1d65-4028-4b99-bdfa-31573ac538d8"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a3886c61-e719-4c85-a048-70d7bb3b16db",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "49f2bc38-16d2-4b4a-a0c7-a4eb4b01171c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0ba702a4-dbc7-4a75-98aa-f47c11001afd",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "416",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\":\"4a92ba9f-d7be-4eb1-bad0-2b22660b2a79\",\r\n    \"patient_id\":\"patient_1721906752065\",\r\n     \"name\": \"Name_TFXOFkwr_1721906752066\",\r\n    \"age\": 20,\r\n    \"gender\":\"female\",\r\n    \"tumor_type\":\"liver_cancer\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\"\r\n    \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3ac9a5d8-4d4c-4682-9a71-d7169f99226c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:54 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "416"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              110,
              102,
              111,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              46,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              54,
              55,
              53,
              50,
              48,
              54,
              53,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              78,
              97,
              109,
              101,
              95,
              84,
              70,
              88,
              79,
              70,
              107,
              119,
              114,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              54,
              55,
              53,
              50,
              48,
              54,
              54,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              99,
              111,
              109,
              111,
              114,
              98,
              105,
              100,
              105,
              116,
              105,
              101,
              115,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              100,
              105,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              77,
              111,
              100,
              101,
              114,
              97,
              116,
              101,
              108,
              121,
              32,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              116,
              105,
              97,
              116,
              101,
              100,
              32,
              97,
              100,
              101,
              110,
              111,
              99,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              119,
              105,
              116,
              104,
              32,
              97,
              32,
              112,
              114,
              101,
              100,
              111,
              109,
              105,
              110,
              97,
              110,
              116,
              108,
              121,
              32,
              109,
              105,
              99,
              114,
              111,
              112,
              97,
              112,
              105,
              108,
              108,
              97,
              114,
              121,
              32,
              112,
              97,
              116,
              116,
              101,
              114,
              110,
              34,
              44,
              34,
              101,
              99,
              111,
              103,
              95,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              101,
              114,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 906,
          "responseSize": 416
        },
        "id": "51567a6d-d629-4611-8521-0c5baf194eee",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7354de75-6f5a-4955-8013-e4322ffba62f",
          "length": 92,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c4dc6f30-ab71-4b7c-90ca-642021d41f34"
        },
        "item": {
          "id": "3e488e27-d160-4200-95fe-2027bf85aefe",
          "name": "Validate user is unable to update patient's information with missing required field in the body",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"id\":\"{{p_info_task_id}}\",\r\n  \"name\": \"Patient Name\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c226a19b-028a-4490-97ab-f6935c4604bc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Missing required fields\");\r",
                  "});"
                ],
                "_lastExecutionId": "654044f9-7cfe-4d46-9d5e-cae744488481"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cd12004c-e6a5-48b2-8d0b-6e0dc122a4f0",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "370",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\"id\":\"fb252ef4-f285-4e46-ae01-2cf42fa9c65d\",\r\n  \"name\": \"Patient Name\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "82291c39-4b25-4604-84d8-45da29f0ad87",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:54 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              77,
              105,
              115,
              115,
              105,
              110,
              103,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              32,
              102,
              105,
              101,
              108,
              100,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 896,
          "responseSize": 54
        },
        "id": "3e488e27-d160-4200-95fe-2027bf85aefe",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bd389dd4-2bca-4254-bd96-29f9b9c5e8ab",
          "length": 92,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2a542cda-4641-42c4-af45-eb63c5f0490e"
        },
        "item": {
          "id": "a0c6e1f5-f3ff-48da-b51d-02dd8fdae1cb",
          "name": "Validate user is unable to update patient's information without Authorization",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2d8ba41b-03bf-488e-9129-588655cd9146",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "9a343448-ed90-45b7-b55a-df42ea827632"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c4642e18-c8cf-4d17-b98e-b58922cd8feb",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "352",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\":,\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "49b756d4-6b48-40e1-8ac7-63077f40b5d5",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:56 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 533,
          "responseSize": 62
        },
        "id": "a0c6e1f5-f3ff-48da-b51d-02dd8fdae1cb",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "eeafa2b7-ef6e-4729-a3e6-a4134d088116",
          "length": 92,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b941858b-dc1a-4d56-98c7-40a4966cd2d8"
        },
        "item": {
          "id": "41dd9579-1c60-4c5c-95b4-bac9fe06991e",
          "name": "Validate user is unable to update patient's information as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "78fad59f-92a5-4c98-85c5-b15b3acfa58f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "1bd15bbc-3fd0-49a3-ad4d-8ba5c256ea3f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b39abb3e-a0f9-4a72-99ff-6d8db51f958b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "352",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\":,\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a390701b-8d4f-4aa3-9ff3-023c5d5a929a",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:56 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 559,
          "responseSize": 58
        },
        "id": "41dd9579-1c60-4c5c-95b4-bac9fe06991e",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e7a783d1-075a-49ae-b8f6-3b2cbd9dde9c",
          "length": 92,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "271c880e-47e5-4ae8-a1bc-6a85358b6c4f"
        },
        "item": {
          "id": "ba469383-19ef-42db-bbd5-c2db2658c3b5",
          "name": "Validate user is unable to update patient's information as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8dd2e12a-1997-49bf-931e-fc7cc688d9cb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "72585f0f-f6d8-4b5e-89b8-ebd431809718"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "16a10c9a-7a30-401a-b2b4-0fc4287ac5be",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "358",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \r\n    \"id\":,\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1712c4c4-7c68-4412-a846-b6ed6d0504c4",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:57 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "PATCH"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 576,
          "responseSize": 31
        },
        "id": "ba469383-19ef-42db-bbd5-c2db2658c3b5",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "25701813-ac25-4196-976e-6c4406385d41",
          "length": 92,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0fa4b9b3-ff19-45f1-8e9e-61ee97b101dc"
        },
        "item": {
          "id": "0d9f8e69-0c14-4b5d-bffa-351ef145f117",
          "name": "Validate user is able to check patient id successfully(true)",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ffb7241-c359-4f99-8ec7-1bc6646bdb66",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient id already exists.\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "c9deecad-bbac-44b6-b286-a175307e1a0d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f8d42a0d-eaab-4be9-819f-60179b1e16ef",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "45",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721906752065\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "93a6d0e3-e6fb-4475-808c-24d2905ca3b9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:58 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "71"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              100,
              32,
              97,
              108,
              114,
              101,
              97,
              100,
              121,
              32,
              101,
              120,
              105,
              115,
              116,
              115,
              46,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 945,
          "responseSize": 71
        },
        "id": "0d9f8e69-0c14-4b5d-bffa-351ef145f117",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3b70524f-bef7-46a0-b7ac-e061d81cd060",
          "length": 92,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "39613209-05f0-4725-ae70-2bc0bb9f3bc3"
        },
        "item": {
          "id": "2603292c-2f21-43d8-afcb-b7e5706b5afa",
          "name": "Validate user is unable to check patient id as patient_id is missing in the body",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d3ae6e3-91f2-4399-9b62-cac6cd09678a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "9f32f225-baad-4ab4-8146-3c56eed645a4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "73706f51-592e-4843-9728-6731fb36a1ce",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "8",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "613799f5-3a0d-4a3d-87a6-2ddc861a764e",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:58 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1020,
          "responseSize": 53
        },
        "id": "2603292c-2f21-43d8-afcb-b7e5706b5afa",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7991f5f5-6f35-4926-b356-0f3d7a69eec4",
          "length": 92,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5159f613-3af3-41e0-ad20-a21a542a0d4e"
        },
        "item": {
          "id": "0c28e7e4-514c-4b38-a836-b55dfce376f4",
          "name": "Validate user is unable to check patient id as incorrect patient_id is provided",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"K345678\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d0e84754-7c9d-4cd8-9126-1248a3a1b49a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient id does not exist\");\r",
                  "});"
                ],
                "_lastExecutionId": "484ac959-7735-4378-b7cf-0b4d3469dbde"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "78b54d37-fde7-46f1-a0e1-cc02dfc22d6b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "33",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"K345678\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e152bf31-c084-41f2-bfad-fac6d2099a09",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:25:59 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "71"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              100,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              101,
              120,
              105,
              115,
              116,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 856,
          "responseSize": 71
        },
        "id": "0c28e7e4-514c-4b38-a836-b55dfce376f4",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "13457cd1-a0ef-4dcf-9fd4-b8e4a6371730",
          "length": 92,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "390e85cb-946f-404e-adf2-b0dcb81eef17"
        },
        "item": {
          "id": "1927f782-1126-4bdb-b6eb-103302327142",
          "name": "Validate user is unable to check patient id without authorization",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c25fd9b1-b298-4f4e-8a46-868a468e7738",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "3b5f8148-118d-437b-aa00-4190bb24beb6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "febf0892-76f9-40ea-bbe0-5e0155855883",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "47",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721906752065\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "cd11b298-a4fe-4d71-815f-d45ddb5a56bb",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:01 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 534,
          "responseSize": 62
        },
        "id": "1927f782-1126-4bdb-b6eb-103302327142",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6092b2ff-c593-4a92-9dc3-5101c1bb877f",
          "length": 92,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "aecbbb7a-b58c-4c8c-83e7-df9c5eab750f"
        },
        "item": {
          "id": "8bf43d8a-e0c9-46d0-860b-56e41a8a86cf",
          "name": "Validate user is unable to check patient id as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "abeeb150-18a9-4b66-8aa5-a0bfeb8dd258",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "2a6ae6ce-9ba4-4973-a4bd-db05ebccceb5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "85be69b6-1a90-4f7e-a403-917d95ed26cf",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "47",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721906752065\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "23f7c2cf-cbb7-4447-85c1-5c7cdc1abda0",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:01 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 573,
          "responseSize": 58
        },
        "id": "8bf43d8a-e0c9-46d0-860b-56e41a8a86cf",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6f4cfe82-0a9c-4b39-bd42-93a7502da5d5",
          "length": 92,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2f1aa65e-7bc4-4b92-85d7-4be1cacc196a"
        },
        "item": {
          "id": "54f79343-8fbb-4e39-8e47-1b015ce79135",
          "name": "Validate user is unable to check patient id as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "77984d4f-2b79-44ca-aef4-fbed829baeeb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "25e9c3a4-7e81-4a1b-bdd5-f00392b388a4"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8629d348-43e2-434f-bc6b-05e4ba923c35",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "47",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721906752065\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9992fc01-66f8-43ef-990c-32051aed288b",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:02 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 539,
          "responseSize": 31
        },
        "id": "54f79343-8fbb-4e39-8e47-1b015ce79135",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f5783e7f-3447-4d64-8bd5-0a09cdd131d4",
          "length": 92,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dc871200-7ff3-460e-8510-494ccca8306f"
        },
        "item": {
          "id": "6d6273d0-a89e-449e-a1ab-43e943c4867c",
          "name": "Validate user is able to search patients successfully",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "keyword",
                  "value": "{{patient_id}}"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3e66ff56-af8e-4283-9798-9208c284ea04",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Search items fetched successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "19e8527c-705c-418d-9871-1aa33f4356dc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": "patient_1721906752065"
              },
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c3364086-8dc3-4181-a9fc-3fb612e21da4",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "203095aa-229d-443e-bd81-1736cd355bd0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:02 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "542"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              101,
              97,
              114,
              99,
              104,
              32,
              105,
              116,
              101,
              109,
              115,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              115,
              34,
              58,
              49,
              44,
              34,
              112,
              114,
              101,
              118,
              105,
              111,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              54,
              55,
              53,
              50,
              48,
              54,
              53,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              50,
              53,
              58,
              53,
              52,
              46,
              56,
              53,
              53,
              54,
              57,
              57,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 944,
          "responseSize": 542
        },
        "id": "6d6273d0-a89e-449e-a1ab-43e943c4867c",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "944b0c5c-2886-4eb6-9e83-574e8a3a4ce0",
          "length": 92,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "748119c6-36ac-4318-8234-f28c6f745f19"
        },
        "item": {
          "id": "d54ef909-18a5-4bef-bcf8-9744db6e2e7c",
          "name": "Validate user is able to search patients if optional parameters are missing",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "page",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "limit",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": ""
                },
                {
                  "key": "keyword",
                  "value": "{{patient_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5022273f-84c8-4832-ab70-ce2ea5ad61bc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Search items fetched successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "1ba99fe0-ccdc-42ed-951b-6f30ec7898d8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": "patient_1721906752065"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "529808cf-2ddf-4dcc-974b-60302c3a5693",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "f79dfb0e-d305-4f07-a013-a2fe9bcf8e1d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:03 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "542"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              101,
              97,
              114,
              99,
              104,
              32,
              105,
              116,
              101,
              109,
              115,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              115,
              34,
              58,
              49,
              44,
              34,
              112,
              114,
              101,
              118,
              105,
              111,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              54,
              55,
              53,
              50,
              48,
              54,
              53,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              50,
              53,
              58,
              53,
              52,
              46,
              56,
              53,
              53,
              54,
              57,
              57,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 651,
          "responseSize": 542
        },
        "id": "d54ef909-18a5-4bef-bcf8-9744db6e2e7c",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "66b377e2-220d-4ad7-9c38-5d2de31fd53e",
          "length": 92,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "09e1048f-5b3d-45ac-b1ab-f0a625d06657"
        },
        "item": {
          "id": "f9ccd354-f6e7-4b9a-b64d-eb538f87a1ed",
          "name": "Validate user is unable to search patients as required parameter is missing",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "keyword",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "limit",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "page",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "679913fd-ff4b-43ef-ab11-7d7fc89931f1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "256950fe-f87a-40ce-bde9-678d4262f139"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4fc90cee-2539-43dc-a19f-21ac8f76cb22",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3209e64d-e7df-426d-9a91-6f2fcc015006",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:03 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 701,
          "responseSize": 53
        },
        "id": "f9ccd354-f6e7-4b9a-b64d-eb538f87a1ed",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3431cf3c-4e09-45f7-ae5c-21471a1efb14",
          "length": 92,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6bafa5d9-76c7-429c-8c99-da88d85cdbee"
        },
        "item": {
          "id": "f659a578-aaaf-49be-9d8a-d99c5116d18e",
          "name": "Validate user is unable to search patients without Authorization",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "keyword",
                  "value": "{{patient_id}}"
                },
                {
                  "disabled": true,
                  "key": "limit",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "page",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d08f429-f875-4773-8e5b-d4f971e5898f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "12be6f57-595f-4a0d-b160-ea6a4a14977d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": "patient_1721906752065"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "055a56f0-65b7-44f2-b64a-8162862e3e04",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "e46bbb92-bdc1-4ad9-bb42-d4447bbeb3c1",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:05 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 269,
          "responseSize": 62
        },
        "id": "f659a578-aaaf-49be-9d8a-d99c5116d18e",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "62286610-9665-4259-a28d-54817351052e",
          "length": 92,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "22b7e8ff-abef-44af-9c68-7adac178d453"
        },
        "item": {
          "id": "46ee63aa-a123-4c0b-a412-7e5e997cb271",
          "name": "Validate user is unable to search patients as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "keyword",
                  "value": "{{patient_id}}"
                },
                {
                  "disabled": true,
                  "key": "limit",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "page",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2a094705-9c63-4ba4-af56-9e10e61bd79c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "124aadf6-80d1-4b96-98f8-83a26e0ea47b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": "patient_1721906752065"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "817a6552-bdb4-46d8-8241-762bba432228",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "169c1a7d-67c1-4bd2-8a76-16c1002a62f3",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:05 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 266,
          "responseSize": 31
        },
        "id": "46ee63aa-a123-4c0b-a412-7e5e997cb271",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5e3ee509-e6a8-4c23-8ab1-eab561dd9565",
          "length": 92,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c81a50ff-4b8b-4c35-8607-36d5429ab3e0"
        },
        "item": {
          "id": "5f0ac1c9-1d45-4995-a0df-556e593eb96b",
          "name": "Validate user is able to get current user task info successfully",
          "request": {
            "url": {
              "path": [
                "get-current-user-task-info"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d51a62f-9fd7-450a-8544-fbc52d239224",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient details fetched successfully.\");\r",
                  "});"
                ],
                "_lastExecutionId": "39aa580e-e092-4e25-ac9d-e22d95b221e9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-current-user-task-info"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e7216a58-54b8-448e-95b5-30940e698135",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "765a61e2-fb90-4a78-85b9-538f58029e80",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:05 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "3432"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              46,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              97,
              115,
              107,
              95,
              100,
              105,
              99,
              116,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              50,
              51,
              57,
              100,
              97,
              97,
              53,
              53,
              45,
              52,
              51,
              50,
              97,
              45,
              52,
              56,
              56,
              53,
              45,
              97,
              100,
              101,
              100,
              45,
              100,
              102,
              51,
              54,
              49,
              100,
              101,
              57,
              49,
              98,
              49,
              49,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              125,
              44,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              57,
              53,
              97,
              49,
              55,
              97,
              51,
              98,
              45,
              98,
              98,
              102,
              101,
              45,
              52,
              52,
              57,
              53,
              45,
              98,
              49,
              51,
              101,
              45,
              54,
              97,
              52,
              55,
              51,
              55,
              54,
              50,
              48,
              50,
              100,
              51,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              102,
              49,
              56,
              54,
              52,
              97,
              53,
              51,
              45,
              48,
              99,
              99,
              50,
              45,
              52,
              54,
              99,
              48,
              45,
              57,
              52,
              55,
              100,
              45,
              102,
              97,
              54,
              53,
              97,
              56,
              99,
              53,
              50,
              102,
              56,
              102,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              57,
              55,
              102,
              52,
              98,
              57,
              51,
              45,
              99,
              53,
              98,
              53,
              45,
              52,
              100,
              53,
              100,
              45,
              98,
              52,
              98,
              57,
              45,
              56,
              102,
              98,
              97,
              50,
              102,
              102,
              48,
              48,
              102,
              51,
              101,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              55,
              52,
              48,
              98,
              99,
              99,
              48,
              57,
              45,
              100,
              54,
              57,
              57,
              45,
              52,
              101,
              102,
              57,
              45,
              57,
              101,
              98,
              56,
              45,
              57,
              102,
              102,
              49,
              49,
              102,
              99,
              99,
              55,
              48,
              97,
              49,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              51,
              55,
              101,
              52,
              56,
              49,
              53,
              48,
              45,
              54,
              56,
              99,
              50,
              45,
              52,
              98,
              49,
              98,
              45,
              56,
              56,
              53,
              55,
              45,
              52,
              55,
              55,
              100,
              51,
              51,
              101,
              97,
              98,
              49,
              101,
              100,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              97,
              97,
              52,
              98,
              101,
              54,
              57,
              55,
              45,
              49,
              99,
              55,
              102,
              45,
              52,
              56,
              56,
              102,
              45,
              97,
              99,
              54,
              55,
              45,
              50,
              101,
              56,
              54,
              52,
              57,
              98,
              98,
              54,
              97,
              99,
              50,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              57,
              50,
              48,
              98,
              56,
              98,
              50,
              98,
              45,
              97,
              50,
              50,
              51,
              45,
              52,
              98,
              57,
              57,
              45,
              97,
              100,
              52,
              48,
              45,
              50,
              56,
              97,
              51,
              52,
              54,
              51,
              52,
              99,
              56,
              101,
              98,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              56,
              52,
              54,
              102,
              56,
              101,
              102,
              50,
              45,
              52,
              48,
              52,
              48,
              45,
              52,
              98,
              48,
              54,
              45,
              98,
              54,
              56,
              102,
              45,
              102,
              49,
              57,
              49,
              101,
              101,
              54,
              53,
              101,
              53,
              102,
              51,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              93,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              52,
              48,
              101,
              52,
              99,
              102,
              57,
              45,
              102,
              57,
              55,
              49,
              45,
              52,
              56,
              99,
              52,
              45,
              56,
              98,
              98,
              56,
              45,
              50,
              53,
              52,
              55,
              57,
              53,
              98,
              48,
              98,
              102,
              97,
              57,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              110,
              103,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              80,
              69,
              78,
              68,
              73,
              78,
              71,
              34,
              44,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              98,
              97,
              99,
              107,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              95,
              100,
              111,
              110,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              50,
              53,
              58,
              51,
              52,
              46,
              55,
              53,
              48,
              50,
              52,
              55,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              93,
              44,
              34,
              105,
              110,
              95,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              97,
              115,
              107,
              95,
              100,
              105,
              99,
              116,
              34,
              58,
              91,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              68,
              101,
              109,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              116,
              120,
              116,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              56,
              54,
              98,
              53,
              57,
              102,
              101,
              52,
              45,
              100,
              54,
              54,
              97,
              45,
              52,
              102,
              97,
              100,
              45,
              57,
              101,
              49,
              100,
              45,
              49,
              57,
              54,
              56,
              56,
              97,
              54,
              48,
              48,
              50,
              57,
              102,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              68,
              101,
              109,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              116,
              120,
              116,
              34,
              125,
              93,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              100,
              71,
              86,
              116,
              99,
              71,
              57,
              121,
              89,
              88,
              74,
              53,
              88,
              49,
              56,
              121,
              77,
              68,
              73,
              48,
              76,
              84,
              65,
              50,
              76,
              84,
              69,
              122,
              86,
              68,
              65,
              53,
              79,
              106,
              65,
              122,
              79,
              106,
              69,
              121,
              76,
              106,
              73,
              51,
              78,
              84,
              103,
              51,
              78,
              121,
              115,
              119,
              77,
              68,
              111,
              119,
              77,
              65,
              61,
              61,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              101,
              109,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              95,
              102,
              105,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              117,
              112,
              108,
              111,
              97,
              100,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              117,
              112,
              108,
              111,
              97,
              100,
              101,
              100,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              54,
              45,
              49,
              51,
              84,
              48,
              55,
              58,
              53,
              49,
              58,
              53,
              54,
              46,
              50,
              54,
              54,
              54,
              48,
              53,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              93,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 657,
          "responseSize": 3432
        },
        "id": "5f0ac1c9-1d45-4995-a0df-556e593eb96b",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fc42d31a-696a-4eff-8c0e-37b1332c238c",
          "length": 92,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fedeca52-1180-4c70-ad5d-f7be61aa6ef4"
        },
        "item": {
          "id": "1135ffbc-3498-4f08-b830-f94b68bab842",
          "name": "Validate user is unable to get current user task info without authorization",
          "request": {
            "url": {
              "path": [
                "get-current-user-task-info"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e6f46434-ca25-4ddb-8449-c24454afd263",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "    });"
                ],
                "_lastExecutionId": "1a026763-73d7-46d3-93c9-fc17495fa2ff"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-current-user-task-info"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5297039b-a3da-4f29-8950-7bed72f5b359",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "e505f48b-8658-492c-bba4-8e09a12e8f9e",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:06 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 267,
          "responseSize": 62
        },
        "id": "1135ffbc-3498-4f08-b830-f94b68bab842",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f2dc2bd3-fc33-442f-b8a1-dce72dcc74a0",
          "length": 92,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "701a7f30-edd5-4b25-a521-0b79e573c350"
        },
        "item": {
          "id": "a3f54401-1e9e-47db-9106-a12570916433",
          "name": "Validate user is unable to get current user task info as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "get-current-user-task-info"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "84b35c1c-933b-430b-b308-2d76733c37fa",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "fa399c13-7b46-4030-a8e9-8458c9d6b0e1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-current-user-task-info"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c027a269-aa3c-46a2-878f-56ba18ead8fc",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "161473cc-ad58-45c7-9b6e-af84b040c022",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:06 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 292,
          "responseSize": 58
        },
        "id": "a3f54401-1e9e-47db-9106-a12570916433",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bb741ffa-c521-435c-a88c-066e0c18fcd2",
          "length": 92,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1918a272-6a24-4833-b8ae-0f6a11d2d2a0"
        },
        "item": {
          "id": "476c51f5-19ee-4cce-bb38-7183d164644e",
          "name": "Validate user is unable to get current user task info as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "get-current-user-task-info"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0c61700d-6ade-42ac-bc9a-bd6a5d08101b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "03113058-10ed-48d7-bc7f-d2a257edc68f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-current-user-task-info"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5569a922-7dd4-43e6-a6ff-af2f5e0c049e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "249e01e6-2b27-4921-b1a0-3837a1bdf1ef",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:06 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 317,
          "responseSize": 31
        },
        "id": "476c51f5-19ee-4cce-bb38-7183d164644e",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "db048fb2-94c0-4fcf-b8d4-0e2cf5ba4b36",
          "length": 92,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7274d3ba-7b03-4cf4-99cd-8caf15036757"
        },
        "item": {
          "id": "9c1bfb68-a97f-4dc6-9173-309b6ee8fe0b",
          "name": "Validate user is able to start variant processing successfully",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "4a92ba9f-d7be-4eb1-bad0-2b22660b2a79"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e917a79-3290-4489-b324-3563fac68477",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) processed successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "cc40213e-670b-48ff-a726-be408769b784"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "4a92ba9f-d7be-4eb1-bad0-2b22660b2a79"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9dd8ab1a-755c-4cfa-8a8b-e0788e5ea919",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a6ec982e-beb5-42b8-881a-0c53024230a8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:08 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "681"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              40,
              115,
              41,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              47,
              100,
              102,
              52,
              100,
              50,
              57,
              55,
              48,
              45,
              98,
              57,
              98,
              102,
              45,
              52,
              99,
              56,
              48,
              45,
              56,
              52,
              100,
              48,
              45,
              57,
              99,
              56,
              101,
              48,
              48,
              97,
              49,
              55,
              49,
              53,
              99,
              95,
              95,
              95,
              95,
              115,
              97,
              109,
              112,
              108,
              101,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              52,
              51,
              51,
              101,
              52,
              54,
              56,
              53,
              45,
              51,
              49,
              50,
              57,
              45,
              52,
              98,
              49,
              51,
              45,
              98,
              97,
              51,
              50,
              45,
              55,
              55,
              102,
              49,
              51,
              97,
              98,
              49,
              57,
              48,
              50,
              49,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              110,
              103,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              80,
              69,
              78,
              68,
              73,
              78,
              71,
              34,
              44,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              98,
              97,
              99,
              107,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              95,
              100,
              111,
              110,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              50,
              54,
              58,
              48,
              57,
              46,
              52,
              53,
              49,
              49,
              52,
              53,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1835,
          "responseSize": 681
        },
        "id": "9c1bfb68-a97f-4dc6-9173-309b6ee8fe0b",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1ab89f64-163c-4c9f-9c48-36c9388168d5",
          "length": 92,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e149a3b1-b235-4fce-bea6-cb39d243f506"
        },
        "item": {
          "id": "f01e4e13-77ea-4dfd-aae1-89cd685b5bfe",
          "name": "Validate user is unable to start variant processing as required parameter is missing",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a4f8462b-96e0-4973-9bd1-4d3be750368c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "518e7237-1781-489f-8421-7e8acc3d3e6c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9a2125b2-80fc-4076-a2ee-7be645b37faa",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "48e5978b-eaee-46e3-997b-f9e5b205624c",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:08 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 630,
          "responseSize": 53
        },
        "id": "f01e4e13-77ea-4dfd-aae1-89cd685b5bfe",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7ca7bb0a-82c8-4355-8186-20d2b4b1f2ae",
          "length": 92,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "af05a420-f22a-4b57-8db4-792f7d72297e"
        },
        "item": {
          "id": "807800bb-8c2a-444a-9180-5a882ee11449",
          "name": "Validate user is unable to start variant processing without Authorization",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "87d13a16-9fb0-43da-bd9c-8c2014ce8426",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "542afeef-f827-43f9-ac9b-7c2f6fb6a9db"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "90e386d2-a480-4436-a56a-6555039114d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "8ef8fcd9-a5df-4b4b-9858-cd5be6ff11ba",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:08 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 269,
          "responseSize": 62
        },
        "id": "807800bb-8c2a-444a-9180-5a882ee11449",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4b69cfec-38f6-4678-aa7e-5f879fe0c621",
          "length": 92,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ebf73a50-c4eb-4536-b16c-8b04ec4e9686"
        },
        "item": {
          "id": "32637ac7-9968-48f1-abba-871d8f87e8b1",
          "name": "Validate user is unable to start variant processing as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b604098c-777b-40a9-9ce9-df1fa0b868bb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "30e5ef3e-5945-4d9d-9370-970805b9e71c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "84fed784-f461-437f-9baa-e688efde6b49",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d568dc29-d108-400f-b9fd-f2cd229f8b12",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:10 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 290,
          "responseSize": 58
        },
        "id": "32637ac7-9968-48f1-abba-871d8f87e8b1",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "24d405c9-e589-44df-a4e6-53c750516dd1",
          "length": 92,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1dfc94e8-1a96-418c-997f-fdf665b43092"
        },
        "item": {
          "id": "2ec95f86-1c1e-417b-a62a-4f07ede45ece",
          "name": "Validate user is unable to start variant processing as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dddea6da-984a-49c8-8f15-a98f2d502997",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "1c715c5f-55f4-45a6-b599-7a7ffb09202a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1426e0c2-8013-4ba5-a241-ca533506c039",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "db3886fc-ce98-4666-9d73-b6edd8390071",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:10 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 265,
          "responseSize": 31
        },
        "id": "2ec95f86-1c1e-417b-a62a-4f07ede45ece",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b1550294-8026-4aa7-b626-f00dc59d5560",
          "length": 92,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a9f12510-478d-401b-8b18-a9b72bae4b78"
        },
        "item": {
          "id": "00b6f6cd-0645-41ff-87bc-c5b9a3c83b2f",
          "name": "Validate user is able to display patient demograph dropdown successfully",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "tmb"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a19681e6-015e-4391-843e-34759a776314",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Parse the JSON response\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "// Expected array elements\r",
                  "let expectedElements = [\"High\", \"Low\", \"Intermediate\", \"Unknown\"];\r",
                  "\r",
                  "// Validate the response is an array\r",
                  "pm.test(\"Response is an array\", function () {\r",
                  "    pm.expect(response).to.be.an('array');\r",
                  "});\r",
                  "\r",
                  "// Validate the response contains all expected elements\r",
                  "pm.test(\"Response contains all expected elements\", function () {\r",
                  "    expectedElements.forEach(function(element) {\r",
                  "        pm.expect(response).to.include(element);\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the response does not contain any unexpected elements\r",
                  "pm.test(\"Response does not contain unexpected elements\", function () {\r",
                  "    response.forEach(function(element) {\r",
                  "        pm.expect(expectedElements).to.include(element);\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "054d476b-ec97-4e69-b934-6787fa0ea906"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "tmb"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "159f7bd4-fe9c-48e1-97f6-292784a90f92",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "aa0487db-893e-41eb-9cec-2a099415515f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:10 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "39"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              34,
              72,
              105,
              103,
              104,
              34,
              44,
              34,
              76,
              111,
              119,
              34,
              44,
              34,
              73,
              110,
              116,
              101,
              114,
              109,
              101,
              100,
              105,
              97,
              116,
              101,
              34,
              44,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              93
            ]
          },
          "cookie": [],
          "responseTime": 638,
          "responseSize": 39
        },
        "id": "00b6f6cd-0645-41ff-87bc-c5b9a3c83b2f",
        "assertions": [
          {
            "assertion": "Response is an array",
            "skipped": false
          },
          {
            "assertion": "Response contains all expected elements",
            "skipped": false
          },
          {
            "assertion": "Response does not contain unexpected elements",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ad6745de-0b36-49c3-a342-ec8056911d9a",
          "length": 92,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ff4e9af2-765d-4720-8a78-e4cad644fb53"
        },
        "item": {
          "id": "b25460cd-3863-443c-971e-a404fb2dd8cb",
          "name": "Validate user is unable to display patient demograph dropdown with missing required parameter",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fe47533c-5524-40bc-9fcc-ee70b09156dd",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "4765b8c1-0974-4811-ac25-63ea497a6b59"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c097d578-ea12-48f4-ba66-96c7fd5cc434",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d74ed068-49be-4353-a35f-b7c0c27951a4",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:12 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 602,
          "responseSize": 53
        },
        "id": "b25460cd-3863-443c-971e-a404fb2dd8cb",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "45871ee0-8fc5-4f34-ba25-fd98a3b86acf",
          "length": 92,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a812e1f7-068c-4588-8305-f35990398acf"
        },
        "item": {
          "id": "dc798213-7a32-47d6-b24e-220afdd38bf2",
          "name": "Validate user is unable to display patient demograph dropdown with incorrect query parameter",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f60db93-995d-412a-8c15-5090441b5856",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "4acf6a24-cd7e-430a-81e1-0d132dd76f22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ce222aa7-5ac8-4a54-878d-f338cca07c2f",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "07668f7a-dd44-4b90-927c-4118bf66cb30",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:12 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 641,
          "responseSize": 53
        },
        "id": "dc798213-7a32-47d6-b24e-220afdd38bf2",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4c8285cc-8ac2-40aa-96bc-0f34c69a0db5",
          "length": 92,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "646d79ec-a78c-4406-a6b4-8b277ad8702e"
        },
        "item": {
          "id": "b3827a28-e958-405d-ad0a-c10f18b734e9",
          "name": "Validate user is unable to display patient demograph dropdown without Authorization",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "tmb"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9789e637-8206-4d2a-bca0-b9d4b0f2d0d3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "c4e409d1-3e1d-4ad3-8128-3d2bfce2c38b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "tmb"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0bb260e3-d0f1-40de-a4e1-1a22a61e28dd",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "23a43cbc-fc2c-417b-9ce3-31634c1bf791",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:13 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 268,
          "responseSize": 62
        },
        "id": "b3827a28-e958-405d-ad0a-c10f18b734e9",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a9e06013-aa2f-4a88-ae4a-5744a2f26499",
          "length": 92,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7e6d38b4-d9a2-4f2d-bfe3-084ebdbe88bc"
        },
        "item": {
          "id": "75f35b87-82c4-4e99-bf62-e4b1353d377f",
          "name": "Validate user is unable to display patient demograph dropdown as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "tmb"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92941d2f-d1a0-418d-88b7-52f8628a28fb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "69488203-bda7-4972-baee-b5def5eccc2f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "tmb"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3710baee-2b43-4e99-8c76-edbcfd9550ea",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "48baca4b-480b-4f63-854c-5a7c73f36fed",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:13 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 311,
          "responseSize": 58
        },
        "id": "75f35b87-82c4-4e99-bf62-e4b1353d377f",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fd4f7aac-b354-47d1-b671-e951b8b9da3c",
          "length": 92,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "21d67c5c-ea20-420f-a604-5d4e73f7d7e6"
        },
        "item": {
          "id": "953d3013-0b90-49fb-99f7-b0c63851cf13",
          "name": "Validate user is unable to display patient demograph dropdown as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "tmb"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "97d649f4-287d-4c6f-8945-3bc29056de3c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "8a5cfaf4-a4c1-4f88-85d7-4b93d62ea3b6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "tmb"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9eba06a6-9d7f-4f65-bfca-34c895108a4f",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0c2b695b-6044-43e0-a976-96e81df9a321",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:13 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 265,
          "responseSize": 31
        },
        "id": "953d3013-0b90-49fb-99f7-b0c63851cf13",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c86cc707-bac4-4ad0-8ed8-7857206eb9c1",
          "length": 92,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ad133f17-be67-4232-ad7f-07f89ecbec43"
        },
        "item": {
          "id": "96d5da50-9958-4fb4-b63e-ac22d72920a4",
          "name": "Validate user is able to display sub tumor type dropdown successfully",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "lung_cancer"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5a699fb8-913d-416e-b290-7b52b80078d0",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Parse the JSON response\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "// Expected array elements\r",
                  "let expectedElements = [\r",
                  "    \"Small Cell Lung Cancer\",\r",
                  "    \"Non-Small Cell Lung Cancer\",\r",
                  "    \"Combined Small Cell Lung Carcinoma (CSCLC)\",\r",
                  "    \"Inflammatory Myofibroblastic Lung Tumor (IMTL)\",\r",
                  "    \"Lung Adenocarcinoma In Situ (LAIS)\",\r",
                  "    \"Lung Neuroendocrine Tumor (LNET)\",\r",
                  "    \"Non-Small Cell Lung Cancer (NSCLC)\",\r",
                  "    \"Pleuropulmonary Blastoma (PPB)\",\r",
                  "    \"Pulmonary Lymphangiomyomatosis (LAM)\",\r",
                  "    \"Sarcomatoid Carcinoma of the Lung (SARCL)\",\r",
                  "    \"Atypical Lung Carcinoid (ALUCA)\",\r",
                  "    \"Large Cell Neuroendocrine Carcinoma (LUNE)\",\r",
                  "    \"Lung Carcinoid (LUCA)\",\r",
                  "    \"Small Cell Lung Cancer (SCLC)\",\r",
                  "    \"Ciliated Muconodular Papillary Tumor of the Lung (CMPT)\",\r",
                  "    \"Large Cell Lung Carcinoma (LCLC)\",\r",
                  "    \"Lung Adenocarcinoma (LUAD)\",\r",
                  "    \"Lung Adenosquamous Carcinoma (LUAS)\",\r",
                  "    \"Lung Squamous Cell Carcinoma (LUSC)\",\r",
                  "    \"NUT Carcinoma of the Lung (NUTCL)\",\r",
                  "    \"Pleomorphic Carcinoma of the Lung (LUPC)\",\r",
                  "    \"Poorly Differentiated Non-Small Cell Lung Cancer (NSCLCPD)\",\r",
                  "    \"Salivary Gland-Type Tumor of the Lung (SGTTL)\",\r",
                  "    \"Spindle Cell Carcinoma of the Lung (SPCC)\",\r",
                  "    \"Basaloid Large Cell Carcinoma of the Lung (BLCLC)\",\r",
                  "    \"Clear Cell Carcinoma of the Lung (CCLC)\",\r",
                  "    \"Giant Cell Carcinoma of the Lung (GCLC)\",\r",
                  "    \"Large Cell Lung Carcinoma With Rhabdoid Phenotype (RLCLC)\",\r",
                  "    \"Lymphoepithelioma-like Carcinoma of the Lung (LECLC)\",\r",
                  "    \"Adenoid Cystic Carcinoma of the Lung (LUACC)\",\r",
                  "    \"Mucoepidermoid Carcinoma of the Lung (LUMEC)\"\r",
                  "];\r",
                  "\r",
                  "// Validate the response is an array\r",
                  "pm.test(\"Response is an array\", function () {\r",
                  "    pm.expect(response).to.be.an('array');\r",
                  "});\r",
                  "\r",
                  "// Validate the response contains all expected elements\r",
                  "pm.test(\"Response contains all expected elements\", function () {\r",
                  "    expectedElements.forEach(function(element) {\r",
                  "        pm.expect(response).to.include(element);\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the response does not contain any unexpected elements\r",
                  "pm.test(\"Response does not contain unexpected elements\", function () {\r",
                  "    response.forEach(function(element) {\r",
                  "        pm.expect(expectedElements).to.include(element);\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "4e2425bf-3a6b-47c7-b87d-456cf39e8cd9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "lung_cancer"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "94ae9fca-8c1e-4d96-a580-a490274060d3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e9b83e84-4967-4d90-8d66-e02ea8691260",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:14 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "1332"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              34,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              78,
              111,
              110,
              45,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              67,
              111,
              109,
              98,
              105,
              110,
              101,
              100,
              32,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              67,
              83,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              73,
              110,
              102,
              108,
              97,
              109,
              109,
              97,
              116,
              111,
              114,
              121,
              32,
              77,
              121,
              111,
              102,
              105,
              98,
              114,
              111,
              98,
              108,
              97,
              115,
              116,
              105,
              99,
              32,
              76,
              117,
              110,
              103,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              40,
              73,
              77,
              84,
              76,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              65,
              100,
              101,
              110,
              111,
              99,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              73,
              110,
              32,
              83,
              105,
              116,
              117,
              32,
              40,
              76,
              65,
              73,
              83,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              78,
              101,
              117,
              114,
              111,
              101,
              110,
              100,
              111,
              99,
              114,
              105,
              110,
              101,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              40,
              76,
              78,
              69,
              84,
              41,
              34,
              44,
              34,
              78,
              111,
              110,
              45,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              32,
              40,
              78,
              83,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              80,
              108,
              101,
              117,
              114,
              111,
              112,
              117,
              108,
              109,
              111,
              110,
              97,
              114,
              121,
              32,
              66,
              108,
              97,
              115,
              116,
              111,
              109,
              97,
              32,
              40,
              80,
              80,
              66,
              41,
              34,
              44,
              34,
              80,
              117,
              108,
              109,
              111,
              110,
              97,
              114,
              121,
              32,
              76,
              121,
              109,
              112,
              104,
              97,
              110,
              103,
              105,
              111,
              109,
              121,
              111,
              109,
              97,
              116,
              111,
              115,
              105,
              115,
              32,
              40,
              76,
              65,
              77,
              41,
              34,
              44,
              34,
              83,
              97,
              114,
              99,
              111,
              109,
              97,
              116,
              111,
              105,
              100,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              83,
              65,
              82,
              67,
              76,
              41,
              34,
              44,
              34,
              65,
              116,
              121,
              112,
              105,
              99,
              97,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              105,
              100,
              32,
              40,
              65,
              76,
              85,
              67,
              65,
              41,
              34,
              44,
              34,
              76,
              97,
              114,
              103,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              78,
              101,
              117,
              114,
              111,
              101,
              110,
              100,
              111,
              99,
              114,
              105,
              110,
              101,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              85,
              78,
              69,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              105,
              100,
              32,
              40,
              76,
              85,
              67,
              65,
              41,
              34,
              44,
              34,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              32,
              40,
              83,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              67,
              105,
              108,
              105,
              97,
              116,
              101,
              100,
              32,
              77,
              117,
              99,
              111,
              110,
              111,
              100,
              117,
              108,
              97,
              114,
              32,
              80,
              97,
              112,
              105,
              108,
              108,
              97,
              114,
              121,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              67,
              77,
              80,
              84,
              41,
              34,
              44,
              34,
              76,
              97,
              114,
              103,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              65,
              100,
              101,
              110,
              111,
              99,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              85,
              65,
              68,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              65,
              100,
              101,
              110,
              111,
              115,
              113,
              117,
              97,
              109,
              111,
              117,
              115,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              85,
              65,
              83,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              83,
              113,
              117,
              97,
              109,
              111,
              117,
              115,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              85,
              83,
              67,
              41,
              34,
              44,
              34,
              78,
              85,
              84,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              78,
              85,
              84,
              67,
              76,
              41,
              34,
              44,
              34,
              80,
              108,
              101,
              111,
              109,
              111,
              114,
              112,
              104,
              105,
              99,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              76,
              85,
              80,
              67,
              41,
              34,
              44,
              34,
              80,
              111,
              111,
              114,
              108,
              121,
              32,
              68,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              116,
              105,
              97,
              116,
              101,
              100,
              32,
              78,
              111,
              110,
              45,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              32,
              40,
              78,
              83,
              67,
              76,
              67,
              80,
              68,
              41,
              34,
              44,
              34,
              83,
              97,
              108,
              105,
              118,
              97,
              114,
              121,
              32,
              71,
              108,
              97,
              110,
              100,
              45,
              84,
              121,
              112,
              101,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              83,
              71,
              84,
              84,
              76,
              41,
              34,
              44,
              34,
              83,
              97,
              108,
              105,
              118,
              97,
              114,
              121,
              32,
              71,
              108,
              97,
              110,
              100,
              45,
              84,
              121,
              112,
              101,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              83,
              71,
              84,
              84,
              76,
              41,
              34,
              44,
              34,
              83,
              112,
              105,
              110,
              100,
              108,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              83,
              80,
              67,
              67,
              41,
              34,
              44,
              34,
              66,
              97,
              115,
              97,
              108,
              111,
              105,
              100,
              32,
              76,
              97,
              114,
              103,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              66,
              76,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              67,
              108,
              101,
              97,
              114,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              67,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              71,
              105,
              97,
              110,
              116,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              71,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              76,
              97,
              114,
              103,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              87,
              105,
              116,
              104,
              32,
              82,
              104,
              97,
              98,
              100,
              111,
              105,
              100,
              32,
              80,
              104,
              101,
              110,
              111,
              116,
              121,
              112,
              101,
              32,
              40,
              82,
              76,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              76,
              121,
              109,
              112,
              104,
              111,
              101,
              112,
              105,
              116,
              104,
              101,
              108,
              105,
              111,
              109,
              97,
              45,
              108,
              105,
              107,
              101,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              76,
              69,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              65,
              100,
              101,
              110,
              111,
              105,
              100,
              32,
              67,
              121,
              115,
              116,
              105,
              99,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              76,
              85,
              65,
              67,
              67,
              41,
              34,
              44,
              34,
              77,
              117,
              99,
              111,
              101,
              112,
              105,
              100,
              101,
              114,
              109,
              111,
              105,
              100,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              76,
              85,
              77,
              69,
              67,
              41,
              34,
              93
            ]
          },
          "cookie": [],
          "responseTime": 638,
          "responseSize": 1332
        },
        "id": "96d5da50-9958-4fb4-b63e-ac22d72920a4",
        "assertions": [
          {
            "assertion": "Response is an array",
            "skipped": false
          },
          {
            "assertion": "Response contains all expected elements",
            "skipped": false
          },
          {
            "assertion": "Response does not contain unexpected elements",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ed80fc8f-062b-4917-bc19-7d5a69a150d3",
          "length": 92,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c62abb89-52d7-4808-ba4d-deeff38b798b"
        },
        "item": {
          "id": "b49a29dd-2c82-4545-9d49-09bb4d61046c",
          "name": "Validate user is unable to display sub tumor type dropdown with missing required parameter",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "216919cc-5c8d-4c0b-bacd-299994a98b36",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "c3722b41-cfa3-4cd9-b4f1-af193ea953e4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "93d09666-43a6-4230-b14e-49d3ccf480a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "af1833f3-2eca-4635-b965-58ff0e919f5e",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:14 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 647,
          "responseSize": 53
        },
        "id": "b49a29dd-2c82-4545-9d49-09bb4d61046c",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cf3aeb0b-dba1-4555-a62b-d117dcab5980",
          "length": 92,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1855dbbb-02b1-4e46-97e5-8296ddf33025"
        },
        "item": {
          "id": "894d63ee-6ac7-4430-9d8f-0d67ec11e307",
          "name": "Validate user is unable to display sub tumor type dropdown with incorrect query parameter",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6b6cc3ef-de0b-4004-9388-e12429d35b60",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "996827bb-7f55-42d4-9b55-3c5c2bf56828"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ede97411-5b64-4297-b12d-de7cf9b800d6",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7a24dbd3-a0da-4d14-a618-c4d3493d028b",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:16 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 630,
          "responseSize": 53
        },
        "id": "894d63ee-6ac7-4430-9d8f-0d67ec11e307",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4376f3c3-2058-4b70-8b57-39a61871dbe6",
          "length": 92,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d165346f-42c8-48fe-927f-fcdbdcd39c02"
        },
        "item": {
          "id": "e2951a7b-65b2-482d-a9d2-ea7a3a74d07d",
          "name": "Validate user is unable to display sub tumor type dropdown without Authorization",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "lung_cancer"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "edc9dcc9-bbe3-48ee-9359-436a6bf7d42f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "5f6c8bd3-21ff-41a3-9e35-4eba5247cb5d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "lung_cancer"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "73f78d9d-d395-4d99-abd3-796618112829",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "30d5197a-cac3-4baf-80e8-8036264a473c",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:16 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 274,
          "responseSize": 62
        },
        "id": "e2951a7b-65b2-482d-a9d2-ea7a3a74d07d",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "17ad32e9-fced-42eb-81ee-f0c0969a935c",
          "length": 92,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b1581f91-7e2a-4169-bfd0-0d15662b7809"
        },
        "item": {
          "id": "b368bff1-bf9e-476e-af5a-c21928f8da91",
          "name": "Validate user is unable to display sub tumor type dropdown as toekn is invalid/expired",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "lung_cancer"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "afa9fa0f-2433-451f-9c7b-11558e540257",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "b7352111-7059-4e61-aaf7-ece9b2ea34ad"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "lung_cancer"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b45f476c-efa5-41f8-b5bf-d9e3d05c6b2f",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "cce39a59-c033-4b94-b29f-fb03471c803d",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:16 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 288,
          "responseSize": 58
        },
        "id": "b368bff1-bf9e-476e-af5a-c21928f8da91",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7477ba39-c9cc-4193-bf9d-436b885f9018",
          "length": 92,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "af7493ad-8a7a-4b2f-b37b-6ab97ab6ffc3"
        },
        "item": {
          "id": "4f69ce3e-6e53-43d7-a831-11a768800140",
          "name": "Validate user is unable to display sub tumor type dropdown as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49380a43-3c90-470d-9e94-73fa4e82d7e6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "f68b39c3-024f-4fa9-ab82-f7fcd6860638"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "{{key}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "10c9138e-9cd1-4e27-81e8-1bc6ce8a795e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "898f8505-1ca2-47ab-80ad-d7200ea1bf1a",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:17 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 264,
          "responseSize": 31
        },
        "id": "4f69ce3e-6e53-43d7-a831-11a768800140",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "da9e948c-5e83-4579-a56c-f2aca9157853",
          "length": 92,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fade55f2-10c7-4ae8-80ea-c9abd1ccfb86"
        },
        "item": {
          "id": "3c48feda-2690-4429-9756-50d18746c2af",
          "name": "Validate user is able to get patient file details successfully",
          "request": {
            "url": {
              "port": "8001",
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "13",
                "233",
                "37",
                "45"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "958fd271-1a6f-4cbb-8c53-bb1cbd3405cc"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f29f14a5-9823-4eca-a834-d3761d6e3db1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient file details retrieved\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "8623fef7-8b65-4e08-9ec5-6515f86ec4ac"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "13",
              "233",
              "37",
              "45"
            ],
            "query": [
              {
                "key": "id",
                "value": "958fd271-1a6f-4cbb-8c53-bb1cbd3405cc"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9a7ecc06-2bd6-44a9-9c87-dc3fbb5c5617",
              "system": true
            },
            {
              "key": "Host",
              "value": "13.233.37.45:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "db160ae0-4d26-4743-9913-546b2dc5de9a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:17 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "502"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              110,
              102,
              111,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              71,
              49,
              48,
              48,
              50,
              51,
              51,
              54,
              53,
              55,
              48,
              46,
              116,
              120,
              116,
              34,
              44,
              34,
              115,
              105,
              122,
              101,
              34,
              58,
              34,
              48,
              46,
              48,
              48,
              32,
              77,
              66,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              49,
              51,
              46,
              50,
              51,
              51,
              46,
              51,
              55,
              46,
              52,
              53,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              52,
              53,
              100,
              100,
              53,
              99,
              54,
              53,
              45,
              97,
              101,
              98,
              51,
              45,
              52,
              101,
              54,
              49,
              45,
              98,
              102,
              57,
              57,
              45,
              52,
              48,
              98,
              97,
              56,
              97,
              54,
              54,
              53,
              54,
              100,
              54,
              95,
              95,
              95,
              95,
              82,
              71,
              49,
              48,
              48,
              50,
              51,
              51,
              54,
              53,
              55,
              48,
              46,
              116,
              120,
              116,
              34,
              125,
              93,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              95,
              105,
              110,
              102,
              111,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              68,
              101,
              109,
              111,
              95,
              80,
              66,
              67,
              80,
              49,
              95,
              115,
              111,
              109,
              97,
              116,
              105,
              99,
              46,
              104,
              97,
              114,
              100,
              45,
              102,
              105,
              108,
              116,
              101,
              114,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              115,
              105,
              122,
              101,
              34,
              58,
              34,
              48,
              46,
              50,
              49,
              32,
              77,
              66,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              49,
              51,
              46,
              50,
              51,
              51,
              46,
              51,
              55,
              46,
              52,
              53,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              102,
              55,
              52,
              57,
              57,
              55,
              99,
              53,
              45,
              54,
              100,
              55,
              56,
              45,
              52,
              98,
              55,
              49,
              45,
              97,
              50,
              56,
              53,
              45,
              101,
              54,
              56,
              51,
              53,
              48,
              99,
              98,
              48,
              53,
              54,
              52,
              95,
              95,
              95,
              95,
              68,
              101,
              109,
              111,
              95,
              80,
              66,
              67,
              80,
              49,
              95,
              115,
              111,
              109,
              97,
              116,
              105,
              99,
              46,
              104,
              97,
              114,
              100,
              45,
              102,
              105,
              108,
              116,
              101,
              114,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              125,
              93,
              44,
              34,
              111,
              116,
              104,
              101,
              114,
              95,
              109,
              101,
              100,
              105,
              99,
              97,
              108,
              95,
              102,
              105,
              108,
              101,
              115,
              95,
              105,
              110,
              102,
              111,
              34,
              58,
              91,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1391,
          "responseSize": 502
        },
        "id": "3c48feda-2690-4429-9756-50d18746c2af",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "08fbcb1d-d8dc-4f65-bcf2-d3c67876ba96",
          "length": 92,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "60fe4e5b-ecdc-46f8-9c28-0bdb6dab1d52"
        },
        "item": {
          "id": "d53a09cd-51bf-4f25-a94c-4363b6b76749",
          "name": "Validate user is unable to get patient file details with missing required parameter",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "96d39541-107c-4da9-ac86-1ffdf113e6e6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient not found\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "fa9e1192-e45a-47fa-b977-86863b1ff354"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4708c629-d258-4210-aa00-b30f62e24ad1",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5d00c5f5-8c80-41f4-a5c6-3012a00b3fc6",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:18 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "48"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 652,
          "responseSize": 48
        },
        "id": "d53a09cd-51bf-4f25-a94c-4363b6b76749",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3394d119-eb2c-402a-81c0-3834eb04743b",
          "length": 92,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1176a921-ebfd-479d-b3c0-ddee5adf5b76"
        },
        "item": {
          "id": "6c88a548-1202-4a33-8ba2-f6ec5df9502e",
          "name": "Validate user is unable to get patient file details with incorrect query parameter",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6717396-485c-44a1-9e48-1cbee6380ea1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient not found\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "deab4d3e-67ba-4745-9775-3698902b0835"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ed8f2b14-3d89-4a03-8d1c-48baffdce27b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "efa6ba51-7854-48dd-a092-0b7e524cda92",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:20 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "48"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 609,
          "responseSize": 48
        },
        "id": "6c88a548-1202-4a33-8ba2-f6ec5df9502e",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "26ba113f-f842-4eb1-8976-02fb205da39d",
          "length": 92,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "988ede77-b2ec-48a2-8598-fd91dd15fae2"
        },
        "item": {
          "id": "34b186cb-b13c-4d26-8ef7-74ff91940759",
          "name": "Validate user is unable to get patient file details without Authorization",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "54eb3c98-9b14-46f3-9b96-90e003c2c14d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "b0b5a76f-9e18-4f89-aed8-77c010b3b395"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "be63c5f3-df9b-4040-ac4d-66ffc5346758",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "11e1dd50-c2b6-4832-b9cf-38947ca50203",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:20 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 267,
          "responseSize": 62
        },
        "id": "34b186cb-b13c-4d26-8ef7-74ff91940759",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8eb4c321-7367-42f0-8966-3a15a022e2f9",
          "length": 92,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3f6f4d36-a92f-41f2-99ab-c5f6be19879f"
        },
        "item": {
          "id": "56b5148f-fe65-4789-b53e-eeb22c7f6d57",
          "name": "Validate user is unable to get patient file details as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c2baf766-f01c-4521-bace-aa76727e8932",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "65400ab2-268b-4548-ab4e-9d948d9ce110"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8285e0e4-046a-41ab-92c8-dd939a620399",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c96e774a-e191-48f2-8bc9-8e1dfbca74a5",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:21 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 298,
          "responseSize": 58
        },
        "id": "56b5148f-fe65-4789-b53e-eeb22c7f6d57",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9b61ab58-c187-4e6f-8fdd-be5946bf8833",
          "length": 92,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "11715594-6334-45a9-a81c-e6108e437ab2"
        },
        "item": {
          "id": "f3cf1e9d-f4bd-4b50-9488-331f30d739fb",
          "name": "Validate user is unable to get patient file details as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{uid}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "51c5bc69-18cd-4b7b-9768-359a1198ae3c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "ccf4fbcc-3f46-4150-bb52-943520771e44"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b773f269-12bd-47c4-8b18-1c8530f26a0d",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "8e5a0419-1048-43b5-84ad-d19c47f1184f",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:21 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 266,
          "responseSize": 31
        },
        "id": "f3cf1e9d-f4bd-4b50-9488-331f30d739fb",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7ecd88d4-11b1-4264-87e7-2052e693830e",
          "length": 92,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "33a85f09-0ddb-4c0d-9ba2-a8688f2330cf"
        },
        "item": {
          "id": "ef485259-4b58-4bb8-b5cf-278806d6718e",
          "name": "Successfully export files",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9ee937fe-1a79-49ea-8520-3d94d239b2da",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "906bb57b-fbe0-49a4-abe0-7b6187b20fde"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "53e3fd53-30b3-4004-bbd1-017fe2e9f060",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "62571398-f37f-4047-8ae9-51019c438f87"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1cb87254-9fe8-41f7-8fe0-71734a5f40c3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "32a64bd6-44e0-49b1-a96b-10eb6d04a27c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:27 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "316"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              103,
              101,
              110,
              101,
              114,
              97,
              116,
              101,
              100,
              32,
              108,
              105,
              110,
              107,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              101,
              120,
              112,
              111,
              114,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              100,
              71,
              86,
              116,
              99,
              71,
              57,
              121,
              89,
              88,
              74,
              53,
              88,
              49,
              56,
              121,
              77,
              68,
              73,
              48,
              76,
              84,
              65,
              51,
              76,
              84,
              73,
              49,
              86,
              68,
              65,
              53,
              79,
              106,
              85,
              50,
              79,
              106,
              81,
              48,
              76,
              106,
              99,
              120,
              77,
              84,
              89,
              122,
              77,
              105,
              115,
              119,
              77,
              68,
              111,
              119,
              77,
              65,
              61,
              61,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              68,
              97,
              116,
              97,
              95,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              95,
              49,
              49,
              45,
              50,
              54,
              45,
              50,
              55,
              46,
              120,
              108,
              115,
              120,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              100,
              71,
              86,
              116,
              99,
              71,
              57,
              121,
              89,
              88,
              74,
              53,
              88,
              49,
              56,
              121,
              77,
              68,
              73,
              48,
              76,
              84,
              65,
              51,
              76,
              84,
              73,
              49,
              86,
              68,
              65,
              53,
              79,
              106,
              85,
              50,
              79,
              106,
              81,
              48,
              76,
              106,
              99,
              120,
              77,
              84,
              89,
              122,
              77,
              105,
              115,
              119,
              77,
              68,
              111,
              119,
              77,
              65,
              61,
              61,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              68,
              97,
              116,
              97,
              95,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              95,
              49,
              49,
              45,
              50,
              54,
              45,
              50,
              55,
              46,
              120,
              108,
              115,
              120,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 918,
          "responseSize": 316
        },
        "id": "ef485259-4b58-4bb8-b5cf-278806d6718e",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6c9e2eeb-4a86-428d-96c1-9cd2ece87208",
          "length": 92,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dee6bb28-9f53-4490-b9b2-d5c80de729a2"
        },
        "item": {
          "id": "6a25efca-d272-47fd-baa2-3986c719acb3",
          "name": "Successfully could not export files with incorrect id",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "1234567890"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b406a11e-c318-40c2-b7bc-eedd0e7ca3c7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                  "});"
                ],
                "_lastExecutionId": "1f49703b-a521-4475-8c80-8bf6b56ad1c7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "1234567890"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "71cdd519-63a2-470c-992f-e83b03c2b79c",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5ec0a3f7-e08a-43ad-a404-ab60c1eeb71f",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:32 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "56"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              102,
              101,
              116,
              99,
              104,
              105,
              110,
              103,
              32,
              100,
              97,
              116,
              97,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 898,
          "responseSize": 56
        },
        "id": "6a25efca-d272-47fd-baa2-3986c719acb3",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Status message is Valid",
              "message": "expected 'Error while fetching data' to deeply equal 'Error while removing files'",
              "stack": "AssertionError: expected 'Error while fetching data' to deeply equal 'Error while removing files'\n   at Object.eval sandbox-script.js:2:83)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "7b0bcff3-9286-4e87-97c9-3a7e0b71af31",
          "length": 92,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6cedb723-3b38-4c7a-8b33-53f3a727e2e9"
        },
        "item": {
          "id": "21661624-d37b-4091-84e8-013cf7a8aff6",
          "name": "Could not export files  due to missing authorization",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e2f2aea-e943-4a50-8931-a6b26d22e285",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "1838fb49-07e0-45fc-920e-4400204bbad1"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "31ccc7b7-5cc6-4650-bbf9-bf0818ebe566",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "2073438e-55b2-449f-ac38-438e947c2e58"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bb22b866-9275-46c1-8846-a78492e5b961",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "38b5967f-7882-45b4-b0ee-0a98dd0907e8",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:39 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 552,
          "responseSize": 62
        },
        "id": "21661624-d37b-4091-84e8-013cf7a8aff6",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "86adfdbf-21ab-42d9-89a5-39a0b229070e",
          "length": 92,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2cdaeb33-abb0-4e6d-88a5-72fc47c3e3c8"
        },
        "item": {
          "id": "1daaa912-e4a8-4cd0-b381-809faf7fb17e",
          "name": "Could not export files  due to invalid  authorization",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "52fcf039-ea62-4634-869b-7fd1c2199c5c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "28daa24f-f3ab-49f7-8c05-806458c8f4f7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f5107443-d5fd-4968-af9b-c469df7938a0",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9c2fa8ec-032a-4a44-a22c-b03306d2d763",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:45 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 548,
          "responseSize": 58
        },
        "id": "1daaa912-e4a8-4cd0-b381-809faf7fb17e",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "39271856-3003-40eb-a463-f249bd5255d7",
          "length": 92,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6e7e052d-c9a1-4b99-b426-111fa42e36c6"
        },
        "item": {
          "id": "4734b044-1aa0-4490-bbcc-92622cd3c30b",
          "name": "Could not export files  due to invalid CRUD operation",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "503d1054-be46-443b-8357-14f139933918",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "ba8e27f0-2c3f-4192-bda4-555f7e9b390b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ab02f76f-d558-45b2-9c34-6b30246169d8",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c9f5a297-8068-4669-a433-2955dc3d04a4",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 519,
          "responseSize": 31
        },
        "id": "4734b044-1aa0-4490-bbcc-92622cd3c30b",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f3e06b9b-061c-479b-8a82-85d90b114a26",
          "length": 92,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a91d6a95-b75c-49f5-a0ca-4d354e7fcd6d"
        },
        "item": {
          "id": "ae8ba29f-17ca-489c-a8f3-d8e3e588e176",
          "name": "Update patient workflow",
          "request": {
            "url": {
              "port": "8001",
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "13",
                "233",
                "37",
                "45"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"958fd271-1a6f-4cbb-8c53-bb1cbd3405cc\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"{{currentUTCTime}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35e6d8eb-35ad-4313-a167-2df74048e6da",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Updated Task\");\r",
                  "});"
                ],
                "_lastExecutionId": "e2f93e93-979d-492f-986e-53a856bba97e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "68fef269-385c-4182-86e0-35f22191e931",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "774ac79f-3618-4449-8a66-320d1eaff6f5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "13",
              "233",
              "37",
              "45"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6fd0684d-0293-4455-99be-94e2e99e0c11",
              "system": true
            },
            {
              "key": "Host",
              "value": "13.233.37.45:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "199",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"958fd271-1a6f-4cbb-8c53-bb1cbd3405cc\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-07-25T11:26:49.846Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "fba07ff1-2034-4088-9bf5-64c4037a556e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "210"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              84,
              97,
              115,
              107,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              57,
              53,
              56,
              102,
              100,
              50,
              55,
              49,
              45,
              49,
              97,
              54,
              102,
              45,
              52,
              99,
              98,
              98,
              45,
              56,
              99,
              53,
              51,
              45,
              98,
              98,
              49,
              99,
              98,
              100,
              51,
              52,
              48,
              53,
              99,
              99,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              50,
              54,
              58,
              52,
              57,
              46,
              56,
              52,
              54,
              90,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1016,
          "responseSize": 210
        },
        "id": "ae8ba29f-17ca-489c-a8f3-d8e3e588e176",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cb8e6b06-2f5b-4a3c-93f5-01339fda1357",
          "length": 92,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2b2dcc24-5a5b-43ea-9926-82abb44b3115"
        },
        "item": {
          "id": "0e0e3813-5475-4a62-a639-c999d264dcd3",
          "name": "Could not Update patient workflow with incorrect id",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"1234567890\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f491cd1-e73f-4ecd-95a3-0b136936b326",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "f92ac5c3-e615-4832-acfd-798950c84131"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d6679e83-a37e-4763-8450-ba6f03265229",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "173",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"1234567890\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "526abc08-f97c-4864-b876-c08fd6ab7fb9",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 680,
          "responseSize": 53
        },
        "id": "0e0e3813-5475-4a62-a639-c999d264dcd3",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e706ff08-c48c-44f9-b35b-23d9c3b84e2d",
          "length": 92,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0440f97c-af89-4582-8c80-b594d4f10bc0"
        },
        "item": {
          "id": "9b2746fe-16e9-49bb-9d6e-dda133d2b9df",
          "name": "Could not Update patient workflow with missing required fields",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2d3d3673-505b-4888-ad85-d4b1f747147f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Missing required fields\");\r",
                  "});"
                ],
                "_lastExecutionId": "1c42aae1-3b80-425b-852b-c50a6440d711"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1527a7b2-2f23-4458-b8e7-8fad8c37519a",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "150",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "adbf8102-e3e8-4978-a9a7-1ac71dcc60d5",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              77,
              105,
              115,
              115,
              105,
              110,
              103,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              32,
              102,
              105,
              101,
              108,
              100,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 638,
          "responseSize": 54
        },
        "id": "9b2746fe-16e9-49bb-9d6e-dda133d2b9df",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "04c9c7f6-bd10-4acb-a1a6-354339c29a66",
          "length": 92,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e834ac5a-cdf4-40c3-8df7-8d1d2707613f"
        },
        "item": {
          "id": "c4b940df-d0e4-4a97-8b32-9bf8a9f3ae03",
          "name": "Could not Update patient workflow with missing Authorization",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "078e6dd6-c6a4-4b47-9b0f-d85f5c8d2f0a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "500bd8c5-c2f0-45bf-8ccc-6183ab36c5a8"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "547efe9e-a717-4e7a-8bd7-f3cc81735d6f",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "d2cdde34-fb4f-4956-8f47-93ef9a13833a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "889381b4-f254-49a5-bd33-0a162669e587",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "169",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "9af9c173-913f-47e9-bba7-505f9a899b65",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 261,
          "responseSize": 62
        },
        "id": "c4b940df-d0e4-4a97-8b32-9bf8a9f3ae03",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f2a42ccf-a90c-4117-927d-5ab311ac9c89",
          "length": 92,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fe010478-3446-428a-8221-7d11af771fd8"
        },
        "item": {
          "id": "325d8f18-096c-4a97-b0b9-bb025ff8c6e8",
          "name": "Could not Update patient workflow with invalid Authorization",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fM",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5407856c-8374-4f49-8bbe-4b7a7d8aa205",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "789175af-748f-4984-9396-10c6ea2a2849"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fM",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d10bab4d-c2c2-4768-86d6-66ab1a37a211",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "169",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fM",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9f89e5e0-ae10-4ff5-9524-1a54b85dfba9",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:53 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 289,
          "responseSize": 58
        },
        "id": "325d8f18-096c-4a97-b0b9-bb025ff8c6e8",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9c9a74e9-bd4e-49d3-881b-df9e83d46366",
          "length": 92,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "684e108a-184a-499d-b36b-ccf9417e8408"
        },
        "item": {
          "id": "87489046-535b-47b9-8a00-a5ec80f7269b",
          "name": "Could not Update patient workflow with invalid CRUD  operation",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "170bbabc-a2e0-4b1d-8b76-85f1444f258b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "7a99050d-7e8d-4272-af65-9b0d2251b223"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5df1e151-9d38-43ef-a3a9-4d46880d55ed",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "169",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "f20cd2ef-cf58-4e6a-a704-31a13b86c1bf",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 11:26:53 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 268,
          "responseSize": 31
        },
        "id": "87489046-535b-47b9-8a00-a5ec80f7269b",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 22620
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "53801d183c4301200965b7a01cd80fb1",
          "id": "5c401221-1268-431c-8606-fff469986120",
          "timestamp": 1721906722624,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9b50759f-1773-4a9f-956d-77287aa64411",
          "name": "Validate user is able to upload variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);"
                ],
                "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "760c68d6-1f6d-480e-a145-edf2dc1adb4c",
          "length": 92,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1cd272c7-5ec3-429d-86e0-4b9d2c340692",
          "scriptId": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
          "execution": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
          "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:6)",
          "checksum": "426037118474dc04f020057db1d01764",
          "id": "d2409bd5-c5f8-4eb2-9693-50fb900a2bfd",
          "timestamp": 1721906722631,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "9b50759f-1773-4a9f-956d-77287aa64411",
          "name": "Validate user is able to upload variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);"
                ],
                "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "760c68d6-1f6d-480e-a145-edf2dc1adb4c",
          "length": 92,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1cd272c7-5ec3-429d-86e0-4b9d2c340692",
          "scriptId": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
          "execution": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "Cannot read properties of undefined (reading 'id')",
          "checksum": "7968b7e0e6adfbc32cfd96627c083201",
          "id": "01fd80f7-731d-4265-81e2-a0c136ab4329",
          "timestamp": 1721906722641,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "9b50759f-1773-4a9f-956d-77287aa64411",
          "name": "Validate user is able to upload variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);"
                ],
                "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "760c68d6-1f6d-480e-a145-edf2dc1adb4c",
          "length": 92,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1cd272c7-5ec3-429d-86e0-4b9d2c340692",
          "scriptId": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "fa16b32b478834c79271b7da4adb6fc0",
          "id": "5c34e2e6-f1b7-4868-aabd-5e433ef943db",
          "timestamp": 1721906723234,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
          "name": "Validate user is able to upload multiple variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                    "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "83468850-ccf5-4c0c-834d-ba24592ac0a7",
          "length": 92,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0f797f61-aa58-44e4-87ec-e68344a25af8",
          "scriptId": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
          "execution": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
          "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:7)",
          "checksum": "54a26343de30a93827990a84c7ff2fa2",
          "id": "cf4aaaf1-bb73-488d-9b00-f7ee72cf02d5",
          "timestamp": 1721906723235,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
          "name": "Validate user is able to upload multiple variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                    "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "83468850-ccf5-4c0c-834d-ba24592ac0a7",
          "length": 92,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0f797f61-aa58-44e4-87ec-e68344a25af8",
          "scriptId": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
          "execution": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 400 but got 422",
          "stack": "AssertionError: expected response to have status code 400 but got 422\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "4b27cfd1941fbfdaf9c86f5a28ca9e4d",
          "id": "ab6a15ee-70d5-42a7-b808-1f296731d570",
          "timestamp": 1721906723848,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
          "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d0839d2c-f03a-44f8-bd3c-50d64cf455aa",
          "length": 92,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d94ba466-c0ed-458b-b984-5842469264fe",
          "scriptId": "8553fee8-881d-4d79-8ac4-bf767834010b",
          "execution": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Only VCF and TSV files are allowed'",
          "stack": "AssertionError: expected undefined to deeply equal 'Only VCF and TSV files are allowed'\n   at Object.eval sandbox-script.js:2:8)",
          "checksum": "6aeb914ab58fa9b732d17c05de191924",
          "id": "75016994-275f-4bad-9d9e-2b12dd4bda89",
          "timestamp": 1721906723849,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
          "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d0839d2c-f03a-44f8-bd3c-50d64cf455aa",
          "length": 92,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d94ba466-c0ed-458b-b984-5842469264fe",
          "scriptId": "8553fee8-881d-4d79-8ac4-bf767834010b",
          "execution": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "50d4835c9caf06b438d08f51ec45a94a",
          "id": "e91afb89-18f3-4286-9bd0-5d0d41f9d2d3",
          "timestamp": 1721906724455,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "700b3998-8199-4973-8a9a-a175e87ab023",
          "name": "Validate user is able  to upload variants file without id",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);\r",
                  ""
                ],
                "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ef9dd85e-d600-4d58-862a-769cde1cceae",
          "length": 92,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6195ea31-ec1b-4248-aeab-6b6fc9502e24",
          "scriptId": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
          "execution": "586c36e4-a092-491c-bde4-f251dbd5efd3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
          "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:9)",
          "checksum": "957e81addada517aaf8b0feec400db8b",
          "id": "16a87fcc-2bc3-4396-804c-b39c8522acaf",
          "timestamp": 1721906724457,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "700b3998-8199-4973-8a9a-a175e87ab023",
          "name": "Validate user is able  to upload variants file without id",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);\r",
                  ""
                ],
                "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ef9dd85e-d600-4d58-862a-769cde1cceae",
          "length": 92,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6195ea31-ec1b-4248-aeab-6b6fc9502e24",
          "scriptId": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
          "execution": "586c36e4-a092-491c-bde4-f251dbd5efd3"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "Cannot read properties of undefined (reading 'id')",
          "checksum": "7968b7e0e6adfbc32cfd96627c083201",
          "id": "ff0002c0-ec5f-4b70-b6f6-1554c4f05ace",
          "timestamp": 1721906724461,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "700b3998-8199-4973-8a9a-a175e87ab023",
          "name": "Validate user is able  to upload variants file without id",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);\r",
                  ""
                ],
                "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ef9dd85e-d600-4d58-862a-769cde1cceae",
          "length": 92,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6195ea31-ec1b-4248-aeab-6b6fc9502e24",
          "scriptId": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 401 but got 422",
          "stack": "AssertionError: expected response to have status code 401 but got 422\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "efe6cdb44fa79eab1fc0ed45abf1e7ca",
          "id": "0e299f87-6be1-4e00-be94-56c07cd46daf",
          "timestamp": 1721906731108,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
          "name": "Validate user is unable to upload variants file as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d2df9e9b-86fd-4b40-81fa-2cc9d06c4622",
          "length": 92,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "42605c33-2cbd-4167-b5db-1a904c4d2954",
          "scriptId": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
          "execution": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Token is invalid or expired'",
          "stack": "AssertionError: expected undefined to deeply equal 'Token is invalid or expired'\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "c1d00c72df0e3ce27b8c1a5528457443",
          "id": "affa8753-d2d8-45a4-9e42-07c2f0a6dd19",
          "timestamp": 1721906731112,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
          "name": "Validate user is unable to upload variants file as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
              }
            }
          ]
        },
        "parent": {
          "id": "0a9e5030-fafa-4094-b7a0-6cee4e46d197",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "9b50759f-1773-4a9f-956d-77287aa64411",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0fa5526-5922-4832-a50f-42dd6d6f0bc6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "cabbef2a-77f7-48c6-9b70-81211ebc640f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8cf08b6c-0210-4803-9e6a-85d62288d942",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "7fcc6a49-2c2c-4874-95f3-f7b4f3d4cf37"
                  }
                }
              ]
            },
            {
              "id": "80fa9199-dfb4-4afe-838d-38a2b4e9bc82",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "27ab7430-880a-4b7e-b06f-2cf176f0b5c5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "00b4e84e-b27b-4382-8c8a-fec0f13d51a4"
                  }
                }
              ]
            },
            {
              "id": "8d02b2ca-3e28-49d2-8b06-911d93ca10b9",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8553fee8-881d-4d79-8ac4-bf767834010b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0d603437-7931-450d-9a04-fdcb55d4c1dd"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ee886635-0b9f-4aab-9efa-68f98a0dc42e",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "22bd6aef-9c8e-49ed-bf74-e2621aec07a7"
                  }
                }
              ]
            },
            {
              "id": "700b3998-8199-4973-8a9a-a175e87ab023",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e1d118a-6ebc-42ab-b19b-cc43b6b2f6a7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "586c36e4-a092-491c-bde4-f251dbd5efd3"
                  }
                }
              ]
            },
            {
              "id": "f70f23b2-9674-497f-84a5-944f41bb8c26",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaa30cfa-69fb-4668-a94f-a6ccacb7f83a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "5b1dccf0-734a-4076-8e62-45e604240ccb"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c36a5fc-843d-44cb-a992-8ae66b51773f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "d26ffc4e-28f2-4565-a850-8eba3531f1fc"
                  }
                }
              ]
            },
            {
              "id": "da9f39c2-847a-41f4-a82e-b14ae6bc78c2",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
                  }
                }
              ]
            },
            {
              "id": "10cfbd55-1350-4c27-a191-47395c13561a",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0c12560b-adaf-441a-84b9-97c865efbcf1",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "983d3c1d-4ed1-4338-8f79-138c1d2b0732"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d2df9e9b-86fd-4b40-81fa-2cc9d06c4622",
          "length": 92,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "42605c33-2cbd-4167-b5db-1a904c4d2954",
          "scriptId": "35576cf5-662b-410a-b4cd-dad4e0bea2af",
          "execution": "b9f860ea-b391-4c96-82eb-cae4f3a9314a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "b2a64114afd0cb6a1a0eade1163ed051",
          "id": "09680997-beec-4ea9-9f38-5754c93c1918",
          "timestamp": 1721906738494,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
          "name": "Validate user is able to upload medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1f245216-6ff8-40a3-a9e1-688a690144b8",
          "length": 92,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "97efbab2-7bb8-44da-a125-7f879d535ded",
          "scriptId": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
          "execution": "da90b113-fcc8-4224-abb9-f88074c944b3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
          "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:19)",
          "checksum": "3c2ad6264ec9b32813044c0e11064cec",
          "id": "330b57ab-6868-4e11-a4f9-30e6f08de542",
          "timestamp": 1721906738496,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
          "name": "Validate user is able to upload medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1f245216-6ff8-40a3-a9e1-688a690144b8",
          "length": 92,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "97efbab2-7bb8-44da-a125-7f879d535ded",
          "scriptId": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
          "execution": "da90b113-fcc8-4224-abb9-f88074c944b3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "6c8099a90382faabd3623095e9c0681d",
          "id": "7cfc796c-7f2d-406e-a2aa-d3a0e20b2723",
          "timestamp": 1721906739130,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b499e471-8849-4710-87c6-4914225a98a1",
          "name": "Validate user is able to upload medical files successfully without id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a15d8895-359d-495f-8206-0a50c303d6dd",
          "length": 92,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "50348925-1fde-4d9c-9ee1-29513ef84542",
          "scriptId": "15056670-4b4a-4a03-852b-0bea7a4d334c",
          "execution": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
          "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:20)",
          "checksum": "6c72f7ba6a8fb62fc7f149a46fcc193e",
          "id": "07ac8879-8204-494e-a211-dc3a9d035303",
          "timestamp": 1721906739131,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "b499e471-8849-4710-87c6-4914225a98a1",
          "name": "Validate user is able to upload medical files successfully without id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a15d8895-359d-495f-8206-0a50c303d6dd",
          "length": 92,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "50348925-1fde-4d9c-9ee1-29513ef84542",
          "scriptId": "15056670-4b4a-4a03-852b-0bea7a4d334c",
          "execution": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:21)",
          "checksum": "5f65793c28b0dc0f2b8c4b9852ab6ffa",
          "id": "d801e6e9-f922-4e8a-aa5a-1ec20fc27800",
          "timestamp": 1721906739769,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
          "name": "Validate user is able to upload multiple medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                    "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  "let responseData = pm.response.json();\r",
                  "let p_other_task_id = responseData.task_id;\r",
                  "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                ],
                "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "20d8e30a-d859-4b3e-86ab-3404718a28d3",
          "length": 92,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "72de8765-024b-4869-bfeb-6069378f5821",
          "scriptId": "8f8e55bb-c957-4794-8de2-fdff562d65db",
          "execution": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
          "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:21)",
          "checksum": "44987f21605e2f0174209337306c2616",
          "id": "93992684-9c39-468a-8163-d9b4ff1c9b69",
          "timestamp": 1721906739771,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
          "name": "Validate user is able to upload multiple medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                    "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  "let responseData = pm.response.json();\r",
                  "let p_other_task_id = responseData.task_id;\r",
                  "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                ],
                "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "20d8e30a-d859-4b3e-86ab-3404718a28d3",
          "length": 92,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "72de8765-024b-4869-bfeb-6069378f5821",
          "scriptId": "8f8e55bb-c957-4794-8de2-fdff562d65db",
          "execution": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 400 but got 422",
          "stack": "AssertionError: expected response to have status code 400 but got 422\n   at Object.eval sandbox-script.js:1:22)",
          "checksum": "a0f28b0f1c6665680284c26b68884141",
          "id": "2df608e8-d70d-40f7-86d8-32d2b0e99570",
          "timestamp": 1721906740368,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 22,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
          "name": "Validate user is unable to upload medical fileswith incorrect id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3dbd7c3b-854c-4f1a-ac68-97e44661b369",
          "length": 92,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a797aad1-1045-4671-9ad2-44a0d13531d3",
          "scriptId": "a2a00917-7aff-43a2-8667-87e6edf4778f",
          "execution": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Unknown error occurred'",
          "stack": "AssertionError: expected undefined to deeply equal 'Unknown error occurred'\n   at Object.eval sandbox-script.js:2:22)",
          "checksum": "749df53a068a808905571e6f35596719",
          "id": "9c5b3288-4eec-4ef0-b27b-e509f3ecfbbb",
          "timestamp": 1721906740369,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 22,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
          "name": "Validate user is unable to upload medical fileswith incorrect id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3dbd7c3b-854c-4f1a-ac68-97e44661b369",
          "length": 92,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a797aad1-1045-4671-9ad2-44a0d13531d3",
          "scriptId": "a2a00917-7aff-43a2-8667-87e6edf4778f",
          "execution": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 401 but got 422",
          "stack": "AssertionError: expected response to have status code 401 but got 422\n   at Object.eval sandbox-script.js:1:23)",
          "checksum": "a0091e47b1c6a25805ef83fec2ccfba2",
          "id": "3151580d-d929-48eb-83fa-c90296b405d7",
          "timestamp": 1721906740978,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 23,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
          "name": "Validate user is unable to upload medical files as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c04bb097-150c-4502-8257-92b853510ce4",
          "length": 92,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0db9300-fadb-4203-b73d-7ac23823b7b1",
          "scriptId": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
          "execution": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Token is invalid or expired'",
          "stack": "AssertionError: expected undefined to deeply equal 'Token is invalid or expired'\n   at Object.eval sandbox-script.js:2:23)",
          "checksum": "33c7bb761421c3dcf6a834f816de5b10",
          "id": "a231f4a3-cc88-4b90-a096-bfe6a0020577",
          "timestamp": 1721906740979,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 23,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
          "name": "Validate user is unable to upload medical files as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
              }
            }
          ]
        },
        "parent": {
          "id": "5bc80e13-efbb-460e-a329-9948d16e076f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "7087b503-1fdf-40dc-bbbb-9bf9ca1d6190",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "356fb710-28a7-4b16-8904-ea8c16e7cecd",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "da90b113-fcc8-4224-abb9-f88074c944b3"
                  }
                }
              ]
            },
            {
              "id": "b499e471-8849-4710-87c6-4914225a98a1",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15056670-4b4a-4a03-852b-0bea7a4d334c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "18fc7e58-3260-4cd7-9f6c-d6c2e343b868"
                  }
                }
              ]
            },
            {
              "id": "35e357af-29e6-474c-8f50-7c98fb6bfa1d",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f8e55bb-c957-4794-8de2-fdff562d65db",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "bd18a4a6-3f12-4cab-a66a-9e5f00624d24"
                  }
                }
              ]
            },
            {
              "id": "baa73107-37ca-45cc-9660-1e5d7e2f8a40",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2a00917-7aff-43a2-8667-87e6edf4778f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e2f9e570-13fb-4610-8028-7ef9738bdefe"
                  }
                }
              ]
            },
            {
              "id": "fbe15169-f607-423c-87c8-24a71c90ed36",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
                  }
                }
              ]
            },
            {
              "id": "965385e0-5aca-450f-92df-9de7e76871ed",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03b73163-41e1-4a12-8910-24e379c288ab",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72ddb56e-fcda-42c7-9783-6c87be67cdf0"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c04bb097-150c-4502-8257-92b853510ce4",
          "length": 92,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0db9300-fadb-4203-b73d-7ac23823b7b1",
          "scriptId": "b8aa8ede-7011-4309-ac64-ccfc85ae3c0e",
          "execution": "3b15c106-28f6-450c-8c5f-fe1974d4cf2e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response has all required fields",
          "message": "expected { status: 'error', …(1) } to have property 'data'",
          "stack": "AssertionError: expected { status: 'error', …(1) } to have property 'data'\n   at Object.eval sandbox-script.js:1:25)",
          "checksum": "1a9436db3717eaf0cfb5f483f746ab26",
          "id": "7b6adc6b-2ea1-4ba4-a83c-1d7a1f5f7205",
          "timestamp": 1721906742780,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 25,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
          "name": "Validate user is able to check status of task successfully for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
              }
            }
          ]
        },
        "parent": {
          "id": "8c02300b-ebee-4a56-bf71-92fc10f11049",
          "name": "check task status",
          "item": [
            {
              "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
              "name": "Validate user is able to check status of task successfully for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
                  }
                }
              ]
            },
            {
              "id": "ff66f542-7d9f-4651-a0e5-f7691348f068",
              "name": "Validate user is able to check status of task successfully for Patient Variant File",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ec5ec586-901d-4bba-9a02-d716d4e5684e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "7161bbb0-69d8-4d8e-9052-0bfe300866a9"
                  }
                }
              ]
            },
            {
              "id": "5853c684-b770-4e12-a312-64d1c38f3640",
              "name": "Validate user is unable to check status as task_id is incorrect.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "12669a2d-144e-4628-aa01-064ec779b05c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "6431a0f2-2732-4dc9-8472-7aa00ff48cfa"
                  }
                }
              ]
            },
            {
              "id": "f474f736-19b3-4eec-a0cd-bd9cdda2ceae",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9fc3292c-3310-4c63-8995-b2ffe3425d4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72605b4b-c4f0-4ff7-a1c0-a2c9514b9f26"
                  }
                }
              ]
            },
            {
              "id": "1c4dafeb-520e-49ae-b305-7375a2ef062f",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64d8268b-bdc3-4cea-bf11-1114b08f659a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0f6d1daf-78d6-4312-922d-3bfa174a2cda"
                  }
                }
              ]
            },
            {
              "id": "62aaa003-7636-4064-bb85-79cab54549fb",
              "name": "Validate user is unable to check status as the token is invalid.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e79c92ef-1fbf-4d48-95e9-131024c4684a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cc88a5ca-5017-4581-9fa0-85630cc1039f"
                  }
                }
              ]
            },
            {
              "id": "fba8e0ba-22dc-4368-86f3-d8cdff0dba66",
              "name": "Validate user is unable check status as incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a570fc80-e138-4907-8d15-2f9206e6e760",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "aefedbde-d726-4576-8266-caf674878f8f"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ebd5dd78-28ee-4964-9007-4368004ca186",
          "length": 92,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bb442eba-a640-4ebc-89ea-139e22787096",
          "scriptId": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
          "execution": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 400",
          "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:2:25)",
          "checksum": "d75c57a3193c7a5384963e27f30f331e",
          "id": "fc0cbcf1-a911-4b77-bf7a-2e6d176d8f2c",
          "timestamp": 1721906742781,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 25,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
          "name": "Validate user is able to check status of task successfully for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
              }
            }
          ]
        },
        "parent": {
          "id": "8c02300b-ebee-4a56-bf71-92fc10f11049",
          "name": "check task status",
          "item": [
            {
              "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
              "name": "Validate user is able to check status of task successfully for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
                  }
                }
              ]
            },
            {
              "id": "ff66f542-7d9f-4651-a0e5-f7691348f068",
              "name": "Validate user is able to check status of task successfully for Patient Variant File",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ec5ec586-901d-4bba-9a02-d716d4e5684e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "7161bbb0-69d8-4d8e-9052-0bfe300866a9"
                  }
                }
              ]
            },
            {
              "id": "5853c684-b770-4e12-a312-64d1c38f3640",
              "name": "Validate user is unable to check status as task_id is incorrect.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "12669a2d-144e-4628-aa01-064ec779b05c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "6431a0f2-2732-4dc9-8472-7aa00ff48cfa"
                  }
                }
              ]
            },
            {
              "id": "f474f736-19b3-4eec-a0cd-bd9cdda2ceae",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9fc3292c-3310-4c63-8995-b2ffe3425d4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72605b4b-c4f0-4ff7-a1c0-a2c9514b9f26"
                  }
                }
              ]
            },
            {
              "id": "1c4dafeb-520e-49ae-b305-7375a2ef062f",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64d8268b-bdc3-4cea-bf11-1114b08f659a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0f6d1daf-78d6-4312-922d-3bfa174a2cda"
                  }
                }
              ]
            },
            {
              "id": "62aaa003-7636-4064-bb85-79cab54549fb",
              "name": "Validate user is unable to check status as the token is invalid.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e79c92ef-1fbf-4d48-95e9-131024c4684a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cc88a5ca-5017-4581-9fa0-85630cc1039f"
                  }
                }
              ]
            },
            {
              "id": "fba8e0ba-22dc-4368-86f3-d8cdff0dba66",
              "name": "Validate user is unable check status as incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a570fc80-e138-4907-8d15-2f9206e6e760",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "aefedbde-d726-4576-8266-caf674878f8f"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ebd5dd78-28ee-4964-9007-4368004ca186",
          "length": 92,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bb442eba-a640-4ebc-89ea-139e22787096",
          "scriptId": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
          "execution": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response message is Valid",
          "message": "expected 'Task details could not be retrieved' to deeply equal 'Task details retrieved successfully'",
          "stack": "AssertionError: expected 'Task details could not be retrieved' to deeply equal 'Task details retrieved successfully'\n   at Object.eval sandbox-script.js:3:25)",
          "checksum": "2dd41ab584031d3d18f3b945ad4f24a6",
          "id": "319db8cb-5483-45ca-80ca-8974da2f1d41",
          "timestamp": 1721906742781,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 25,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
          "name": "Validate user is able to check status of task successfully for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
              }
            }
          ]
        },
        "parent": {
          "id": "8c02300b-ebee-4a56-bf71-92fc10f11049",
          "name": "check task status",
          "item": [
            {
              "id": "40270e8b-82f1-4ffb-9efc-cc83b25aa3e8",
              "name": "Validate user is able to check status of task successfully for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
                  }
                }
              ]
            },
            {
              "id": "ff66f542-7d9f-4651-a0e5-f7691348f068",
              "name": "Validate user is able to check status of task successfully for Patient Variant File",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ec5ec586-901d-4bba-9a02-d716d4e5684e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "7161bbb0-69d8-4d8e-9052-0bfe300866a9"
                  }
                }
              ]
            },
            {
              "id": "5853c684-b770-4e12-a312-64d1c38f3640",
              "name": "Validate user is unable to check status as task_id is incorrect.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "12669a2d-144e-4628-aa01-064ec779b05c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "6431a0f2-2732-4dc9-8472-7aa00ff48cfa"
                  }
                }
              ]
            },
            {
              "id": "f474f736-19b3-4eec-a0cd-bd9cdda2ceae",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9fc3292c-3310-4c63-8995-b2ffe3425d4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "72605b4b-c4f0-4ff7-a1c0-a2c9514b9f26"
                  }
                }
              ]
            },
            {
              "id": "1c4dafeb-520e-49ae-b305-7375a2ef062f",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64d8268b-bdc3-4cea-bf11-1114b08f659a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "0f6d1daf-78d6-4312-922d-3bfa174a2cda"
                  }
                }
              ]
            },
            {
              "id": "62aaa003-7636-4064-bb85-79cab54549fb",
              "name": "Validate user is unable to check status as the token is invalid.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e79c92ef-1fbf-4d48-95e9-131024c4684a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cc88a5ca-5017-4581-9fa0-85630cc1039f"
                  }
                }
              ]
            },
            {
              "id": "fba8e0ba-22dc-4368-86f3-d8cdff0dba66",
              "name": "Validate user is unable check status as incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a570fc80-e138-4907-8d15-2f9206e6e760",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "aefedbde-d726-4576-8266-caf674878f8f"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ebd5dd78-28ee-4964-9007-4368004ca186",
          "length": 92,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bb442eba-a640-4ebc-89ea-139e22787096",
          "scriptId": "e0f80f7c-0783-4bd6-a624-92ab1de6c0ef",
          "execution": "a0f85440-2c3c-4e2b-8dda-708993ccd936"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Status message is Valid",
          "message": "expected 'Error while fetching data' to deeply equal 'Error while removing files'",
          "stack": "AssertionError: expected 'Error while fetching data' to deeply equal 'Error while removing files'\n   at Object.eval sandbox-script.js:2:83)",
          "checksum": "5e0815517cd40e70b06774466022089c",
          "id": "9bedc0ba-a12b-4705-b95a-671fe67dc24f",
          "timestamp": 1721906792878,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 83,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6a25efca-d272-47fd-baa2-3986c719acb3",
          "name": "Successfully could not export files with incorrect id",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "1234567890"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b406a11e-c318-40c2-b7bc-eedd0e7ca3c7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                  "});"
                ],
                "_lastExecutionId": "1f49703b-a521-4475-8c80-8bf6b56ad1c7"
              }
            }
          ]
        },
        "parent": {
          "id": "df27c4bf-29e8-4980-ae78-b347357f1048",
          "name": "Export Files",
          "item": [
            {
              "id": "ef485259-4b58-4bb8-b5cf-278806d6718e",
              "name": "Successfully export files",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9ee937fe-1a79-49ea-8520-3d94d239b2da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "906bb57b-fbe0-49a4-abe0-7b6187b20fde"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "53e3fd53-30b3-4004-bbd1-017fe2e9f060",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "62571398-f37f-4047-8ae9-51019c438f87"
                  }
                }
              ]
            },
            {
              "id": "6a25efca-d272-47fd-baa2-3986c719acb3",
              "name": "Successfully could not export files with incorrect id",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "1234567890"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b406a11e-c318-40c2-b7bc-eedd0e7ca3c7",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "1f49703b-a521-4475-8c80-8bf6b56ad1c7"
                  }
                }
              ]
            },
            {
              "id": "21661624-d37b-4091-84e8-013cf7a8aff6",
              "name": "Could not export files  due to missing authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e2f2aea-e943-4a50-8931-a6b26d22e285",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "1838fb49-07e0-45fc-920e-4400204bbad1"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "31ccc7b7-5cc6-4650-bbf9-bf0818ebe566",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "2073438e-55b2-449f-ac38-438e947c2e58"
                  }
                }
              ]
            },
            {
              "id": "1daaa912-e4a8-4cd0-b381-809faf7fb17e",
              "name": "Could not export files  due to invalid  authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "52fcf039-ea62-4634-869b-7fd1c2199c5c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "28daa24f-f3ab-49f7-8c05-806458c8f4f7"
                  }
                }
              ]
            },
            {
              "id": "4734b044-1aa0-4490-bbcc-92622cd3c30b",
              "name": "Could not export files  due to invalid CRUD operation",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "503d1054-be46-443b-8357-14f139933918",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "ba8e27f0-2c3f-4192-bda4-555f7e9b390b"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "40ddb9d4-68d4-4f91-a2ca-791c7447cb36",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                  "\r",
                  "setTimeout(function() {\r",
                  "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                  "}, delay);\r",
                  ""
                ],
                "_lastExecutionId": "6ba603b8-5d80-45ad-926a-c36f36037719"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "58ca40f0-7527-4d37-af5d-2877f0bb6344",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "562443fe-e0cf-43d7-8e1b-8555cc97fc19"
              }
            }
          ]
        },
        "cursor": {
          "ref": "6c9e2eeb-4a86-428d-96c1-9cd2ece87208",
          "length": 92,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dee6bb28-9f53-4490-b9b2-d5c80de729a2",
          "scriptId": "b406a11e-c318-40c2-b7bc-eedd0e7ca3c7",
          "execution": "1f49703b-a521-4475-8c80-8bf6b56ad1c7"
        }
      }
    ],
    "error": null
  }
}