{
  "collection": {
    "_": {
      "postman_id": "8d91950a-d4a0-494b-b157-923533a8e4c4",
      "exporter_id": "33071978",
      "collection_link": "https://planetary-moon-946240.postman.co/workspace/Team-Workspace~b71c68f9-be16-4953-8b0f-b19e310fc6ac/collection/32153414-8d91950a-d4a0-494b-b157-923533a8e4c4?action=share&source=collection_link&creator=33071978"
    },
    "item": [
      {
        "id": "87363698-d6e8-4544-8268-db07869bac4c",
        "name": "Lists information of all patients' data whose state is confirmed",
        "item": [
          {
            "id": "48c656c8-31c7-4bdc-88d4-fca1d294b8db",
            "name": "Validate list of confirmed Patient",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "10"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json, text/plain, */*"
                },
                {
                  "key": "Accept-Language",
                  "value": "en-GB,en-US;q=0.9,en;q=0.8"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1NGQ4ZDQ0OC1lMGUxLTcwNTItMzVhYi1kMzM2ODc4NTc2MTIiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI1MTk1ZjQwMy01YmY1LTQ1ZTktYmZiNi1lNWNhZTAxNmU4ZjYiLCJldmVudF9pZCI6ImM3ODQwZjBjLTA5OWEtNGFjNC05ODQ4LWU0NTVlNjQ4ZGZhZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTk0NzIxNDMsImV4cCI6MTcxOTQ3NTc0MywiaWF0IjoxNzE5NDcyMTQzLCJqdGkiOiJkNmIzOGJjZS1mNGRiLTQxNzItOWM1Yi02ZjliMzQxZTRiNTUiLCJ1c2VybmFtZSI6IjU0ZDhkNDQ4LWUwZTEtNzA1Mi0zNWFiLWQzMzY4Nzg1NzYxMiJ9.tMjoxDwie0kIXFenk6AsY8OD6CSoPU1XVbdAJWxfCZn2QfwWWXJa3iTyDD64cN_rzA0o4qVt4LEXv-J4LC2omEeI2llx5DUa9sjGVxdBTX4th11vC-as5EMLMc1ZDOrLV5zVdunocxVr-F9HPEzyNPeUvFF6RafIxOp0p_NeHGF35O878GHsOvz-Zkf7m4UZHmKYwOys0TbwBS5U3k0UIgYMxVfRTiayLUCxsbGKDLOabEVdP5rrhvhkbbiXvM9LAzneWRlTxL7ZPrkU32u3EyedXMumXCC3T7RVz-faimDoLHlJE87hRyMPdCLSLZC9q8goN3pk779fxD9BoFHFtg"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Origin",
                  "value": "http://localhost:3000"
                },
                {
                  "key": "Referer",
                  "value": "http://localhost:3000/"
                },
                {
                  "key": "User-Agent",
                  "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
                }
              ],
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f2484f43-c323-4dd0-8035-98eb33f92c60",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient information fetched successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "0b4b654d-d226-4c47-9e76-27662230c44c"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "06d8bdfd-fef5-497d-80aa-bdf7d0fa21d1",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ac470a0-7b33-47f0-9c9f-347ebfc1b329"
                }
              }
            ]
          },
          {
            "id": "2f7706a4-bb30-4135-8059-9c2d2cbda6e4",
            "name": "Validate list of confirmed Patient not displaying without Authorization",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "1"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "eae25fb4-40bc-43b8-911d-8ae513db1ed0",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "46108ea4-6d08-4036-8800-abf8988e698b"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d65ecea-f52d-4689-945b-93fb8b51b6a9",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12e7542f-583d-4317-82d4-81a0d6f35462"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "cd03b0a2-42da-4c08-a840-284dff6bfd65",
            "name": "Validate list of confirmed Patient not displaying to the user as token is invalid/expired.",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "1"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "232f3401-a936-4f90-8ab4-d53cbc26e42a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "29750110-ae0c-48f7-aaeb-44ce75b8226c"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "1ce72c80-e77e-4435-88bf-c5dac4b72a73",
            "name": "Validate list of confirmed Patient not displaying with incorrect query data",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "100"
                  },
                  {
                    "key": "limit",
                    "value": "100"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c7d76594-4272-4528-b443-5b00eacc5bda",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Cannot find patients\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "bd576616-7be6-4105-b7cf-1828310d2d5f"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "8dd4abba-ce6e-47fb-8d4f-c3a43d5eca6e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca57ebe3-856b-4997-86f9-79c804af2c80"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "79b3bfbd-b21a-45a2-bff5-0d5896c220e9",
            "name": "Validate list of confirmed Patient not displaying to the user as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "get-all-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "0"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "cefa53ec-9c92-4f34-b610-17df23e3c5c3",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "99367fdb-12c0-4c52-b990-c3c766a2da6c"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7c03fc1-e2ec-4862-9044-93d88b701800",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f25d8ca-3766-4f81-9599-d0de1a026d0e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
        "name": "patient variant file upload",
        "item": [
          {
            "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
            "name": "Validate user is able to upload variants file successfully",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                    "});\r",
                    "\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "let p_info_task_id = response.data.id;\r",
                    "// Set the ID as an environment variable\r",
                    "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                    "\r",
                    "// Log the environment variable to the Postman console for verification\r",
                    "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                    "\r",
                    "let url = response.data.data[0].url;\r",
                    "\r",
                    "// Set the URL as an environment variable\r",
                    "pm.environment.set(\"file_url\", url);"
                  ],
                  "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                }
              }
            ]
          },
          {
            "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
            "name": "Validate user is able to upload multiple variants file successfully",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": [
                      "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                      "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    ]
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                }
              }
            ]
          },
          {
            "id": "5836f544-7661-42fc-ab6a-114175eb749a",
            "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                  "type": "text/javascript",
                  "exec": [],
                  "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                }
              }
            ]
          },
          {
            "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
            "name": "Validate user is able  to upload variants file without id",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                    "});\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "let p_info_task_id = response.data.id;\r",
                    "// Set the ID as an environment variable\r",
                    "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                    "\r",
                    "// Log the environment variable to the Postman console for verification\r",
                    "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                    "\r",
                    "let url = response.data.data[0].url;\r",
                    "\r",
                    "// Set the URL as an environment variable\r",
                    "pm.environment.set(\"file_url\", url);\r",
                    ""
                  ],
                  "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                }
              }
            ]
          },
          {
            "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
            "name": "Validate user is unable to upload without variants file",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                    "\r",
                    "setTimeout(function() {\r",
                    "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                    "}, delay);\r",
                    ""
                  ],
                  "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                }
              }
            ]
          },
          {
            "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
            "name": "Validate user is unable to upload variants file as user is unauthorized",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                }
              }
            ]
          },
          {
            "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
            "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
            "request": {
              "url": {
                "path": [
                  "patient-variant-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "c0973ab5-4076-4a79-bc1d-aa72dc734fe8",
        "name": "Start Validation Variants",
        "item": [
          {
            "id": "b1875390-5781-4f87-a5c3-077a6be46ed8",
            "name": "Validate the user is able to validate variants successfully",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "79f62f1c-7dea-498c-bfb3-2bdf0444de44",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) validated successfully\");\r",
                    "});\r",
                    "\r",
                    "\r",
                    "let p_variant_task_id = response.data.task_id;\r",
                    "// Set the ID as an environment variable\r",
                    "pm.environment.set(\"p_variant_task_id\", p_variant_task_id);\r",
                    "\r",
                    "// Log the environment variable to the Postman console for verification\r",
                    "console.log(\"p_variant_task_id set to:\", p_variant_task_id);"
                  ],
                  "_lastExecutionId": "df9b7473-5a18-4728-92f9-9f134b82f554"
                }
              }
            ]
          },
          {
            "id": "c5cc2502-c57c-4b5b-84fc-aabf7989bf13",
            "name": "Validate the user is unable to validate variants with incorrect query data",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "12345"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "62ca13fc-c0aa-44b3-87d2-5fe9ea09daf7",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "966dd066-30e1-4e1a-ac74-d23df2cba725"
                }
              }
            ]
          },
          {
            "id": "5290cce4-aa3f-4be8-80b0-de1a80e5cc03",
            "name": "Validate the user is unable to validate variants without query data",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "04a11ef3-3075-481f-85c7-b4e5759b5ce2",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "7b272ff5-4725-476f-84a4-6b179ef20e81"
                }
              }
            ]
          },
          {
            "id": "a3f789a6-7e17-45b2-96d2-09d47ba7d8f7",
            "name": "Validate the user is unable to validate variants without Authorization",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "93906c78-8487-4361-a6e0-8ccf4f6f02ec",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "6c02418f-f447-498b-925b-b06f3dfae4d9"
                }
              }
            ]
          },
          {
            "id": "3d4d1d72-316e-434f-9a80-a706e16d5fb8",
            "name": "Validate the user is unable to validate variants as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "aea77d1f-4667-42cf-a99e-3b592bb4fc03",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "c9b5042b-1d76-4d4b-b221-c70c98445a1e"
                }
              }
            ]
          },
          {
            "id": "fda4c6db-590e-4551-b2c5-15d17b73f509",
            "name": "Validate the user is unable to validate variants as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "start-validation-variants",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "65d163ea-4ec7-41e7-b6c8-87f8bdbdc28c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "faaec29f-3c3c-4a3f-be4e-944dee49ba65"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
        "name": "patient medical file upload",
        "item": [
          {
            "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
            "name": "Validate user is able to upload medical files successfully",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                }
              }
            ]
          },
          {
            "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
            "name": "Validate user is able to upload medical files successfully without id",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                }
              }
            ]
          },
          {
            "id": "a1342838-4465-4670-9162-e89f648846bd",
            "name": "Validate user is able to upload multiple medical files successfully",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": [
                      "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                      "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    ]
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                    "});\r",
                    "let responseData = pm.response.json();\r",
                    "let p_other_task_id = responseData.task_id;\r",
                    "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                  ],
                  "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                }
              }
            ]
          },
          {
            "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
            "name": "Validate user is unable to upload medical fileswith incorrect id",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "12345"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                }
              }
            ]
          },
          {
            "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
            "name": "Validate user is unable to upload medical files as user is unauthorized",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "files",
                    "type": "file",
                    "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  }
                ]
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                }
              }
            ]
          },
          {
            "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
            "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "e90d9720-ba83-4688-aacd-d70668cc07da",
        "name": "check task status",
        "item": [
          {
            "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
            "name": "Validate user is able to check status of task successfully for Patient info",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "516be162-26f0-439b-b903-e86fbb11ee75",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "41a32442-3894-4560-89ae-120df3e2f65e"
                }
              }
            ]
          },
          {
            "id": "b369d374-0cb8-4cf3-92c8-06701cf103cb",
            "name": "Validate user is able to check status of task successfully for Patient Variant File",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "814dca3a-94c2-41aa-bd51-9d2f5becf165",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "3668300c-dd10-4b4e-85a9-d0f027ca2a78"
                }
              }
            ]
          },
          {
            "id": "bb090519-b4fa-4a4a-bf61-16f47448c2de",
            "name": "Validate user is unable to check status as task_id is incorrect.",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b4dbe240-bbaf-483a-a71f-e26368ea9679",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "a0c9def1-ce50-4b8a-869b-dd469077bd87"
                }
              }
            ]
          },
          {
            "id": "a29dadf3-69c1-4240-b6fd-1e202d105b14",
            "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "da4e3f39-7820-47e0-b764-2ac7b7bc40f8",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "ea7e8d25-5da4-4313-8519-8a8956cd9420"
                }
              }
            ]
          },
          {
            "id": "a89bea02-1765-414c-ba42-c2c3cf2470c4",
            "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "cb30adc3-9836-4d57-af1f-f9ff3fae28e9",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "e9a44ebb-03ec-45a4-b9cd-257accba15b3"
                }
              }
            ]
          },
          {
            "id": "9ef9a257-949e-4a17-b59a-f04787be0699",
            "name": "Validate user is unable to check status as the token is invalid.",
            "request": {
              "url": {
                "path": [
                  "check-task-status",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8f443cc5-00b8-4525-825e-3b060d99b65d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "ff1559b9-ac3e-40bc-b979-6f8bf3d9e6bf"
                }
              }
            ]
          },
          {
            "id": "5b67c71b-ddb0-460e-8645-994c73d6a1b1",
            "name": "Validate user is unable check status as incorrect CRUD operation is used.",
            "request": {
              "url": {
                "path": [
                  "patient-medical-file-upload",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f89f2fcd-d3d6-40c2-b9b8-3bdfa2388b57",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8f7da108-d716-40b9-8495-a7b1ea4a0305"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "c9f1b4de-4bbc-4308-9a78-ffcf163bcdc8",
        "name": "Lists information of a Patient's data",
        "item": [
          {
            "id": "759c94f1-b296-4dde-ad6d-f47ab27d8349",
            "name": "Validate user is able to fetch patient's data successfully",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "05434c8b-d8bc-4f30-ba48-548b6ca3c2ad"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c6da7848-f945-46de-b531-e76fd32374eb",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Status Code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient details fetched successfully.\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "270a0880-69b6-4d58-bfa7-f69058dfee74"
                }
              }
            ]
          },
          {
            "id": "55d69de8-be8d-4c05-b685-2e627e029d2e",
            "name": "Validate user is unable to fetch patient's data with incorrect query data",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "12345"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8e7ca684-d72b-466b-9d00-b9cb79f4e7b3",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status Code is 400\", function () {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Invalid id\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "f506877e-a585-45c5-af79-040c5e739ec1"
                }
              }
            ]
          },
          {
            "id": "646125c6-2edc-460d-b0bd-b4d13a666c78",
            "name": "Validate user is unable to fetch patient's data without query data",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "75405d15-1393-4726-832e-9c75cb8cd65e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Invalid id\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8dc77f3a-46c5-44d1-9583-8b7a14f4d8d3"
                }
              }
            ]
          },
          {
            "id": "4d6e1e98-8285-44db-ba9c-aa7d6ae1ad7a",
            "name": "Validate user is unable to fetch patient's data without Authorization",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2768702b-2d83-46fc-b01b-1d592dfc108a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "22eb8926-e398-49ff-ae46-9a937393f988"
                }
              }
            ]
          },
          {
            "id": "56d4ea1b-a903-432c-934d-9d23d99e5265",
            "name": "Validate user is unable to fetch patient's data with invalid/expired token",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "24ad0cac-1dad-41c4-a33a-c3eb20603ab9",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "6d13b66c-cf24-4421-8f4c-e78a035c336f"
                }
              }
            ]
          },
          {
            "id": "be0bd4b9-f587-432c-b4aa-867c20aab12b",
            "name": "Validate user is unable to fetch patient's data as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "get-patient-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "36304d3a-e0ac-4f9f-a209-e4a1f83746ec",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "f7bca071-d339-4dd0-b7b9-381c7b89c29e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7b352de3-8e43-415e-b79d-d42a00ca7f1b",
        "name": "Updates the information of Patient's data",
        "item": [
          {
            "id": "e9fb94ef-d166-4ab4-baa1-9b5ff3f3500c",
            "name": "Validate user is able to check patient id successfully",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "dcfd7888-64c1-4247-afec-171314e9182e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient id does not exist\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "ac6d71c7-6cfc-458c-8bb9-e898d8970c59"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1b65cf1-7b54-474c-9f17-6fab718c2bc7",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let patientId = \"patient_\" + new Date().getTime();\r",
                    "\r",
                    "// Set the environment variable\r",
                    "pm.environment.set(\"patient_id\", patientId);\r",
                    "\r",
                    "console.log(\"Environment Patient ID set to:\", patientId);\r",
                    "\r",
                    "function getRandomString(length) {\r",
                    "    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
                    "    let result = '';\r",
                    "    for (let i = 0; i < length; i++) {\r",
                    "        result += chars.charAt(Math.floor(Math.random() * chars.length));\r",
                    "    }\r",
                    "    return result;\r",
                    "}\r",
                    "\r",
                    "// Generate a unique name using a random string\r",
                    "let name = \"Name_\" + getRandomString(8) + \"_\" + new Date().getTime();\r",
                    "pm.environment.set(\"name\", name);"
                  ],
                  "_lastExecutionId": "feda3261-f993-467f-930f-f0f4e426ccec"
                }
              }
            ]
          },
          {
            "id": "0f28d9fe-33ec-45ef-a819-0c34a434a177",
            "name": "Validate user is able to update patient's information successfully",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\":\"4a92ba9f-d7be-4eb1-bad0-2b22660b2a79\",\r\n    \"patient_id\":\"{{patient_id}}\",\r\n     \"name\": \"{{name}}\",\r\n    \"age\": 20,\r\n    \"gender\":\"female\",\r\n    \"tumor_type\":\"liver_cancer\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\"\r\n    \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "06a5207a-d1ad-445f-aaab-3055abb53661",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient info updated successfully.\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8ebb9365-8f5e-4da6-a15a-036b63237245"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "73b33d51-c3c8-46b3-b8c1-d6d035acee0d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d9540cd-a0f4-4c14-807f-e8c8a8585820"
                }
              }
            ]
          },
          {
            "id": "612c5719-1253-4c32-bb3f-c1e703a0f19f",
            "name": "Validate user is unable to update patient's information with missing required field in the body",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n\"id\":\"{{p_info_task_id}}\",\r\n  \"name\": \"Patient Name\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5d4b96c0-507a-486e-b3ea-b05a83cae925",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Missing required fields\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8bdf34e7-5ce0-4532-b312-97af40ca8cd1"
                }
              }
            ]
          },
          {
            "id": "198ad42f-98a5-4c30-9e35-492c96cbaadd",
            "name": "Validate user is unable to update patient's information without Authorization",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "795f9603-ea2e-4ab1-b9ac-6f25ef4eacff",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "b73431d3-818a-48b1-a40e-80cb581fc2b9"
                }
              }
            ]
          },
          {
            "id": "7f7c2993-bace-47ad-8667-7c8ff6849073",
            "name": "Validate user is unable to update patient's information as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e59e6c36-5e0d-4f9f-bcc4-0c105d3ac699",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8a3de2bb-c6ce-43bc-85a5-7793cc621879"
                }
              }
            ]
          },
          {
            "id": "e3bcf64b-bf27-4931-a3ec-9cb89b458fdd",
            "name": "Validate user is unable to update patient's information as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "update-patient-details",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7c2469fb-f558-44e5-a4ed-14b9abfd8f00",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "3bd1b0bf-d4e8-42a3-91dd-69244252c057"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "33267af0-657f-46f8-955d-880d4da5a071",
        "name": "Check Patient ID",
        "item": [
          {
            "id": "eb543209-70d5-4b61-9c83-05b4e9c595d7",
            "name": "Validate user is able to check patient id successfully(true)",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "246ba363-e5e2-480a-b888-fd53a2237432",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient id already exists.\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "95ab00a3-ba7e-49e3-a9a1-6eedcfff8f55"
                }
              }
            ]
          },
          {
            "id": "55dd311e-17db-42ec-93d8-a62e6c8d8bc0",
            "name": "Validate user is unable to check patient id as patient_id is missing in the body",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e5735ebc-be2e-421a-9d5a-98b3b72f8040",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "098daac4-978e-4ff6-b0fc-19e6b99357eb"
                }
              }
            ]
          },
          {
            "id": "ae5be06c-eac4-4138-9abc-c5a81d273819",
            "name": "Validate user is unable to check patient id as incorrect patient_id is provided",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"K345678\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "88c82a59-ba97-41df-bc88-acd9171ac349",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient id does not exist\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "e71d3dac-8927-477a-8ca4-211221ecc560"
                }
              }
            ]
          },
          {
            "id": "fbcc6b06-ea1d-480a-8963-cc2a6cd67487",
            "name": "Validate user is unable to check patient id without authorization",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7fc0eb30-5f5a-4314-8d3e-45e9213cb209",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8fef2dd1-42de-4440-8bc8-1e12fdffc4e4"
                }
              }
            ]
          },
          {
            "id": "71841b07-594d-47a2-8fc3-561c27505eef",
            "name": "Validate user is unable to check patient id as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "382b4e84-34a9-4c9b-bbc8-eb17ba4afd16",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "240fe3da-cf97-4512-b54e-66cee7c3b302"
                }
              }
            ]
          },
          {
            "id": "0fda6a13-62ca-44f4-83f4-2de475fba935",
            "name": "Validate user is unable to check patient id as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "check-patient-id",
                  ""
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c237cc4f-9627-4a47-b18b-ebffd88bccc1",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "5bb046b3-f07c-484e-9474-2872d5798c93"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "id": "6ad5004e-74fd-48bd-91c1-f9e99ce6c2fa",
        "name": "Search patients",
        "item": [
          {
            "id": "5eebc27e-d0f1-4e55-83ca-a18800339131",
            "name": "Validate user is able to search patients successfully",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "keyword",
                    "value": "{{patient_id}}"
                  },
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "10"
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d0304b58-5be1-4816-bd6d-704d477f2a2f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Search items fetched successfully\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "b7454011-422d-4256-95f9-51914eea13d9"
                }
              }
            ]
          },
          {
            "id": "0826d065-bc29-41fe-9aca-65d7f3d4af97",
            "name": "Validate user is able to search patients if optional parameters are missing",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "page",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "limit",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": ""
                  },
                  {
                    "key": "keyword",
                    "value": "{{patient_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3d0c5475-92a2-4f27-bd38-8da6346be8fc",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Search items fetched successfully\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "f4777dae-03df-48ca-a692-5c3a9c4f0526"
                }
              }
            ]
          },
          {
            "id": "578a1778-bb77-43d9-8f6b-eed247a27619",
            "name": "Validate user is unable to search patients as required parameter is missing",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "keyword",
                    "value": ""
                  },
                  {
                    "disabled": true,
                    "key": "limit",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "page",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4123f8b9-0b16-46a7-9580-b9409c1bb1ca",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "fcd2bf96-4744-4e95-b73b-c2dc3d3b6a6a"
                }
              }
            ]
          },
          {
            "id": "40a9e047-9d07-481d-8c0f-5ef8f5dbafcc",
            "name": "Validate user is unable to search patients without Authorization",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "keyword",
                    "value": "{{patient_id}}"
                  },
                  {
                    "disabled": true,
                    "key": "limit",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "page",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "49029d03-c74e-4f9d-8e39-f929a924e1db",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "a5da7170-f6e4-4c7f-8ad2-22aef27e2524"
                }
              }
            ]
          },
          {
            "id": "c90814ad-a6da-481b-93ab-3672e459a6ca",
            "name": "Validate user is unable to search patients as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "search-patients"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "keyword",
                    "value": "{{patient_id}}"
                  },
                  {
                    "disabled": true,
                    "key": "limit",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_field",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "sort_by",
                    "value": null
                  },
                  {
                    "disabled": true,
                    "key": "page",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9d631eb5-4b63-4130-98d5-dea6ab6ea151",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "93e805e4-f1c1-4dad-867f-abc016c1dd05"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b4b19ced-56a8-4bbe-aa17-f78a76d9ca54",
        "name": "Get current user task info",
        "item": [
          {
            "id": "ceab139c-0dc1-4a02-b03d-6dafc6bee76c",
            "name": "Validate user is able to get current user task info successfully",
            "request": {
              "url": {
                "path": [
                  "get-current-user-task-info"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "disabled": true,
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "fc7f366c-0675-4652-8b81-d95b471206b8",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient details fetched successfully.\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "303b456f-72fd-4634-9a39-7e2133631bbd"
                }
              }
            ]
          },
          {
            "id": "bcc31a96-8f7d-40a2-960c-b6620f961d50",
            "name": "Validate user is unable to get current user task info without authorization",
            "request": {
              "url": {
                "path": [
                  "get-current-user-task-info"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f8548814-bbf3-4029-ac27-719ec09bb5db",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "    });"
                  ],
                  "_lastExecutionId": "5ef01c8d-462c-42a4-a37c-ad9a8dfca711"
                }
              }
            ]
          },
          {
            "id": "a210008d-6411-4511-930e-8e348d7f0e9d",
            "name": "Validate user is unable to get current user task info as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "get-current-user-task-info"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5da657fa-c5c5-4db9-ad55-b06b4f137f0b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "0ccad901-ced5-4fc8-b91a-cd4367dff29e"
                }
              }
            ]
          },
          {
            "id": "34248423-a271-4b2a-b79c-b077380ab76c",
            "name": "Validate user is unable to get current user task info as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "get-current-user-task-info"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6d9b69a1-385e-4e31-9a78-1326ab857ee5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "47bd14eb-075d-4e3a-98e6-396849aa53ec"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "02641966-baf9-4196-bdcc-0bdb6f01bf51",
        "name": "Start variant processing",
        "item": [
          {
            "id": "3e87fcdc-e119-46b3-ac9b-cd0a57a0831b",
            "name": "Validate user is able to start variant processing successfully",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "4a92ba9f-d7be-4eb1-bad0-2b22660b2a79"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2c317e85-875a-4fe9-a127-01f9bc0539a0",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "    pm.expect(response).to.have.property(\"data\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) processed successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "98f26a65-db1c-4052-9fc5-0aadcfaaa212"
                }
              }
            ]
          },
          {
            "id": "bd9ad85a-570b-4dd0-98f9-947278b8ca16",
            "name": "Validate user is unable to start variant processing as required parameter is missing",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "92b71ebe-1d4e-4afa-a594-a956477c86b4",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "53d0b97f-f943-450a-bf48-150f93576496"
                }
              }
            ]
          },
          {
            "id": "9ac9d029-df35-434d-962a-6177cf3f6072",
            "name": "Validate user is unable to start variant processing without Authorization",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d647557e-83e5-4050-a493-20d7930402a3",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "528651cf-bfcb-443f-bec0-a7e8f0e2e53b"
                }
              }
            ]
          },
          {
            "id": "aedc28b1-af50-42ee-80a3-701cafc11b5c",
            "name": "Validate user is unable to start variant processing as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9657e5e3-ba56-4c83-b65b-4d0aabaee9e6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "7446c709-3698-459c-bd59-bc3395875365"
                }
              }
            ]
          },
          {
            "id": "ef43b0e7-f53e-47db-beb3-51fdc35ded05",
            "name": "Validate user is unable to start variant processing as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "start-variant-processing"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5b90a497-6129-42b5-87bd-9f8f6ddc3f20",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "717029e5-3b91-40dc-80c0-1ebdb8039cd5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6a7ed7ec-80c1-46ca-8499-4e31cbabca4a",
        "name": "Patient demograph dropdown",
        "item": [
          {
            "id": "dd757472-64ed-499f-ac13-67cd42326ea4",
            "name": "Validate user is able to display patient demograph dropdown successfully",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "tmb"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5c23a312-2ec8-4ef2-82a5-8b3d3348f493",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Parse the JSON response\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "// Expected array elements\r",
                    "let expectedElements = [\"High\", \"Low\", \"Intermediate\", \"Unknown\"];\r",
                    "\r",
                    "// Validate the response is an array\r",
                    "pm.test(\"Response is an array\", function () {\r",
                    "    pm.expect(response).to.be.an('array');\r",
                    "});\r",
                    "\r",
                    "// Validate the response contains all expected elements\r",
                    "pm.test(\"Response contains all expected elements\", function () {\r",
                    "    expectedElements.forEach(function(element) {\r",
                    "        pm.expect(response).to.include(element);\r",
                    "    });\r",
                    "});\r",
                    "\r",
                    "// Validate the response does not contain any unexpected elements\r",
                    "pm.test(\"Response does not contain unexpected elements\", function () {\r",
                    "    response.forEach(function(element) {\r",
                    "        pm.expect(expectedElements).to.include(element);\r",
                    "    });\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "887dbb58-b4fa-41f0-8492-3573346bf4ee"
                }
              }
            ]
          },
          {
            "id": "937eb979-9f65-4b1e-a382-6df27370615b",
            "name": "Validate user is unable to display patient demograph dropdown with missing required parameter",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7ec6cac2-d904-47ce-9df5-64e94e2f7d12",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "0b755b66-7b76-40dd-a60b-2ef2ac82de5f"
                }
              }
            ]
          },
          {
            "id": "8467b49c-7072-4523-a635-46a2f0451791",
            "name": "Validate user is unable to display patient demograph dropdown with incorrect query parameter",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7845a510-fa8b-4161-9caa-a28a09926d73",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "9676fcb1-7a37-480d-a8b4-f8ed3e23799b"
                }
              }
            ]
          },
          {
            "id": "5de279b0-dcd1-4aae-a326-bc6ef0690da7",
            "name": "Validate user is unable to display patient demograph dropdown without Authorization",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "tmb"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c63982be-baeb-4f91-9c60-9e39a3a4a1f2",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "07604a14-9c5f-4be6-8aa2-fbd15afb05b9"
                }
              }
            ]
          },
          {
            "id": "00178e39-9aae-462a-82c8-e9ddc987980d",
            "name": "Validate user is unable to display patient demograph dropdown as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "tmb"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0e4456b2-ee36-4c06-a797-a787b932cc8c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "11fdc8b6-9c39-48fd-b477-8d27d48da66a"
                }
              }
            ]
          },
          {
            "id": "a6474958-3807-4c24-8c18-4b5dd9432edb",
            "name": "Validate user is unable to display patient demograph dropdown as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "patient-demograph-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "tmb"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5f99561f-6640-46b6-906c-fb9900486520",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "8b4fb60c-35cc-4b77-844c-c06561766610"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4099b707-d237-471d-aa1a-c39d10c715c7",
        "name": "Sub tumor dropdown",
        "item": [
          {
            "id": "66b1ead5-b003-49ac-bb80-b348d5acbfdf",
            "name": "Validate user is able to display sub tumor type dropdown successfully",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "lung_cancer"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e4ff8c9f-bccc-4254-bb8a-38993d33a466",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Parse the JSON response\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "// Expected array elements\r",
                    "let expectedElements = [\r",
                    "    \"Small Cell Lung Cancer\",\r",
                    "    \"Non-Small Cell Lung Cancer\",\r",
                    "    \"Combined Small Cell Lung Carcinoma (CSCLC)\",\r",
                    "    \"Inflammatory Myofibroblastic Lung Tumor (IMTL)\",\r",
                    "    \"Lung Adenocarcinoma In Situ (LAIS)\",\r",
                    "    \"Lung Neuroendocrine Tumor (LNET)\",\r",
                    "    \"Non-Small Cell Lung Cancer (NSCLC)\",\r",
                    "    \"Pleuropulmonary Blastoma (PPB)\",\r",
                    "    \"Pulmonary Lymphangiomyomatosis (LAM)\",\r",
                    "    \"Sarcomatoid Carcinoma of the Lung (SARCL)\",\r",
                    "    \"Atypical Lung Carcinoid (ALUCA)\",\r",
                    "    \"Large Cell Neuroendocrine Carcinoma (LUNE)\",\r",
                    "    \"Lung Carcinoid (LUCA)\",\r",
                    "    \"Small Cell Lung Cancer (SCLC)\",\r",
                    "    \"Ciliated Muconodular Papillary Tumor of the Lung (CMPT)\",\r",
                    "    \"Large Cell Lung Carcinoma (LCLC)\",\r",
                    "    \"Lung Adenocarcinoma (LUAD)\",\r",
                    "    \"Lung Adenosquamous Carcinoma (LUAS)\",\r",
                    "    \"Lung Squamous Cell Carcinoma (LUSC)\",\r",
                    "    \"NUT Carcinoma of the Lung (NUTCL)\",\r",
                    "    \"Pleomorphic Carcinoma of the Lung (LUPC)\",\r",
                    "    \"Poorly Differentiated Non-Small Cell Lung Cancer (NSCLCPD)\",\r",
                    "    \"Salivary Gland-Type Tumor of the Lung (SGTTL)\",\r",
                    "    \"Spindle Cell Carcinoma of the Lung (SPCC)\",\r",
                    "    \"Basaloid Large Cell Carcinoma of the Lung (BLCLC)\",\r",
                    "    \"Clear Cell Carcinoma of the Lung (CCLC)\",\r",
                    "    \"Giant Cell Carcinoma of the Lung (GCLC)\",\r",
                    "    \"Large Cell Lung Carcinoma With Rhabdoid Phenotype (RLCLC)\",\r",
                    "    \"Lymphoepithelioma-like Carcinoma of the Lung (LECLC)\",\r",
                    "    \"Adenoid Cystic Carcinoma of the Lung (LUACC)\",\r",
                    "    \"Mucoepidermoid Carcinoma of the Lung (LUMEC)\"\r",
                    "];\r",
                    "\r",
                    "// Validate the response is an array\r",
                    "pm.test(\"Response is an array\", function () {\r",
                    "    pm.expect(response).to.be.an('array');\r",
                    "});\r",
                    "\r",
                    "// Validate the response contains all expected elements\r",
                    "pm.test(\"Response contains all expected elements\", function () {\r",
                    "    expectedElements.forEach(function(element) {\r",
                    "        pm.expect(response).to.include(element);\r",
                    "    });\r",
                    "});\r",
                    "\r",
                    "// Validate the response does not contain any unexpected elements\r",
                    "pm.test(\"Response does not contain unexpected elements\", function () {\r",
                    "    response.forEach(function(element) {\r",
                    "        pm.expect(expectedElements).to.include(element);\r",
                    "    });\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "014618db-f781-47cc-99c0-3117d9477f0e"
                }
              }
            ]
          },
          {
            "id": "18718129-1212-4729-8e4f-cc7270bf4c99",
            "name": "Validate user is unable to display sub tumor type dropdown with missing required parameter",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b36af5e7-dcf4-43c3-b498-950978f0b0dc",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "0cb28231-1f54-499a-afdb-3365323de80c"
                }
              }
            ]
          },
          {
            "id": "81d259b9-5af6-4adb-aa4c-1c045aee50b0",
            "name": "Validate user is unable to display sub tumor type dropdown with incorrect query parameter",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "55ff1500-2f02-4122-a641-3a0647533602",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "c3baa43a-5839-4ba5-a94d-36859b2713de"
                }
              }
            ]
          },
          {
            "id": "b0887753-4743-44f6-8d63-cc13aa5f89e2",
            "name": "Validate user is unable to display sub tumor type dropdown without Authorization",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "lung_cancer"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c4dda4f1-6c7b-4b72-a19d-d40d4b972bd8",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "72f6096b-dca8-4751-bffc-e865daa45452"
                }
              }
            ]
          },
          {
            "id": "950f25f2-d03f-4685-a67d-62c6bf45ff45",
            "name": "Validate user is unable to display sub tumor type dropdown as toekn is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "lung_cancer"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "10913985-8596-4455-ad0a-0e0b83e4d56c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "3f21e11a-0c44-4af5-a0b9-06a9f6a628f0"
                }
              }
            ]
          },
          {
            "id": "79094cf9-e97d-4cec-828e-45ab1c2d33e1",
            "name": "Validate user is unable to display sub tumor type dropdown as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "sub-tumor-dropdown"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "key",
                    "value": "{{key}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d1c6c966-dbc6-448d-921d-4d6cb392cf03",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "de31d74f-e4df-46aa-b5b7-733683c7ee60"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "deb0feae-2cd6-4fbf-97bd-43369c77c265",
        "name": "Get patient file details",
        "item": [
          {
            "id": "889d023e-77fb-4da5-86f6-2299ed31721d",
            "name": "Validate user is able to get patient file details successfully",
            "request": {
              "url": {
                "port": "8001",
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "13",
                  "233",
                  "37",
                  "45"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "958fd271-1a6f-4cbb-8c53-bb1cbd3405cc"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b6f8990d-0550-4e6a-8613-d05c8aefbcea",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Response has all required fields\", ()=> {\r",
                    "    pm.expect(response).to.have.property(\"status\");\r",
                    "    pm.expect(response).to.have.property(\"message\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient file details retrieved\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "8704fb58-2490-40bf-a5ba-522d289fb4da"
                }
              }
            ]
          },
          {
            "id": "c826933f-ac91-4bff-9386-e8293999ae42",
            "name": "Validate user is unable to get patient file details with missing required parameter",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "01f871cd-62c5-4bac-88d1-c8ece60601df",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient not found\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "1f21b7a3-98b1-4298-8b83-4d91b3ac136b"
                }
              }
            ]
          },
          {
            "id": "fb1d5c9c-7542-479f-9ce6-131f160686b6",
            "name": "Validate user is unable to get patient file details with incorrect query parameter",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "\"12345\""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "dedc3cc6-a7ff-4140-b9f7-926bd31eb0f6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Patient not found\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "f32ffa9e-0272-433d-886a-3744c5482a2d"
                }
              }
            ]
          },
          {
            "id": "e3ab91bc-da3b-44b9-8259-32ad360eccf4",
            "name": "Validate user is unable to get patient file details without Authorization",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ae354f60-4397-4480-8168-dc8b16a99b44",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "9526efcb-a0eb-4242-acc2-40497254dfde"
                }
              }
            ]
          },
          {
            "id": "81e2c27e-d8f3-4125-8cca-c11e00669e0c",
            "name": "Validate user is unable to get patient file details as token is invalid/expired",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b365038e-029d-4d24-bef4-075889816e04",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "346fe6d6-82c8-4023-8cf7-cc1d63370ae5"
                }
              }
            ]
          },
          {
            "id": "076a55a2-cfe4-4664-815d-22b8ec276970",
            "name": "Validate user is unable to get patient file details as incorrect CRUD operation is used",
            "request": {
              "url": {
                "path": [
                  "get-patient-file-details"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{uid}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8f8f0b6d-fe96-4d78-b805-ed9aecf13c81",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid',()=>{\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "99ae016f-50b1-4ae0-a1ba-d1b3f7bc8dc0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "44951c83-0779-4664-a45f-418f70da163d",
        "name": "Export Files",
        "item": [
          {
            "id": "373bfac8-05b2-48ea-ac8a-27a694735040",
            "name": "Successfully export files",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0e0836c4-d71d-4a97-a805-a33eee9058a5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "dd52bf90-b52a-417c-8fce-892a625dce70"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d497db1-6e3c-4a5d-a5ac-67254d75c591",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be0bbbb4-6113-4399-ab4f-89a2a3ea1b1d"
                }
              }
            ]
          },
          {
            "id": "1c2a541a-eebb-4510-ab3e-31dc58385917",
            "name": "Successfully could not export files with incorrect id",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "1234567890"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f6a03e42-afa0-4f3a-8a7c-a3787b208aad",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "04c546cb-c76e-4b67-a09c-d5297ba6bf66"
                }
              }
            ]
          },
          {
            "id": "c8f7352b-100f-4c6b-95ab-7d3391422327",
            "name": "Could not export files  due to missing authorization",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "199daa44-9aba-4c9b-8320-cee4249bec84",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "53aee542-4886-40ab-8c73-9d3ab538d793"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "53791a3d-51cf-4a31-b5da-13fea0d702b8",
                  "type": "text/javascript",
                  "exec": [],
                  "_lastExecutionId": "372faa2e-33ec-4390-a55b-66541068af94"
                }
              }
            ]
          },
          {
            "id": "a889b806-50ba-459a-9a75-460788e2d136",
            "name": "Could not export files  due to invalid  authorization",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
                }
              }
            ]
          },
          {
            "id": "9d081f49-9055-46ae-9273-2cd86a1fac67",
            "name": "Could not export files  due to invalid CRUD operation",
            "request": {
              "url": {
                "path": [
                  "export-files"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{p_info_task_id}}"
                  }
                ],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "72740b62-f749-4969-a351-0128645fc7a2",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "c48cd0af-ce89-4bb6-9f92-af494e44b3b2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c48577f0-eaeb-4d9e-be9e-5c019d203b2b",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                "\r",
                "setTimeout(function() {\r",
                "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                "}, delay);\r",
                ""
              ],
              "_lastExecutionId": "c53585f2-6137-4f74-9afe-14d48d66301c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60d62679-a7c6-45b5-9197-efdc951beb77",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "\r",
                ""
              ],
              "_lastExecutionId": "d0306a62-2fe0-4330-8cfe-fc355e8f417a"
            }
          }
        ]
      },
      {
        "id": "ad0b11f2-28ec-4b4f-bba8-6a5564cfc22c",
        "name": "Update Patient Workflow",
        "item": [
          {
            "id": "90d5d7e9-6fbb-4688-b793-1eb4963cef86",
            "name": "Update patient workflow",
            "request": {
              "url": {
                "port": "8001",
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "13",
                  "233",
                  "37",
                  "45"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"958fd271-1a6f-4cbb-8c53-bb1cbd3405cc\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"{{currentUTCTime}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c7f5fc1d-3cfd-4400-b418-c16ef3c2f782",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Updated Task\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "49220e50-c312-4444-a879-907a34d3ff35"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "cecd0d41-497b-447c-8d9d-335b2726f63f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "423ac503-5394-4bbc-a6de-0c4eac4aaa2a"
                }
              }
            ]
          },
          {
            "id": "0a9277c0-586d-4da3-996a-5a3842e0f640",
            "name": "Could not Update patient workflow with incorrect id",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"1234567890\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "bfef9822-ca6f-4d5b-b680-8d7724a68350",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "9b8258ed-5186-41a0-afe0-efcfc63194a7"
                }
              }
            ]
          },
          {
            "id": "eab297c8-2b3c-40a0-a064-e8de26fd93cc",
            "name": "Could not Update patient workflow with missing required fields",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "90ed29e1-1885-42a6-9328-9d1de103e7a5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Missing required fields\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "53b3ed9f-ed23-44c1-8caf-75995cff3d88"
                }
              }
            ]
          },
          {
            "id": "f6bbca98-3381-40eb-be9f-b13ced50caf7",
            "name": "Could not Update patient workflow with missing Authorization",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "491efbba-9a44-4f00-b011-50aa59671d75",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "ed45d43f-0021-4788-abf8-f7d6909585a7"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab88fc86-c2fb-463e-8975-1a5e7be4337a",
                  "type": "text/javascript",
                  "exec": [],
                  "_lastExecutionId": "cc7a6763-f092-4bac-9702-75d5d1293d92"
                }
              }
            ]
          },
          {
            "id": "694b19e2-4c87-4efc-82f4-1cf6ea6b54ed",
            "name": "Could not Update patient workflow with invalid Authorization",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fM",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "bd936c6a-1eeb-447a-8c58-308b6938b33a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "47e02987-925b-4d16-8538-aa9efdd14a68"
                }
              }
            ]
          },
          {
            "id": "aa27f809-f147-4dc6-ab8f-7b8976973560",
            "name": "Could not Update patient workflow with invalid CRUD  operation",
            "request": {
              "url": {
                "path": [
                  "update-patient-workflow"
                ],
                "host": [
                  "{{baseUrl_patient_service}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{bearer_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "262fc0f4-4643-4ad7-9e3c-5e4794c74525",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test('Status Code is valid', () => {\r",
                    "    pm.response.to.have.status(405);\r",
                    "});\r",
                    "pm.test('Status message is Valid', ()=>{\r",
                    "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "75f28926-5782-4e8c-93f3-537037785162"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d944627-f6a9-4025-a497-8876cdd22043",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "const currentUTCTime = new Date().toISOString();\r",
                "\r",
                "// Log the current time in UTC ISO format (optional)\r",
                "console.log(currentUTCTime);\r",
                "\r",
                "// Set the current time as an environment variable\r",
                "pm.environment.set(\"currentUTCTime\", currentUTCTime);"
              ],
              "_lastExecutionId": "6539eec9-c872-4fab-885f-da780f359974"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "028428f6-ff26-4234-a4ef-565f912270ba",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "_lastExecutionId": "38491778-b04f-4c19-9067-aab1db2c8146"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "8d91950a-d4a0-494b-b157-923533a8e4c4",
      "name": "PatientService",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2024-07-25T09:04:02.667Z",
      "postman_exported_using": "Postman/11.3.2"
    },
    "id": "31a12bec-5eff-4e5c-969b-554cbb3dd5f4",
    "name": "OncoConnect",
    "values": [
      {
        "type": "any",
        "value": "http://3.137.2.183:8000",
        "key": "baseUrl"
      },
      {
        "type": "any",
        "value": "lukasz.ryley@floodouts.com",
        "key": "fakemail_address"
      },
      {
        "type": "any",
        "value": "testuser606588@yopmail.com",
        "key": "temporary_email"
      },
      {
        "type": "any",
        "value": "",
        "key": "email_username"
      },
      {
        "type": "any",
        "value": "",
        "key": "email_domain"
      },
      {
        "type": "any",
        "value": "072455",
        "key": "reset_otp"
      },
      {
        "type": "any",
        "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
        "key": "bearer_token"
      },
      {
        "type": "any",
        "value": "",
        "key": "refresh_token"
      },
      {
        "type": "any",
        "value": "valafab314@cmheia.com",
        "key": "mailinator_email"
      },
      {
        "type": "any",
        "value": "http://3.137.2.183:8001",
        "key": "baseUrl_patient_service"
      },
      {
        "type": "any",
        "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d",
        "key": "p_info_task_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "uid"
      },
      {
        "type": "any",
        "value": "",
        "key": "task_id"
      },
      {
        "type": "any",
        "value": "bf2f18f0-5283-44d2-bed4-6f1729fdf6fb",
        "key": "p_variant_task_id"
      },
      {
        "type": "any",
        "value": "patient_1721908978028",
        "key": "patient_id"
      },
      {
        "type": "any",
        "value": "Name_Mts2StWZ_1721908978028",
        "key": "name"
      },
      {
        "type": "any",
        "value": "",
        "key": "file_url"
      },
      {
        "type": "any",
        "value": null,
        "key": "p_other_task_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "variant_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "variantIds"
      },
      {
        "type": "any",
        "value": "http://3.137.2.183:8002",
        "key": "base_Url_caseManger"
      },
      {
        "type": "any",
        "value": "",
        "key": "variant_ids"
      },
      {
        "type": "any",
        "value": "",
        "key": "dynamic_payload"
      },
      {
        "type": "any",
        "value": "2024-07-25T12:04:00.725Z",
        "key": "currentUTCTime"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_1"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_2"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_3"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_4"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_5"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_6"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_7"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_8"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_9"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_10"
      }
    ]
  },
  "globals": {
    "id": "a64d01ea-d8a4-4770-bbec-07f04062d9b8",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 92,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 127,
        "pending": 0,
        "failed": 2
      },
      "prerequests": {
        "total": 92,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 92,
        "pending": 0,
        "failed": 1
      },
      "tests": {
        "total": 92,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 219,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 103,
        "pending": 0,
        "failed": 2
      },
      "prerequestScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 634.5614648033127,
      "responseMin": 265,
      "responseMax": 2179,
      "responseSd": 348.62020073243553,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721908944296,
      "completed": 1721909041078
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 92,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "472f3230-081f-49c0-b855-6570684dfcca",
          "httpRequestId": "96227bf6-1f04-4135-af46-59f7cb04e8c3"
        },
        "item": {
          "id": "48c656c8-31c7-4bdc-88d4-fca1d294b8db",
          "name": "Validate list of confirmed Patient",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "Accept-Language",
                "value": "en-GB,en-US;q=0.9,en;q=0.8"
              },
              {
                "key": "Authorization",
                "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI1NGQ4ZDQ0OC1lMGUxLTcwNTItMzVhYi1kMzM2ODc4NTc2MTIiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI1MTk1ZjQwMy01YmY1LTQ1ZTktYmZiNi1lNWNhZTAxNmU4ZjYiLCJldmVudF9pZCI6ImM3ODQwZjBjLTA5OWEtNGFjNC05ODQ4LWU0NTVlNjQ4ZGZhZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTk0NzIxNDMsImV4cCI6MTcxOTQ3NTc0MywiaWF0IjoxNzE5NDcyMTQzLCJqdGkiOiJkNmIzOGJjZS1mNGRiLTQxNzItOWM1Yi02ZjliMzQxZTRiNTUiLCJ1c2VybmFtZSI6IjU0ZDhkNDQ4LWUwZTEtNzA1Mi0zNWFiLWQzMzY4Nzg1NzYxMiJ9.tMjoxDwie0kIXFenk6AsY8OD6CSoPU1XVbdAJWxfCZn2QfwWWXJa3iTyDD64cN_rzA0o4qVt4LEXv-J4LC2omEeI2llx5DUa9sjGVxdBTX4th11vC-as5EMLMc1ZDOrLV5zVdunocxVr-F9HPEzyNPeUvFF6RafIxOp0p_NeHGF35O878GHsOvz-Zkf7m4UZHmKYwOys0TbwBS5U3k0UIgYMxVfRTiayLUCxsbGKDLOabEVdP5rrhvhkbbiXvM9LAzneWRlTxL7ZPrkU32u3EyedXMumXCC3T7RVz-faimDoLHlJE87hRyMPdCLSLZC9q8goN3pk779fxD9BoFHFtg"
              },
              {
                "key": "Connection",
                "value": "keep-alive"
              },
              {
                "key": "Origin",
                "value": "http://localhost:3000"
              },
              {
                "key": "Referer",
                "value": "http://localhost:3000/"
              },
              {
                "key": "User-Agent",
                "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f2484f43-c323-4dd0-8035-98eb33f92c60",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient information fetched successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "0b4b654d-d226-4c47-9e76-27662230c44c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "06d8bdfd-fef5-497d-80aa-bdf7d0fa21d1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "3ac470a0-7b33-47f0-9c9f-347ebfc1b329"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "Accept-Language",
              "value": "en-GB,en-US;q=0.9,en;q=0.8"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Referer",
              "value": "http://localhost:3000/"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5e41b2f9-ece2-4a4e-92bb-a716a1d71689",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1930df8f-c267-4867-bfae-e156617ddfdf",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:25 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "4331"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "access-control-allow-credentials",
              "value": "true"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              110,
              102,
              111,
              114,
              109,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              103,
              101,
              115,
              34,
              58,
              50,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              115,
              34,
              58,
              49,
              57,
              49,
              44,
              34,
              112,
              114,
              101,
              118,
              105,
              111,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              34,
              58,
              50,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              56,
              56,
              48,
              56,
              53,
              49,
              57,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              50,
              58,
              48,
              48,
              58,
              53,
              53,
              46,
              56,
              51,
              55,
              55,
              51,
              56,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              100,
              57,
              101,
              56,
              50,
              48,
              102,
              45,
              55,
              57,
              48,
              55,
              45,
              52,
              57,
              48,
              98,
              45,
              98,
              101,
              102,
              49,
              45,
              102,
              97,
              54,
              97,
              52,
              55,
              56,
              97,
              101,
              102,
              52,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              67,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              53,
              58,
              51,
              56,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              103,
              97,
              110,
              105,
              109,
              54,
              48,
              48,
              52,
              57,
              64,
              98,
              115,
              105,
              100,
              101,
              115,
              109,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              50,
              58,
              48,
              48,
              58,
              51,
              54,
              46,
              48,
              49,
              55,
              57,
              55,
              50,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              50,
              55,
              102,
              101,
              100,
              98,
              98,
              45,
              49,
              100,
              99,
              99,
              45,
              52,
              49,
              50,
              57,
              45,
              98,
              99,
              100,
              97,
              45,
              50,
              55,
              97,
              49,
              53,
              48,
              98,
              55,
              56,
              51,
              54,
              101,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              54,
              58,
              48,
              50,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              54,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              99,
              110,
              115,
              95,
              98,
              114,
              97,
              105,
              110,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              99,
              108,
              105,
              110,
              105,
              99,
              97,
              108,
              95,
              116,
              114,
              105,
              97,
              108,
              115,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              100,
              97,
              116,
              101,
              116,
              105,
              109,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              51,
              52,
              58,
              48,
              54,
              46,
              48,
              52,
              51,
              90,
              34,
              125,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              115,
              97,
              109,
              98,
              105,
              116,
              46,
              115,
              97,
              104,
              111,
              111,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              53,
              57,
              58,
              52,
              57,
              46,
              49,
              51,
              53,
              50,
              49,
              51,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              112,
              114,
              111,
              103,
              110,
              111,
              115,
              116,
              105,
              99,
              95,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              99,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              112,
              114,
              111,
              103,
              110,
              111,
              115,
              116,
              105,
              99,
              95,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              99,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              49,
              48,
              102,
              49,
              99,
              55,
              102,
              45,
              97,
              50,
              97,
              52,
              45,
              52,
              53,
              49,
              98,
              45,
              56,
              56,
              52,
              55,
              45,
              49,
              55,
              54,
              53,
              53,
              54,
              57,
              52,
              57,
              56,
              55,
              54,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              65,
              115,
              105,
              115,
              104,
              67,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              53,
              58,
              51,
              57,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              100,
              97,
              116,
              101,
              116,
              105,
              109,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              53,
              57,
              58,
              48,
              49,
              46,
              51,
              54,
              55,
              90,
              34,
              125,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              97,
              115,
              105,
              115,
              104,
              46,
              110,
              97,
              121,
              97,
              107,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              53,
              57,
              58,
              48,
              52,
              46,
              51,
              50,
              48,
              55,
              53,
              51,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              101,
              48,
              101,
              54,
              52,
              102,
              50,
              45,
              53,
              97,
              50,
              48,
              45,
              52,
              48,
              98,
              52,
              45,
              56,
              102,
              57,
              53,
              45,
              48,
              55,
              57,
              97,
              98,
              55,
              100,
              98,
              98,
              101,
              51,
              48,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              67,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              55,
              58,
              49,
              52,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              103,
              97,
              110,
              105,
              109,
              54,
              48,
              48,
              52,
              57,
              64,
              98,
              115,
              105,
              100,
              101,
              115,
              109,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              54,
              58,
              50,
              53,
              46,
              50,
              56,
              53,
              48,
              55,
              54,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              112,
              114,
              111,
              103,
              110,
              111,
              115,
              116,
              105,
              99,
              95,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              99,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              112,
              114,
              111,
              103,
              110,
              111,
              115,
              116,
              105,
              99,
              95,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              99,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              99,
              97,
              97,
              100,
              52,
              97,
              50,
              45,
              49,
              48,
              55,
              100,
              45,
              52,
              52,
              49,
              97,
              45,
              57,
              55,
              51,
              56,
              45,
              56,
              55,
              101,
              102,
              49,
              57,
              51,
              49,
              49,
              52,
              99,
              50,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              65,
              115,
              105,
              115,
              104,
              67,
              114,
              101,
              97,
              116,
              101,
              100,
              64,
              49,
              52,
              58,
              51,
              52,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              103,
              101,
              110,
              101,
              116,
              105,
              99,
              95,
              114,
              105,
              115,
              107,
              115,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              100,
              97,
              116,
              101,
              116,
              105,
              109,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              53,
              55,
              58,
              51,
              56,
              46,
              50,
              48,
              57,
              90,
              34,
              125,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              97,
              115,
              105,
              115,
              104,
              46,
              110,
              97,
              121,
              97,
              107,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              53,
              55,
              58,
              52,
              48,
              46,
              53,
              48,
              49,
              54,
              48,
              50,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              112,
              114,
              111,
              103,
              110,
              111,
              115,
              116,
              105,
              99,
              95,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              99,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              112,
              114,
              111,
              103,
              110,
              111,
              115,
              116,
              105,
              99,
              95,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              99,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              99,
              102,
              53,
              50,
              49,
              55,
              55,
              45,
              98,
              101,
              49,
              100,
              45,
              52,
              57,
              100,
              49,
              45,
              97,
              102,
              99,
              57,
              45,
              55,
              48,
              56,
              97,
              51,
              98,
              102,
              56,
              57,
              49,
              53,
              52,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              77,
              97,
              100,
              104,
              117,
              115,
              109,
              105,
              116,
              97,
              64,
              49,
              51,
              58,
              49,
              52,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              57,
              58,
              52,
              57,
              58,
              51,
              52,
              46,
              54,
              51,
              54,
              48,
              51,
              48,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              99,
              49,
              49,
              53,
              51,
              54,
              97,
              45,
              57,
              102,
              49,
              48,
              45,
              52,
              101,
              57,
              100,
              45,
              57,
              98,
              52,
              98,
              45,
              51,
              53,
              55,
              98,
              49,
              97,
              50,
              57,
              56,
              98,
              52,
              53,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              65,
              80,
              84,
              50,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              53,
              49,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              111,
              119,
              101,
              108,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              109,
              97,
              100,
              104,
              117,
              115,
              109,
              105,
              116,
              97,
              110,
              97,
              116,
              104,
              56,
              48,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              56,
              58,
              51,
              50,
              58,
              49,
              54,
              46,
              56,
              56,
              52,
              55,
              56,
              57,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              100,
              56,
              55,
              100,
              98,
              97,
              50,
              45,
              56,
              100,
              99,
              54,
              45,
              52,
              52,
              102,
              52,
              45,
              98,
              52,
              102,
              54,
              45,
              99,
              97,
              97,
              52,
              52,
              57,
              54,
              98,
              51,
              57,
              54,
              99,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              67,
              114,
              101,
              97,
              116,
              101,
              78,
              111,
              119,
              64,
              54,
              58,
              52,
              56,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              52,
              53,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              117,
              110,
              103,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              97,
              115,
              105,
              115,
              104,
              46,
              110,
              97,
              121,
              97,
              107,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              48,
              52,
              58,
              52,
              48,
              58,
              53,
              50,
              46,
              54,
              54,
              52,
              57,
              50,
              51,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              95,
              100,
              114,
              117,
              103,
              95,
              114,
              101,
              115,
              105,
              115,
              116,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              101,
              99,
              50,
              98,
              57,
              55,
              57,
              101,
              45,
              53,
              52,
              100,
              57,
              45,
              52,
              53,
              55,
              55,
              45,
              97,
              50,
              99,
              56,
              45,
              97,
              53,
              51,
              54,
              97,
              102,
              98,
              99,
              98,
              100,
              101,
              49,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              65,
              80,
              84,
              49,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              53,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              101,
              115,
              111,
              112,
              104,
              97,
              103,
              101,
              97,
              108,
              95,
              115,
              116,
              111,
              109,
              97,
              99,
              104,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              109,
              97,
              100,
              104,
              117,
              115,
              109,
              105,
              116,
              97,
              110,
              97,
              116,
              104,
              56,
              48,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              52,
              84,
              49,
              49,
              58,
              48,
              53,
              58,
              53,
              50,
              46,
              49,
              51,
              50,
              51,
              53,
              49,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1029,
          "responseSize": 4331
        },
        "id": "48c656c8-31c7-4bdc-88d4-fca1d294b8db",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "61f029c1-981b-4c56-b227-bef71cdd51eb",
          "length": 92,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a81859e3-2000-4279-8ef3-b6b057c78dcc"
        },
        "item": {
          "id": "2f7706a4-bb30-4135-8059-9c2d2cbda6e4",
          "name": "Validate list of confirmed Patient not displaying without Authorization",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eae25fb4-40bc-43b8-911d-8ae513db1ed0",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "46108ea4-6d08-4036-8800-abf8988e698b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4d65ecea-f52d-4689-945b-93fb8b51b6a9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "12e7542f-583d-4317-82d4-81a0d6f35462"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "938fee53-c3ea-408d-b08c-d2d5b59f88cd",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "61e2ed56-dcf4-41aa-b597-7300e6bdd9ff",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:26 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 276,
          "responseSize": 62
        },
        "id": "2f7706a4-bb30-4135-8059-9c2d2cbda6e4",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9425b257-8d66-4750-9f2c-327c7a746da4",
          "length": 92,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "338363f7-f88e-4c41-bc0f-46a77f5c7379"
        },
        "item": {
          "id": "cd03b0a2-42da-4c08-a840-284dff6bfd65",
          "name": "Validate list of confirmed Patient not displaying to the user as token is invalid/expired.",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "232f3401-a936-4f90-8ab4-d53cbc26e42a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "29750110-ae0c-48f7-aaeb-44ce75b8226c"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "92d48f7e-95a4-47a3-83ac-e503d86b6b0e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9b7133d1-5e32-4340-a730-e386858caecd",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:26 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 297,
          "responseSize": 58
        },
        "id": "cd03b0a2-42da-4c08-a840-284dff6bfd65",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "91b804bc-c038-4f1f-a880-433991abe045",
          "length": 92,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eda68cfe-5d85-47d5-b46c-2a5ae7e69c25"
        },
        "item": {
          "id": "1ce72c80-e77e-4435-88bf-c5dac4b72a73",
          "name": "Validate list of confirmed Patient not displaying with incorrect query data",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "100"
                },
                {
                  "key": "limit",
                  "value": "100"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c7d76594-4272-4528-b443-5b00eacc5bda",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Cannot find patients\");\r",
                  "});"
                ],
                "_lastExecutionId": "bd576616-7be6-4105-b7cf-1828310d2d5f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8dd4abba-ce6e-47fb-8d4f-c3a43d5eca6e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "ca57ebe3-856b-4997-86f9-79c804af2c80"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "100"
              },
              {
                "key": "limit",
                "value": "100"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "21cfe663-0adc-4736-a85e-590070b00d18",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "63506b49-8577-45df-a3f1-1d5e62f8e92e",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:26 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "51"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              97,
              110,
              110,
              111,
              116,
              32,
              102,
              105,
              110,
              100,
              32,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 619,
          "responseSize": 51
        },
        "id": "1ce72c80-e77e-4435-88bf-c5dac4b72a73",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f0cac2c6-8254-449a-beae-c2a3f157ca11",
          "length": 92,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a353aad9-f23e-4d15-83d4-58ee65e29417"
        },
        "item": {
          "id": "79b3bfbd-b21a-45a2-bff5-0d5896c220e9",
          "name": "Validate list of confirmed Patient not displaying to the user as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "get-all-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "0"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cefa53ec-9c92-4f34-b610-17df23e3c5c3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "99367fdb-12c0-4c52-b990-c3c766a2da6c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a7c03fc1-e2ec-4862-9044-93d88b701800",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "7f25d8ca-3766-4f81-9599-d0de1a026d0e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-all-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "0"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "522967c9-98ff-47f5-a736-95af0e68fac1",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5e5d8bf2-fd63-420d-b112-765712dde16d",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:27 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 304,
          "responseSize": 31
        },
        "id": "79b3bfbd-b21a-45a2-bff5-0d5896c220e9",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b567330c-e06f-42b7-bfda-9a5d68379534",
          "length": 92,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0a5330e9-b7be-443b-8397-58c7614a98ed"
        },
        "item": {
          "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
          "name": "Validate user is able to upload variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);"
                ],
                "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "26fb883d-dbfe-4914-8798-5ecddb4add82",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d30273bf-9fc9-449b-ad53-366d16a69e80",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:28 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 544,
          "responseSize": 90
        },
        "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
              "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:6)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "Cannot read properties of undefined (reading 'id')",
              "checksum": "7968b7e0e6adfbc32cfd96627c083201",
              "id": "021eff01-c86f-4d31-8935-fe98a207744d",
              "timestamp": 1721908947916,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ee00bc8c-6c34-479a-b50b-2f89c94aaa91",
          "length": 92,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dd841ee0-06fa-4949-81ea-d307e878f761"
        },
        "item": {
          "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
          "name": "Validate user is able to upload multiple variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                    "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e984e1f1-ed36-460b-ba26-a43c272b591c",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "68d2fa4a-4ab5-4d20-a8d4-21756deef382",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:28 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 558,
          "responseSize": 90
        },
        "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
              "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d42979d5-563e-41b1-aad7-fd3583d71138",
          "length": 92,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b9a16fe-33ff-43f6-8ae6-c6f74efb56b3"
        },
        "item": {
          "id": "5836f544-7661-42fc-ab6a-114175eb749a",
          "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2d6c68f1-a40b-432e-82de-46c298f162b1",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "86f9e5a0-cb8b-4258-8926-a8caebbee57c",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:29 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 546,
          "responseSize": 90
        },
        "id": "5836f544-7661-42fc-ab6a-114175eb749a",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 400 but got 422",
              "stack": "AssertionError: expected response to have status code 400 but got 422\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Only VCF and TSV files are allowed'",
              "stack": "AssertionError: expected undefined to deeply equal 'Only VCF and TSV files are allowed'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "dc4b2fbd-aa50-4b23-bf1c-020770e8366d",
          "length": 92,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ceb65ccd-3625-4141-9df4-b979ab4e0226"
        },
        "item": {
          "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
          "name": "Validate user is able  to upload variants file without id",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);\r",
                  ""
                ],
                "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "975010ba-c198-4ac5-98a4-870cbfde1d8b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "875a5c4c-cc75-490c-b81e-6d2d809512a4",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:29 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 556,
          "responseSize": 90
        },
        "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
              "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:9)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "Cannot read properties of undefined (reading 'id')",
              "checksum": "7968b7e0e6adfbc32cfd96627c083201",
              "id": "cbfa6791-207c-4bd3-ace8-1cc5c855c4e1",
              "timestamp": 1721908949831,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "66d641f3-3232-41d3-ba0f-ee7db6ea0bb2",
          "length": 92,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "937bd795-a8fc-481c-a2a5-7fe0467a2897"
        },
        "item": {
          "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
          "name": "Validate user is unable to upload without variants file",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                  "\r",
                  "setTimeout(function() {\r",
                  "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                  "}, delay);\r",
                  ""
                ],
                "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6676d647-9b6c-4efe-9a27-56e926018272",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "173",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "fileName": ""
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9caddaec-4db3-4937-9482-46a8ccc9f3e3",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:36 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "65"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              121,
              32,
              86,
              67,
              70,
              32,
              97,
              110,
              100,
              32,
              84,
              83,
              86,
              32,
              102,
              105,
              108,
              101,
              115,
              32,
              97,
              114,
              101,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 951,
          "responseSize": 65
        },
        "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "43015ade-1274-4f31-bb9d-41c537cb9623",
          "length": 92,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "17691a08-f91a-494c-a631-10ba9125511d"
        },
        "item": {
          "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
          "name": "Validate user is unable to upload variants file as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "00120dc4-4258-47d9-8bf1-7e67280ae156",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "90a4d36d-c021-4107-9641-a47ae41138f7",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:36 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 536,
          "responseSize": 90
        },
        "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 401 but got 422",
              "stack": "AssertionError: expected response to have status code 401 but got 422\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Token is invalid or expired'",
              "stack": "AssertionError: expected undefined to deeply equal 'Token is invalid or expired'\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "9dc6f9c5-cbba-48a6-8a54-489ab26cc4be",
          "length": 92,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ff476611-f482-4593-8a70-82de1629a81a"
        },
        "item": {
          "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
          "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-variant-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6abc7759-44d7-4b54-afa3-04b1e9e3cb97",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "f1d40f15-250b-4a3e-8e3d-4580b3e9e912",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:37 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 533,
          "responseSize": 31
        },
        "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5f76871d-b030-443a-8f4d-86b1600bb52c",
          "length": 92,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8542464a-c6d4-4396-b435-10e4bbfe27f4"
        },
        "item": {
          "id": "b1875390-5781-4f87-a5c3-077a6be46ed8",
          "name": "Validate the user is able to validate variants successfully",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "79f62f1c-7dea-498c-bfb3-2bdf0444de44",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) validated successfully\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  "let p_variant_task_id = response.data.task_id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_variant_task_id\", p_variant_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_variant_task_id set to:\", p_variant_task_id);"
                ],
                "_lastExecutionId": "df9b7473-5a18-4728-92f9-9f134b82f554"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e3e8c195-995a-44f8-9308-3fd6b5050260",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a5cc2c39-602f-4a0c-ad5c-2313e8425eba",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:38 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "7005"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              40,
              115,
              41,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              57,
              53,
              97,
              49,
              55,
              97,
              51,
              98,
              45,
              98,
              98,
              102,
              101,
              45,
              52,
              52,
              57,
              53,
              45,
              98,
              49,
              51,
              101,
              45,
              54,
              97,
              52,
              55,
              51,
              55,
              54,
              50,
              48,
              50,
              100,
              51,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              102,
              49,
              56,
              54,
              52,
              97,
              53,
              51,
              45,
              48,
              99,
              99,
              50,
              45,
              52,
              54,
              99,
              48,
              45,
              57,
              52,
              55,
              100,
              45,
              102,
              97,
              54,
              53,
              97,
              56,
              99,
              53,
              50,
              102,
              56,
              102,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              57,
              55,
              102,
              52,
              98,
              57,
              51,
              45,
              99,
              53,
              98,
              53,
              45,
              52,
              100,
              53,
              100,
              45,
              98,
              52,
              98,
              57,
              45,
              56,
              102,
              98,
              97,
              50,
              102,
              102,
              48,
              48,
              102,
              51,
              101,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              55,
              52,
              48,
              98,
              99,
              99,
              48,
              57,
              45,
              100,
              54,
              57,
              57,
              45,
              52,
              101,
              102,
              57,
              45,
              57,
              101,
              98,
              56,
              45,
              57,
              102,
              102,
              49,
              49,
              102,
              99,
              99,
              55,
              48,
              97,
              49,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              51,
              55,
              101,
              52,
              56,
              49,
              53,
              48,
              45,
              54,
              56,
              99,
              50,
              45,
              52,
              98,
              49,
              98,
              45,
              56,
              56,
              53,
              55,
              45,
              52,
              55,
              55,
              100,
              51,
              51,
              101,
              97,
              98,
              49,
              101,
              100,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              97,
              97,
              52,
              98,
              101,
              54,
              57,
              55,
              45,
              49,
              99,
              55,
              102,
              45,
              52,
              56,
              56,
              102,
              45,
              97,
              99,
              54,
              55,
              45,
              50,
              101,
              56,
              54,
              52,
              57,
              98,
              98,
              54,
              97,
              99,
              50,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              57,
              50,
              48,
              98,
              56,
              98,
              50,
              98,
              45,
              97,
              50,
              50,
              51,
              45,
              52,
              98,
              57,
              57,
              45,
              97,
              100,
              52,
              48,
              45,
              50,
              56,
              97,
              51,
              52,
              54,
              51,
              52,
              99,
              56,
              101,
              98,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              56,
              52,
              54,
              102,
              56,
              101,
              102,
              50,
              45,
              52,
              48,
              52,
              48,
              45,
              52,
              98,
              48,
              54,
              45,
              98,
              54,
              56,
              102,
              45,
              102,
              49,
              57,
              49,
              101,
              101,
              54,
              53,
              101,
              53,
              102,
              51,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              99,
              101,
              49,
              55,
              99,
              102,
              52,
              98,
              45,
              101,
              51,
              54,
              99,
              45,
              52,
              98,
              100,
              99,
              45,
              56,
              99,
              53,
              53,
              45,
              98,
              49,
              52,
              52,
              48,
              56,
              99,
              50,
              101,
              52,
              54,
              98,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              102,
              101,
              48,
              54,
              101,
              50,
              50,
              97,
              45,
              54,
              102,
              50,
              56,
              45,
              52,
              52,
              54,
              98,
              45,
              98,
              54,
              101,
              54,
              45,
              98,
              55,
              101,
              98,
              56,
              54,
              99,
              100,
              97,
              102,
              97,
              49,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              102,
              55,
              52,
              101,
              102,
              54,
              55,
              97,
              45,
              102,
              53,
              98,
              53,
              45,
              52,
              51,
              48,
              56,
              45,
              57,
              55,
              49,
              49,
              45,
              53,
              56,
              57,
              99,
              51,
              48,
              55,
              55,
              102,
              51,
              102,
              53,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              54,
              54,
              50,
              50,
              52,
              102,
              50,
              99,
              45,
              97,
              97,
              56,
              50,
              45,
              52,
              98,
              51,
              50,
              45,
              57,
              48,
              54,
              97,
              45,
              48,
              57,
              56,
              101,
              54,
              55,
              99,
              98,
              53,
              55,
              97,
              52,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              55,
              48,
              53,
              48,
              98,
              49,
              56,
              45,
              100,
              57,
              102,
              54,
              45,
              52,
              52,
              53,
              53,
              45,
              56,
              50,
              100,
              53,
              45,
              99,
              48,
              101,
              54,
              100,
              57,
              55,
              52,
              98,
              101,
              100,
              100,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              98,
              57,
              101,
              100,
              99,
              102,
              49,
              45,
              102,
              101,
              54,
              54,
              45,
              52,
              101,
              53,
              57,
              45,
              98,
              101,
              54,
              57,
              45,
              100,
              57,
              52,
              102,
              53,
              54,
              51,
              97,
              51,
              53,
              55,
              99,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              51,
              99,
              100,
              98,
              49,
              102,
              53,
              49,
              45,
              56,
              55,
              53,
              102,
              45,
              52,
              99,
              98,
              99,
              45,
              97,
              99,
              48,
              101,
              45,
              97,
              101,
              102,
              48,
              49,
              100,
              102,
              54,
              100,
              53,
              52,
              48,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              101,
              102,
              98,
              54,
              53,
              100,
              52,
              101,
              45,
              97,
              99,
              100,
              51,
              45,
              52,
              57,
              48,
              56,
              45,
              56,
              97,
              56,
              50,
              45,
              51,
              48,
              48,
              51,
              49,
              52,
              54,
              51,
              48,
              55,
              49,
              48,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              51,
              100,
              56,
              52,
              100,
              49,
              49,
              45,
              99,
              50,
              101,
              51,
              45,
              52,
              56,
              49,
              49,
              45,
              97,
              97,
              56,
              52,
              45,
              56,
              56,
              53,
              51,
              100,
              57,
              57,
              97,
              54,
              99,
              99,
              100,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              99,
              50,
              49,
              55,
              56,
              54,
              99,
              54,
              45,
              98,
              50,
              53,
              100,
              45,
              52,
              48,
              100,
              53,
              45,
              97,
              97,
              50,
              55,
              45,
              49,
              54,
              102,
              48,
              54,
              57,
              98,
              100,
              57,
              52,
              52,
              57,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              98,
              48,
              50,
              100,
              97,
              100,
              48,
              49,
              45,
              50,
              57,
              49,
              99,
              45,
              52,
              49,
              57,
              57,
              45,
              98,
              53,
              102,
              98,
              45,
              51,
              98,
              50,
              49,
              57,
              49,
              102,
              51,
              48,
              98,
              54,
              49,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              49,
              56,
              100,
              55,
              50,
              100,
              99,
              55,
              45,
              102,
              51,
              57,
              57,
              45,
              52,
              57,
              56,
              98,
              45,
              98,
              57,
              56,
              51,
              45,
              57,
              101,
              101,
              53,
              53,
              51,
              102,
              102,
              102,
              98,
              100,
              55,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              93,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              98,
              102,
              50,
              102,
              49,
              56,
              102,
              48,
              45,
              53,
              50,
              56,
              51,
              45,
              52,
              52,
              100,
              50,
              45,
              98,
              101,
              100,
              52,
              45,
              54,
              102,
              49,
              55,
              50,
              57,
              102,
              100,
              102,
              54,
              102,
              98,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              110,
              103,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              80,
              69,
              78,
              68,
              73,
              78,
              71,
              34,
              44,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              98,
              97,
              99,
              107,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              95,
              100,
              111,
              110,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              50,
              58,
              48,
              50,
              58,
              52,
              48,
              46,
              49,
              51,
              51,
              53,
              52,
              53,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2179,
          "responseSize": 7005
        },
        "id": "b1875390-5781-4f87-a5c3-077a6be46ed8",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "aae8d83b-b8a4-4f40-ada9-4537d7f0a938",
          "length": 92,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "37bccb58-dbdc-4c35-817d-f437a8308a22"
        },
        "item": {
          "id": "c5cc2502-c57c-4b5b-84fc-aabf7989bf13",
          "name": "Validate the user is unable to validate variants with incorrect query data",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "62ca13fc-c0aa-44b3-87d2-5fe9ea09daf7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "966dd066-30e1-4e1a-ac74-d23df2cba725"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95d664ec-e313-406a-8a18-fa3d4713cd9e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bc5d81dc-b060-44b9-b72b-a3bfac94081d",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:38 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 878,
          "responseSize": 53
        },
        "id": "c5cc2502-c57c-4b5b-84fc-aabf7989bf13",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "13b20ea8-5682-4aa6-9d07-4a24881d2374",
          "length": 92,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c3bf15c3-d911-47ff-9f2c-3a15d02f3b1c"
        },
        "item": {
          "id": "5290cce4-aa3f-4be8-80b0-de1a80e5cc03",
          "name": "Validate the user is unable to validate variants without query data",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "04a11ef3-3075-481f-85c7-b4e5759b5ce2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "7b272ff5-4725-476f-84a4-6b179ef20e81"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "593650c1-3fae-4b79-898a-b4f2d71de02a",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "66976eb3-b67b-40e3-9221-0aa45d626b0d",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:41 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 955,
          "responseSize": 53
        },
        "id": "5290cce4-aa3f-4be8-80b0-de1a80e5cc03",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2b25fc8c-120c-4e0a-8fca-bc37f1bd4132",
          "length": 92,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6595dcc3-1bff-45ba-9a7c-d7ed31a9bf89"
        },
        "item": {
          "id": "a3f789a6-7e17-45b2-96d2-09d47ba7d8f7",
          "name": "Validate the user is unable to validate variants without Authorization",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93906c78-8487-4361-a6e0-8ccf4f6f02ec",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "6c02418f-f447-498b-925b-b06f3dfae4d9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6c2ea7dd-942b-48a2-aafc-de32a6e0fbad",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "af06cf4b-b5ce-41cb-9918-b67443c1ffd1",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:42 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 536,
          "responseSize": 62
        },
        "id": "a3f789a6-7e17-45b2-96d2-09d47ba7d8f7",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "57f0af91-1537-4f87-be9c-f28d7fdaa38b",
          "length": 92,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dbbfbac3-5c2f-4837-8aaa-33e903fcb6d6"
        },
        "item": {
          "id": "3d4d1d72-316e-434f-9a80-a706e16d5fb8",
          "name": "Validate the user is unable to validate variants as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aea77d1f-4667-42cf-a99e-3b592bb4fc03",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "c9b5042b-1d76-4d4b-b221-c70c98445a1e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c65f1fdb-d593-4d4b-8f76-95f4448000d1",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bd91a2e6-3e41-4cbf-a752-a745967b61fa",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:42 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 559,
          "responseSize": 58
        },
        "id": "3d4d1d72-316e-434f-9a80-a706e16d5fb8",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a7c71aee-74fa-4637-9f37-7178a23bbf42",
          "length": 92,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "34a6f26d-2d60-479e-8cd6-2fcf1ce3ae9e"
        },
        "item": {
          "id": "fda4c6db-590e-4551-b2c5-15d17b73f509",
          "name": "Validate the user is unable to validate variants as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "start-validation-variants",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "65d163ea-4ec7-41e7-b6c8-87f8bdbdc28c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "faaec29f-3c3c-4a3f-be4e-944dee49ba65"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-validation-variants",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "39a6b77f-72bb-4046-8d46-225cd4f6cc01",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "225ac4b6-28da-4857-a1a2-149ab13234a6",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:43 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 535,
          "responseSize": 31
        },
        "id": "fda4c6db-590e-4551-b2c5-15d17b73f509",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ceeeaca6-2649-4245-80ed-5e3aaf2f2a17",
          "length": 92,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "83d8c293-9282-4abd-a142-50de5037f037"
        },
        "item": {
          "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
          "name": "Validate user is able to upload medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e8e562b1-48ed-47bf-ada3-a52d36770bf4",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b6b8ea10-01d0-4e21-b891-49fd869565f5",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 536,
          "responseSize": 90
        },
        "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:19)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
              "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:19)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "af6a9ea5-1781-45e7-8197-4b24e9d76a95",
          "length": 92,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52398fbf-24a1-482e-95a8-3e8c7f2ee8c5"
        },
        "item": {
          "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
          "name": "Validate user is able to upload medical files successfully without id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0e46a7a4-6410-4ba0-9030-bab0aca48c2c",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a136ff3c-0549-4f26-a378-c5d259f693ad",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 534,
          "responseSize": 90
        },
        "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
              "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6e48d92f-76e3-4640-bae0-c97f033e5fc5",
          "length": 92,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c5151821-57ec-4d8d-a700-b2490ce2883a"
        },
        "item": {
          "id": "a1342838-4465-4670-9162-e89f648846bd",
          "name": "Validate user is able to upload multiple medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                    "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  "let responseData = pm.response.json();\r",
                  "let p_other_task_id = responseData.task_id;\r",
                  "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                ],
                "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b65d2ca9-7681-4505-b463-7790c9eba989",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6f9a00ae-c135-4f50-8e5d-236a49554d18",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:45 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 532,
          "responseSize": 90
        },
        "id": "a1342838-4465-4670-9162-e89f648846bd",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 422",
              "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
              "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b3e69096-cd63-47b3-b805-eb885025d0b9",
          "length": 92,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6e086c71-fdd9-4af0-a067-45c8e80c641d"
        },
        "item": {
          "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
          "name": "Validate user is unable to upload medical fileswith incorrect id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "74a0ab5e-01bd-44d9-a033-24d99b3a62c4",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bc3b3d7d-cb78-430d-98fa-145b6aa881b6",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:45 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 535,
          "responseSize": 90
        },
        "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 400 but got 422",
              "stack": "AssertionError: expected response to have status code 400 but got 422\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Unknown error occurred'",
              "stack": "AssertionError: expected undefined to deeply equal 'Unknown error occurred'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a9e2822c-ff25-4879-936d-0ca18697cce8",
          "length": 92,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fa092d8a-7d81-4859-ac79-d9c51121eedc"
        },
        "item": {
          "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
          "name": "Validate user is unable to upload medical files as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0d318d61-d58c-4327-8037-b3ad8fcd6672",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "files",
                "type": "file",
                "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096",
                "disabled": true
              }
            ]
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "25346d6f-5e6c-43bb-a913-649e577336db",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:46 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              108,
              111,
              99,
              34,
              58,
              91,
              34,
              98,
              111,
              100,
              121,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              93,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 580,
          "responseSize": 90
        },
        "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected response to have status code 401 but got 422",
              "stack": "AssertionError: expected response to have status code 401 but got 422\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response message is Valid",
              "message": "expected undefined to deeply equal 'Token is invalid or expired'",
              "stack": "AssertionError: expected undefined to deeply equal 'Token is invalid or expired'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cd2a1238-3338-4159-9e2e-0b8eb3375ffe",
          "length": 92,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f3ca59f9-dcc4-4dd3-b31b-da1bbf5bd8b8"
        },
        "item": {
          "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
          "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "af17620f-f2d3-4c57-bf42-502facfbabf9",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "75458d8a-eaa2-477f-9153-324821058770",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:47 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 538,
          "responseSize": 31
        },
        "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4842b189-c973-4200-8c3e-2876c9a727fa",
          "length": 92,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e42a874a-946c-419f-931b-b094e2d423ec"
        },
        "item": {
          "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
          "name": "Validate user is able to check status of task successfully for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "516be162-26f0-439b-b903-e86fbb11ee75",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "41a32442-3894-4560-89ae-120df3e2f65e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f8d35ea5-eaf7-4735-a91e-862684898418",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "57",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7055120e-6f9e-42f2-a353-0104879c4efe",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:47 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "66"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              97,
              115,
              107,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              99,
              111,
              117,
              108,
              100,
              32,
              110,
              111,
              116,
              32,
              98,
              101,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1301,
          "responseSize": 66
        },
        "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response has all required fields",
              "message": "expected { status: 'error', …(1) } to have property 'data'",
              "stack": "AssertionError: expected { status: 'error', …(1) } to have property 'data'\n   at Object.eval sandbox-script.js:1:25)"
            }
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Status Code is valid",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:2:25)"
            }
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response message is Valid",
              "message": "expected 'Task details could not be retrieved' to deeply equal 'Task details retrieved successfully'",
              "stack": "AssertionError: expected 'Task details could not be retrieved' to deeply equal 'Task details retrieved successfully'\n   at Object.eval sandbox-script.js:3:25)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "92fb2c39-9480-4af0-9e92-ae097c7c8477",
          "length": 92,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cbecb754-9d5b-4164-9293-fb8f62e01816"
        },
        "item": {
          "id": "b369d374-0cb8-4cf3-92c8-06701cf103cb",
          "name": "Validate user is able to check status of task successfully for Patient Variant File",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "814dca3a-94c2-41aa-bd51-9d2f5becf165",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "3668300c-dd10-4b4e-85a9-d0f027ca2a78"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "68c5748e-1dec-49e4-85f7-955ebd12145b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "57",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"bf2f18f0-5283-44d2-bed4-6f1729fdf6fb\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "20b857d6-c43b-4438-be8f-7a3f63c4e2ca",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "1036"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              97,
              115,
              107,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              98,
              102,
              50,
              102,
              49,
              56,
              102,
              48,
              45,
              53,
              50,
              56,
              51,
              45,
              52,
              52,
              100,
              50,
              45,
              98,
              101,
              100,
              52,
              45,
              54,
              102,
              49,
              55,
              50,
              57,
              102,
              100,
              102,
              54,
              102,
              98,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              83,
              85,
              67,
              67,
              69,
              83,
              83,
              34,
              44,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              123,
              39,
              115,
              117,
              109,
              109,
              97,
              114,
              121,
              95,
              116,
              101,
              120,
              116,
              39,
              58,
              32,
              39,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              32,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              32,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              39,
              44,
              32,
              39,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              108,
              105,
              115,
              116,
              39,
              58,
              32,
              91,
              123,
              39,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              39,
              58,
              32,
              39,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              39,
              44,
              32,
              39,
              83,
              116,
              97,
              116,
              117,
              115,
              39,
              58,
              32,
              39,
              86,
              97,
              108,
              105,
              100,
              39,
              44,
              32,
              39,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              39,
              58,
              32,
              39,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              50,
              102,
              52,
              52,
              102,
              101,
              97,
              56,
              45,
              100,
              52,
              50,
              51,
              45,
              52,
              97,
              50,
              98,
              45,
              98,
              51,
              98,
              97,
              45,
              56,
              51,
              49,
              98,
              51,
              101,
              51,
              57,
              53,
              56,
              98,
              99,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              39,
              44,
              32,
              39,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              39,
              58,
              32,
              39,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              39,
              44,
              32,
              39,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              39,
              58,
              32,
              39,
              50,
              48,
              48,
              48,
              48,
              39,
              44,
              32,
              39,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              39,
              58,
              32,
              39,
              49,
              48,
              48,
              48,
              48,
              39,
              44,
              32,
              39,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              39,
              58,
              32,
              39,
              53,
              48,
              48,
              48,
              39,
              125,
              44,
              32,
              123,
              39,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              39,
              58,
              32,
              39,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              39,
              44,
              32,
              39,
              83,
              116,
              97,
              116,
              117,
              115,
              39,
              58,
              32,
              39,
              86,
              97,
              108,
              105,
              100,
              39,
              44,
              32,
              39,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              39,
              58,
              32,
              39,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              98,
              49,
              49,
              51,
              48,
              55,
              49,
              100,
              45,
              53,
              50,
              48,
              100,
              45,
              52,
              51,
              55,
              54,
              45,
              56,
              98,
              49,
              102,
              45,
              50,
              48,
              52,
              49,
              52,
              98,
              99,
              97,
              52,
              55,
              97,
              51,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              39,
              44,
              32,
              39,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              39,
              58,
              32,
              39,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              39,
              44,
              32,
              39,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              39,
              58,
              32,
              39,
              50,
              48,
              48,
              48,
              48,
              39,
              44,
              32,
              39,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              39,
              58,
              32,
              39,
              49,
              48,
              48,
              48,
              48,
              39,
              44,
              32,
              39,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              39,
              58,
              32,
              39,
              53,
              48,
              48,
              48,
              39,
              125,
              93,
              125,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              98,
              97,
              99,
              107,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              95,
              100,
              111,
              110,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              32,
              49,
              50,
              58,
              48,
              50,
              58,
              52,
              55,
              46,
              52,
              52,
              48,
              56,
              57,
              49,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1292,
          "responseSize": 1036
        },
        "id": "b369d374-0cb8-4cf3-92c8-06701cf103cb",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1e3f602f-05eb-4a31-9ef1-bc520f34c02c",
          "length": 92,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1587786f-8a9a-45bf-b1ac-9b6de7a1c6b0"
        },
        "item": {
          "id": "bb090519-b4fa-4a4a-bf61-16f47448c2de",
          "name": "Validate user is unable to check status as task_id is incorrect.",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b4dbe240-bbaf-483a-a71f-e26368ea9679",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                  "});"
                ],
                "_lastExecutionId": "a0c9def1-ce50-4b8a-869b-dd469077bd87"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b3f3e810-64ab-47db-8285-ff85fc4957b6",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "27",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e389e38a-3bd1-4145-85e3-7b57a8dc4fb0",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "66"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              97,
              115,
              107,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              99,
              111,
              117,
              108,
              100,
              32,
              110,
              111,
              116,
              32,
              98,
              101,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1381,
          "responseSize": 66
        },
        "id": "bb090519-b4fa-4a4a-bf61-16f47448c2de",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1fd2805d-c4a6-45ae-9e4b-71cb2cce713b",
          "length": 92,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3ad1aa08-098f-47ce-96f6-4d66a38680a6"
        },
        "item": {
          "id": "a29dadf3-69c1-4240-b6fd-1e202d105b14",
          "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da4e3f39-7820-47e0-b764-2ac7b7bc40f8",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "ea7e8d25-5da4-4313-8519-8a8956cd9420"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "51f0c321-860e-470d-9375-539f877d65f4",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "8",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5674a26c-1d98-4f36-9277-f2d59ce88e9e",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 943,
          "responseSize": 53
        },
        "id": "a29dadf3-69c1-4240-b6fd-1e202d105b14",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8bffc765-1180-4512-9b41-7ac0fb6262b5",
          "length": 92,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "336c29c1-75ca-4b7a-b3f1-c16399bd1e21"
        },
        "item": {
          "id": "a89bea02-1765-414c-ba42-c2c3cf2470c4",
          "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cb30adc3-9836-4d57-af1f-f9ff3fae28e9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "e9a44ebb-03ec-45a4-b9cd-257accba15b3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b2251f71-2d86-4ab2-9ba8-2b5af11fba7d",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "8",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "58126a88-e299-4f3e-94d4-8b3f7c0b1bcc",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:53 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1023,
          "responseSize": 53
        },
        "id": "a89bea02-1765-414c-ba42-c2c3cf2470c4",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "19132450-753f-4b1a-be60-c13555121b35",
          "length": 92,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "87c7cbaa-e0eb-4697-919b-b2297b24149e"
        },
        "item": {
          "id": "9ef9a257-949e-4a17-b59a-f04787be0699",
          "name": "Validate user is unable to check status as the token is invalid.",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8f443cc5-00b8-4525-825e-3b060d99b65d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "ff1559b9-ac3e-40bc-b979-6f8bf3d9e6bf"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-task-status",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f66c4ef5-c455-4807-9f10-689c14de0907",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "40",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "54ee6158-4560-4d3d-b0ef-fa715b6ab646",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:55 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 564,
          "responseSize": 58
        },
        "id": "9ef9a257-949e-4a17-b59a-f04787be0699",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d216a047-a28c-45bc-9b8f-df4af802f451",
          "length": 92,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c222c0c0-55c2-41b6-bf85-710cd1fea574"
        },
        "item": {
          "id": "5b67c71b-ddb0-460e-8645-994c73d6a1b1",
          "name": "Validate user is unable check status as incorrect CRUD operation is used.",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f89f2fcd-d3d6-40c2-b9b8-3bdfa2388b57",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "8f7da108-d716-40b9-8495-a7b1ea4a0305"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-medical-file-upload",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "60b8b248-e037-4e69-b99c-a412a2d530f4",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "40",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7ff6eccb-263f-443b-ac09-2ae10f3e0be8",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:55 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 542,
          "responseSize": 31
        },
        "id": "5b67c71b-ddb0-460e-8645-994c73d6a1b1",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f4a38681-7242-44a7-abaf-05012e1b383a",
          "length": 92,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c2ae88f-d51c-4f8c-9de3-3fb93885022d"
        },
        "item": {
          "id": "759c94f1-b296-4dde-ad6d-f47ab27d8349",
          "name": "Validate user is able to fetch patient's data successfully",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "05434c8b-d8bc-4f30-ba48-548b6ca3c2ad"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6da7848-f945-46de-b531-e76fd32374eb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Status Code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient details fetched successfully.\");\r",
                  "});"
                ],
                "_lastExecutionId": "270a0880-69b6-4d58-bfa7-f69058dfee74"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "05434c8b-d8bc-4f30-ba48-548b6ca3c2ad"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5234ad50-007d-44e9-aab8-3697ddf2591c",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c7cecd4b-704b-403e-8cf8-43a1820cecfe",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:55 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2147"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              46,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              53,
              52,
              51,
              52,
              99,
              56,
              98,
              45,
              100,
              56,
              98,
              99,
              45,
              52,
              102,
              51,
              48,
              45,
              98,
              97,
              52,
              56,
              45,
              53,
              52,
              56,
              98,
              54,
              99,
              97,
              51,
              99,
              50,
              97,
              100,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              48,
              52,
              49,
              56,
              51,
              53,
              52,
              53,
              50,
              49,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              78,
              97,
              109,
              101,
              95,
              54,
              79,
              103,
              83,
              51,
              74,
              90,
              49,
              95,
              49,
              55,
              50,
              48,
              52,
              49,
              56,
              51,
              53,
              52,
              53,
              50,
              49,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              101,
              99,
              111,
              103,
              95,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              99,
              111,
              109,
              111,
              114,
              98,
              105,
              100,
              105,
              116,
              105,
              101,
              115,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              115,
              117,
              98,
              95,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              111,
              110,
              100,
              105,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              77,
              111,
              100,
              101,
              114,
              97,
              116,
              101,
              108,
              121,
              32,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              116,
              105,
              97,
              116,
              101,
              100,
              32,
              97,
              100,
              101,
              110,
              111,
              99,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              119,
              105,
              116,
              104,
              32,
              97,
              32,
              112,
              114,
              101,
              100,
              111,
              109,
              105,
              110,
              97,
              110,
              116,
              108,
              121,
              32,
              109,
              105,
              99,
              114,
              111,
              112,
              97,
              112,
              105,
              108,
              108,
              97,
              114,
              121,
              32,
              112,
              97,
              116,
              116,
              101,
              114,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              116,
              97,
              115,
              116,
              97,
              115,
              105,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              116,
              97,
              115,
              116,
              97,
              116,
              105,
              99,
              95,
              115,
              105,
              116,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              112,
              108,
              111,
              105,
              100,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              101,
              115,
              116,
              105,
              109,
              97,
              116,
              101,
              100,
              95,
              116,
              117,
              109,
              111,
              114,
              95,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              95,
              116,
              117,
              109,
              111,
              114,
              95,
              99,
              101,
              108,
              108,
              117,
              108,
              97,
              114,
              105,
              116,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              112,
              101,
              99,
              105,
              109,
              101,
              110,
              95,
              115,
              105,
              116,
              101,
              95,
              117,
              115,
              101,
              100,
              95,
              102,
              111,
              114,
              95,
              110,
              103,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              95,
              104,
              105,
              115,
              116,
              111,
              114,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              116,
              109,
              98,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              105,
              99,
              114,
              111,
              115,
              97,
              116,
              101,
              108,
              105,
              116,
              101,
              95,
              105,
              110,
              115,
              116,
              97,
              98,
              105,
              108,
              105,
              116,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              105,
              115,
              109,
              97,
              116,
              99,
              104,
              95,
              114,
              101,
              112,
              97,
              105,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              104,
              111,
              109,
              111,
              108,
              111,
              103,
              111,
              117,
              115,
              95,
              114,
              101,
              99,
              111,
              109,
              98,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              114,
              101,
              112,
              97,
              105,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              112,
              100,
              95,
              108,
              49,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              101,
              114,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              112,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              104,
              101,
              114,
              50,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              111,
              116,
              104,
              101,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              116,
              114,
              101,
              97,
              116,
              101,
              109,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              116,
              114,
              101,
              97,
              116,
              101,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              111,
              116,
              95,
              116,
              114,
              101,
              97,
              116,
              101,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              99,
              111,
              110,
              102,
              105,
              114,
              109,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              109,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              115,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              91,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              53,
              50,
              99,
              98,
              102,
              55,
              99,
              101,
              45,
              49,
              97,
              98,
              48,
              45,
              52,
              51,
              100,
              56,
              45,
              98,
              57,
              50,
              98,
              45,
              102,
              48,
              53,
              54,
              100,
              50,
              54,
              100,
              102,
              102,
              100,
              101,
              95,
              95,
              95,
              95,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              118,
              99,
              102,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              48,
              53,
              52,
              51,
              52,
              99,
              56,
              98,
              45,
              100,
              56,
              98,
              99,
              45,
              52,
              102,
              51,
              48,
              45,
              98,
              97,
              52,
              56,
              45,
              53,
              52,
              56,
              98,
              54,
              99,
              97,
              51,
              99,
              50,
              97,
              100,
              47,
              100,
              101,
              102,
              102,
              56,
              97,
              48,
              100,
              45,
              101,
              48,
              57,
              97,
              45,
              52,
              53,
              98,
              101,
              45,
              98,
              100,
              98,
              57,
              45,
              99,
              54,
              98,
              53,
              54,
              53,
              99,
              100,
              51,
              52,
              57,
              98,
              95,
              95,
              95,
              95,
              115,
              97,
              109,
              112,
              108,
              101,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              93,
              44,
              34,
              111,
              116,
              104,
              101,
              114,
              95,
              109,
              101,
              100,
              105,
              99,
              97,
              108,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              99,
              114,
              101,
              101,
              110,
              115,
              104,
              111,
              116,
              32,
              50,
              48,
              50,
              51,
              45,
              49,
              50,
              45,
              50,
              57,
              32,
              49,
              50,
              53,
              48,
              49,
              53,
              46,
              112,
              110,
              103,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              111,
              116,
              104,
              101,
              114,
              95,
              109,
              101,
              100,
              105,
              99,
              97,
              108,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              57,
              51,
              100,
              50,
              101,
              52,
              54,
              99,
              45,
              101,
              98,
              56,
              49,
              45,
              52,
              51,
              55,
              54,
              45,
              98,
              49,
              101,
              57,
              45,
              97,
              52,
              102,
              48,
              49,
              98,
              55,
              101,
              56,
              98,
              98,
              53,
              95,
              95,
              95,
              95,
              83,
              99,
              114,
              101,
              101,
              110,
              115,
              104,
              111,
              116,
              50,
              48,
              50,
              51,
              45,
              49,
              50,
              45,
              50,
              57,
              49,
              50,
              53,
              48,
              49,
              53,
              46,
              112,
              110,
              103,
              34,
              125,
              93,
              44,
              34,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              95,
              115,
              117,
              109,
              109,
              97,
              114,
              121,
              95,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              32,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              32,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              34,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              105,
              116,
              105,
              111,
              110,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              95,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              48,
              56,
              84,
              48,
              53,
              58,
              53,
              53,
              58,
              50,
              55,
              46,
              55,
              52,
              50,
              55,
              48,
              51,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              48,
              56,
              84,
              48,
              54,
              58,
              48,
              55,
              58,
              51,
              51,
              46,
              55,
              53,
              56,
              57,
              54,
              57,
              34,
              44,
              34,
              108,
              97,
              110,
              100,
              105,
              110,
              103,
              95,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              105,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              105,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              48,
              56,
              84,
              48,
              54,
              58,
              48,
              55,
              58,
              51,
              49,
              46,
              48,
              48,
              51,
              48,
              48,
              48,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              105,
              110,
              112,
              114,
              111,
              103,
              114,
              101,
              115,
              115,
              34,
              125,
              44,
              34,
              115,
              117,
              109,
              109,
              97,
              114,
              121,
              95,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              32,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              32,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 625,
          "responseSize": 2147
        },
        "id": "759c94f1-b296-4dde-ad6d-f47ab27d8349",
        "assertions": [
          {
            "assertion": "Status Code is 200",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "da48d0d1-ecff-457c-9ccc-c9e6206cf54d",
          "length": 92,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f51e58d2-fb73-48b0-a9aa-75fa0d2b0ba1"
        },
        "item": {
          "id": "55d69de8-be8d-4c05-b685-2e627e029d2e",
          "name": "Validate user is unable to fetch patient's data with incorrect query data",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e7ca684-d72b-466b-9d00-b9cb79f4e7b3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status Code is 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Invalid id\");\r",
                  "});"
                ],
                "_lastExecutionId": "f506877e-a585-45c5-af79-040c5e739ec1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b12e44c6-7dd7-465a-8e5c-da476d505a29",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ef07f717-c416-41e4-a25a-64fa86efb37b",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:56 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "41"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              105,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 688,
          "responseSize": 41
        },
        "id": "55d69de8-be8d-4c05-b685-2e627e029d2e",
        "assertions": [
          {
            "assertion": "Status Code is 400",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9b62c5ef-2346-4a81-ab96-380dfe725b5b",
          "length": 92,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "834d2a77-c07e-4c08-877f-2598ce44b192"
        },
        "item": {
          "id": "646125c6-2edc-460d-b0bd-b4d13a666c78",
          "name": "Validate user is unable to fetch patient's data without query data",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "75405d15-1393-4726-832e-9c75cb8cd65e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Invalid id\");\r",
                  "});"
                ],
                "_lastExecutionId": "8dc77f3a-46c5-44d1-9583-8b7a14f4d8d3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c1439b68-f8c4-464f-ab7a-960837c3c17a",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ca58a4cb-a338-4b0d-8f65-85d2afa08942",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:56 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "41"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              105,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 645,
          "responseSize": 41
        },
        "id": "646125c6-2edc-460d-b0bd-b4d13a666c78",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b8a345f3-456f-409e-b195-061cf3ac6f27",
          "length": 92,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "04c401f9-3083-4a4c-b0d4-bb7d7618818a"
        },
        "item": {
          "id": "4d6e1e98-8285-44db-ba9c-aa7d6ae1ad7a",
          "name": "Validate user is unable to fetch patient's data without Authorization",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2768702b-2d83-46fc-b01b-1d592dfc108a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "22eb8926-e398-49ff-ae46-9a937393f988"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a0289322-6061-435e-a6fe-2dcd1260ed85",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "66499fb0-b426-46d7-b80e-6aa71a877485",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:58 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 269,
          "responseSize": 62
        },
        "id": "4d6e1e98-8285-44db-ba9c-aa7d6ae1ad7a",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bd891b2b-bbc4-434b-a1ea-33a675ce8a5a",
          "length": 92,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ea57a816-80e4-45d3-b28f-6d40eb0106de"
        },
        "item": {
          "id": "56d4ea1b-a903-432c-934d-9d23d99e5265",
          "name": "Validate user is unable to fetch patient's data with invalid/expired token",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "24ad0cac-1dad-41c4-a33a-c3eb20603ab9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "6d13b66c-cf24-4421-8f4c-e78a035c336f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6026b61d-0fdb-4fd1-ac13-157de51cb2cf",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a6d688e5-016c-486c-aa74-72911bd24b34",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:58 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 291,
          "responseSize": 58
        },
        "id": "56d4ea1b-a903-432c-934d-9d23d99e5265",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "120939d0-d397-4e98-8104-e60c0edb97d8",
          "length": 92,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a0fa6a73-23eb-4cf2-9c8b-2409e6979a4b"
        },
        "item": {
          "id": "be0bd4b9-f587-432c-b4aa-867c20aab12b",
          "name": "Validate user is unable to fetch patient's data as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "get-patient-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "36304d3a-e0ac-4f9f-a209-e4a1f83746ec",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "f7bca071-d339-4dd0-b7b9-381c7b89c29e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f30943c5-5471-4c13-a754-9121cf1b3858",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "78e272c2-948c-4e1c-839b-e65e87ef8f17",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:58 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 273,
          "responseSize": 31
        },
        "id": "be0bd4b9-f587-432c-b4aa-867c20aab12b",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "82686246-13aa-4c68-90c2-dd5ba5c1bf2a",
          "length": 92,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "25462c67-f624-4c35-8356-c3e5050828ad"
        },
        "item": {
          "id": "e9fb94ef-d166-4ab4-baa1-9b5ff3f3500c",
          "name": "Validate user is able to check patient id successfully",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dcfd7888-64c1-4247-afec-171314e9182e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient id does not exist\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "ac6d71c7-6cfc-458c-8bb9-e898d8970c59"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a1b65cf1-7b54-474c-9f17-6fab718c2bc7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let patientId = \"patient_\" + new Date().getTime();\r",
                  "\r",
                  "// Set the environment variable\r",
                  "pm.environment.set(\"patient_id\", patientId);\r",
                  "\r",
                  "console.log(\"Environment Patient ID set to:\", patientId);\r",
                  "\r",
                  "function getRandomString(length) {\r",
                  "    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
                  "    let result = '';\r",
                  "    for (let i = 0; i < length; i++) {\r",
                  "        result += chars.charAt(Math.floor(Math.random() * chars.length));\r",
                  "    }\r",
                  "    return result;\r",
                  "}\r",
                  "\r",
                  "// Generate a unique name using a random string\r",
                  "let name = \"Name_\" + getRandomString(8) + \"_\" + new Date().getTime();\r",
                  "pm.environment.set(\"name\", name);"
                ],
                "_lastExecutionId": "feda3261-f993-467f-930f-f0f4e426ccec"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2173da68-0566-4407-b005-bcb204deb558",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "45",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721908978028\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bcba7937-cbf1-4aa6-a903-b9268d92b0ca",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:02:59 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "71"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              100,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              101,
              120,
              105,
              115,
              116,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 892,
          "responseSize": 71
        },
        "id": "e9fb94ef-d166-4ab4-baa1-9b5ff3f3500c",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "45930fbe-beb2-4d14-913f-b013b7592008",
          "length": 92,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "be6ec0c4-e3ba-47d1-84ba-88d08e97e562"
        },
        "item": {
          "id": "0f28d9fe-33ec-45ef-a819-0c34a434a177",
          "name": "Validate user is able to update patient's information successfully",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\":\"4a92ba9f-d7be-4eb1-bad0-2b22660b2a79\",\r\n    \"patient_id\":\"{{patient_id}}\",\r\n     \"name\": \"{{name}}\",\r\n    \"age\": 20,\r\n    \"gender\":\"female\",\r\n    \"tumor_type\":\"liver_cancer\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\"\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "06a5207a-d1ad-445f-aaab-3055abb53661",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient info updated successfully.\");\r",
                  "});"
                ],
                "_lastExecutionId": "8ebb9365-8f5e-4da6-a15a-036b63237245"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "73b33d51-c3c8-46b3-b8c1-d6d035acee0d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "1d9540cd-a0f4-4c14-807f-e8c8a8585820"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "479bed95-1703-40d7-aaad-f82ed67194fd",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "416",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\":\"4a92ba9f-d7be-4eb1-bad0-2b22660b2a79\",\r\n    \"patient_id\":\"patient_1721908978028\",\r\n     \"name\": \"Name_Mts2StWZ_1721908978028\",\r\n    \"age\": 20,\r\n    \"gender\":\"female\",\r\n    \"tumor_type\":\"liver_cancer\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\"\r\n    \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c1954b32-bcc3-4fb1-ae1c-71a9bc2cf8c8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:00 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "416"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              110,
              102,
              111,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              46,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              56,
              57,
              55,
              56,
              48,
              50,
              56,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              78,
              97,
              109,
              101,
              95,
              77,
              116,
              115,
              50,
              83,
              116,
              87,
              90,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              56,
              57,
              55,
              56,
              48,
              50,
              56,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              99,
              111,
              109,
              111,
              114,
              98,
              105,
              100,
              105,
              116,
              105,
              101,
              115,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              100,
              105,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              77,
              111,
              100,
              101,
              114,
              97,
              116,
              101,
              108,
              121,
              32,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              116,
              105,
              97,
              116,
              101,
              100,
              32,
              97,
              100,
              101,
              110,
              111,
              99,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              119,
              105,
              116,
              104,
              32,
              97,
              32,
              112,
              114,
              101,
              100,
              111,
              109,
              105,
              110,
              97,
              110,
              116,
              108,
              121,
              32,
              109,
              105,
              99,
              114,
              111,
              112,
              97,
              112,
              105,
              108,
              108,
              97,
              114,
              121,
              32,
              112,
              97,
              116,
              116,
              101,
              114,
              110,
              34,
              44,
              34,
              101,
              99,
              111,
              103,
              95,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              101,
              114,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 916,
          "responseSize": 416
        },
        "id": "0f28d9fe-33ec-45ef-a819-0c34a434a177",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4c8e340f-74fa-48fc-ba8b-27ebd8ed16d6",
          "length": 92,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1636a478-8ba4-404d-b632-598dc1da73d9"
        },
        "item": {
          "id": "612c5719-1253-4c32-bb3f-c1e703a0f19f",
          "name": "Validate user is unable to update patient's information with missing required field in the body",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"id\":\"{{p_info_task_id}}\",\r\n  \"name\": \"Patient Name\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5d4b96c0-507a-486e-b3ea-b05a83cae925",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Missing required fields\");\r",
                  "});"
                ],
                "_lastExecutionId": "8bdf34e7-5ce0-4532-b312-97af40ca8cd1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2b6c55a4-52b6-4f19-9ad8-603ccea38277",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "370",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\"id\":\"fb252ef4-f285-4e46-ae01-2cf42fa9c65d\",\r\n  \"name\": \"Patient Name\",\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d03f9816-8142-4901-9174-01075e398ef6",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:00 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              77,
              105,
              115,
              115,
              105,
              110,
              103,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              32,
              102,
              105,
              101,
              108,
              100,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1020,
          "responseSize": 54
        },
        "id": "612c5719-1253-4c32-bb3f-c1e703a0f19f",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b5618756-5d43-4ecc-8140-bfbc1682734b",
          "length": 92,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "361acde3-8a13-4d06-8461-bb92bbd5434f"
        },
        "item": {
          "id": "198ad42f-98a5-4c30-9e35-492c96cbaadd",
          "name": "Validate user is unable to update patient's information without Authorization",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "795f9603-ea2e-4ab1-b9ac-6f25ef4eacff",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "b73431d3-818a-48b1-a40e-80cb581fc2b9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b93fdb58-1c03-432e-ba26-be315e08e382",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "352",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\":,\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "2be8439d-7c3f-4e27-aab1-f5e78b2333a4",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:02 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 534,
          "responseSize": 62
        },
        "id": "198ad42f-98a5-4c30-9e35-492c96cbaadd",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0df1a114-58c3-4a5f-a9b4-abe0b33cf66b",
          "length": 92,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7aa267c4-8458-4307-88c3-65150af7361a"
        },
        "item": {
          "id": "7f7c2993-bace-47ad-8667-7c8ff6849073",
          "name": "Validate user is unable to update patient's information as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e59e6c36-5e0d-4f9f-bcc4-0c105d3ac699",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "8a3de2bb-c6ce-43bc-85a5-7793cc621879"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9987cecf-988d-4d22-8e40-5ccd22bf3bd3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "352",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\":,\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "8a8a00dc-e4bf-46a9-a777-746bb267334d",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:03 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 556,
          "responseSize": 58
        },
        "id": "7f7c2993-bace-47ad-8667-7c8ff6849073",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "216fa428-d124-4206-b897-11ab123f8c54",
          "length": 92,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "95dac781-7add-4bc1-b09a-1fac1ae95ade"
        },
        "item": {
          "id": "e3bcf64b-bf27-4931-a3ec-9cb89b458fdd",
          "name": "Validate user is unable to update patient's information as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "update-patient-details",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n    \"id\":{{uid}},\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7c2469fb-f558-44e5-a4ed-14b9abfd8f00",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "3bd1b0bf-d4e8-42a3-91dd-69244252c057"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-details",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "70022359-35f2-417e-82d5-232de8dcdaf4",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "358",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \r\n    \"id\":,\r\n  \"name\": \"Patient Name\",\r\n    \"age\": 45,\r\n    \"comorbidities\": \"None\",\r\n    \"condition\": \"Moderately differentiated adenocarcinoma with a predominantly micropapillary pattern\",\r\n    \"ecog_performance_status\": \"1\",\r\n    \"er\": \"Unknown\",\r\n    \"estimated_tumor_content_tumor_cellularity\": \"some text\",\r\n    \"family_history\": \"some text\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b4656fff-87a5-445b-9470-b9e1f3f85581",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:03 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "PATCH"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 531,
          "responseSize": 31
        },
        "id": "e3bcf64b-bf27-4931-a3ec-9cb89b458fdd",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4d1d1463-c511-47ba-9090-f956398cf616",
          "length": 92,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "645e5bf3-c2fd-4631-9c9c-5b174724769e"
        },
        "item": {
          "id": "eb543209-70d5-4b61-9c83-05b4e9c595d7",
          "name": "Validate user is able to check patient id successfully(true)",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "246ba363-e5e2-480a-b888-fd53a2237432",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient id already exists.\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "95ab00a3-ba7e-49e3-a9a1-6eedcfff8f55"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f8f50082-91e3-452e-8124-a1dddcfc1d61",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "45",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721908978028\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6ca4a600-4255-452c-b2bd-0c5ff88fbf35",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:04 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "71"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              100,
              32,
              97,
              108,
              114,
              101,
              97,
              100,
              121,
              32,
              101,
              120,
              105,
              115,
              116,
              115,
              46,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 859,
          "responseSize": 71
        },
        "id": "eb543209-70d5-4b61-9c83-05b4e9c595d7",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "24a8d078-9312-481d-a96b-fdc9ea05118a",
          "length": 92,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1b08144c-3a2c-418f-84d4-a08a58516199"
        },
        "item": {
          "id": "55dd311e-17db-42ec-93d8-a62e6c8d8bc0",
          "name": "Validate user is unable to check patient id as patient_id is missing in the body",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e5735ebc-be2e-421a-9d5a-98b3b72f8040",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "098daac4-978e-4ff6-b0fc-19e6b99357eb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "092d9e31-ac80-46c1-a26a-01080c0f245d",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "8",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e8466b66-0c7d-40a4-ae75-6015d4d28211",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:05 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 915,
          "responseSize": 53
        },
        "id": "55dd311e-17db-42ec-93d8-a62e6c8d8bc0",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "067f7b4b-74f5-47da-a32d-72a586d4c197",
          "length": 92,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d27fc5af-945a-4dea-8158-1bf4ded4a34b"
        },
        "item": {
          "id": "ae5be06c-eac4-4138-9abc-c5a81d273819",
          "name": "Validate user is unable to check patient id as incorrect patient_id is provided",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"K345678\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "88c82a59-ba97-41df-bc88-acd9171ac349",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient id does not exist\");\r",
                  "});"
                ],
                "_lastExecutionId": "e71d3dac-8927-477a-8ca4-211221ecc560"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fff669bb-aceb-469d-b62a-819d7725f768",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "33",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"K345678\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1a477f39-8d41-4f8f-af00-5128a5f3fb41",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:05 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "71"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              105,
              100,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              101,
              120,
              105,
              115,
              116,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 893,
          "responseSize": 71
        },
        "id": "ae5be06c-eac4-4138-9abc-c5a81d273819",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "56071546-e27f-404f-b90d-cf0f987323d4",
          "length": 92,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "07d6b709-896c-457c-a4b8-8bd7ed2c6fa4"
        },
        "item": {
          "id": "fbcc6b06-ea1d-480a-8963-cc2a6cd67487",
          "name": "Validate user is unable to check patient id without authorization",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7fc0eb30-5f5a-4314-8d3e-45e9213cb209",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "8fef2dd1-42de-4440-8bc8-1e12fdffc4e4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fec22397-b7b3-4ef1-b9fc-00193aeb9338",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "47",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721908978028\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "a69c6153-300c-4e91-b261-a3900d639b5c",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:07 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 531,
          "responseSize": 62
        },
        "id": "fbcc6b06-ea1d-480a-8963-cc2a6cd67487",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f66c8c38-3d8a-4b4c-8ffe-709dff8eca74",
          "length": 92,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8206b7c9-a031-4aed-bcfe-1bf0cfec5a81"
        },
        "item": {
          "id": "71841b07-594d-47a2-8fc3-561c27505eef",
          "name": "Validate user is unable to check patient id as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "382b4e84-34a9-4c9b-bbc8-eb17ba4afd16",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "240fe3da-cf97-4512-b54e-66cee7c3b302"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ad01fcaa-671b-494c-a678-a554c60739ac",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "47",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721908978028\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7b95342f-3893-4595-8936-f7c57851ecdb",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:08 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 559,
          "responseSize": 58
        },
        "id": "71841b07-594d-47a2-8fc3-561c27505eef",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9969e682-ff25-47b9-80b5-30add2f8c963",
          "length": 92,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9ef61466-12cf-4c33-a85c-4f7d0a75f661"
        },
        "item": {
          "id": "0fda6a13-62ca-44f4-83f4-2de475fba935",
          "name": "Validate user is unable to check patient id as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "check-patient-id",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"patient_id\": \"{{patient_id}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c237cc4f-9627-4a47-b18b-ebffd88bccc1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "5bb046b3-f07c-484e-9474-2872d5798c93"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "check-patient-id",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "43ea1c1b-fef5-40e7-9a00-842560765753",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "47",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"patient_id\": \"patient_1721908978028\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "34985f07-c088-4d43-9f20-6be90f7c1e50",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:08 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 567,
          "responseSize": 31
        },
        "id": "0fda6a13-62ca-44f4-83f4-2de475fba935",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "59d5f97b-6a53-4788-8434-7d1f636dd8dc",
          "length": 92,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0b08df55-11af-46e0-9719-8c1e960a2060"
        },
        "item": {
          "id": "5eebc27e-d0f1-4e55-83ca-a18800339131",
          "name": "Validate user is able to search patients successfully",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "keyword",
                  "value": "{{patient_id}}"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d0304b58-5be1-4816-bd6d-704d477f2a2f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Search items fetched successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "b7454011-422d-4256-95f9-51914eea13d9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": "patient_1721908978028"
              },
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0b97a9b0-d1a1-47fe-947a-65676cc1b37b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "1cc39633-0ca5-487f-a150-c18cba4206e1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:09 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "542"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              101,
              97,
              114,
              99,
              104,
              32,
              105,
              116,
              101,
              109,
              115,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              115,
              34,
              58,
              49,
              44,
              34,
              112,
              114,
              101,
              118,
              105,
              111,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              56,
              57,
              55,
              56,
              48,
              50,
              56,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              50,
              58,
              48,
              51,
              58,
              48,
              48,
              46,
              57,
              48,
              53,
              57,
              50,
              55,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 694,
          "responseSize": 542
        },
        "id": "5eebc27e-d0f1-4e55-83ca-a18800339131",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5143c464-8899-459d-ab52-374f9eaa6983",
          "length": 92,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5e4a1994-f3be-46dc-9cf1-26e1cf3317a5"
        },
        "item": {
          "id": "0826d065-bc29-41fe-9aca-65d7f3d4af97",
          "name": "Validate user is able to search patients if optional parameters are missing",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "page",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "limit",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": ""
                },
                {
                  "key": "keyword",
                  "value": "{{patient_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d0c5475-92a2-4f27-bd38-8da6346be8fc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Search items fetched successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "f4777dae-03df-48ca-a692-5c3a9c4f0526"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": "patient_1721908978028"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bb771531-0ddc-4406-8eb8-5d713e31119f",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "95ad2265-a2df-4baf-b71d-658e56cc6345",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:09 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "542"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              101,
              97,
              114,
              99,
              104,
              32,
              105,
              116,
              101,
              109,
              115,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              115,
              34,
              58,
              49,
              44,
              34,
              112,
              114,
              101,
              118,
              105,
              111,
              117,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              49,
              55,
              50,
              49,
              57,
              48,
              56,
              57,
              55,
              56,
              48,
              50,
              56,
              34,
              44,
              34,
              97,
              103,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              116,
              117,
              109,
              111,
              114,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              108,
              105,
              118,
              101,
              114,
              95,
              99,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              34,
              98,
              105,
              98,
              104,
              117,
              116,
              105,
              46,
              99,
              104,
              97,
              107,
              114,
              97,
              64,
              101,
              120,
              105,
              109,
              105,
              101,
              116,
              97,
              115,
              46,
              100,
              101,
              115,
              105,
              103,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              95,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              50,
              58,
              48,
              51,
              58,
              48,
              48,
              46,
              57,
              48,
              53,
              57,
              50,
              55,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              114,
              101,
              112,
              111,
              114,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 700,
          "responseSize": 542
        },
        "id": "0826d065-bc29-41fe-9aca-65d7f3d4af97",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d76e1cba-5301-4560-a0ed-1f80e058991d",
          "length": 92,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ad56c3a6-026d-41ee-8791-d965b54b9d28"
        },
        "item": {
          "id": "578a1778-bb77-43d9-8f6b-eed247a27619",
          "name": "Validate user is unable to search patients as required parameter is missing",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "keyword",
                  "value": ""
                },
                {
                  "disabled": true,
                  "key": "limit",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "page",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4123f8b9-0b16-46a7-9580-b9409c1bb1ca",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "fcd2bf96-4744-4e95-b73b-c2dc3d3b6a6a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a645acd9-c685-46fb-b5b0-49c0af7ad435",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a041c8ba-5f4a-4a18-a797-577b2053d928",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:09 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 730,
          "responseSize": 53
        },
        "id": "578a1778-bb77-43d9-8f6b-eed247a27619",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "294d5fcb-7926-49f0-82ef-7aff44cfad20",
          "length": 92,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "03926056-7e4c-4398-b1a2-2857b5c4e9f6"
        },
        "item": {
          "id": "40a9e047-9d07-481d-8c0f-5ef8f5dbafcc",
          "name": "Validate user is unable to search patients without Authorization",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "keyword",
                  "value": "{{patient_id}}"
                },
                {
                  "disabled": true,
                  "key": "limit",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "page",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49029d03-c74e-4f9d-8e39-f929a924e1db",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "a5da7170-f6e4-4c7f-8ad2-22aef27e2524"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": "patient_1721908978028"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6cf657de-5d63-4114-b266-27dd92a754b7",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "da719b15-2bba-437d-9d9f-f48232ecc14b",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:11 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 312,
          "responseSize": 62
        },
        "id": "40a9e047-9d07-481d-8c0f-5ef8f5dbafcc",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e2f96020-f961-4068-9b25-8730ed92bbac",
          "length": 92,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fc445265-443c-4d9b-a96a-44c995bf9729"
        },
        "item": {
          "id": "c90814ad-a6da-481b-93ab-3672e459a6ca",
          "name": "Validate user is unable to search patients as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "search-patients"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "keyword",
                  "value": "{{patient_id}}"
                },
                {
                  "disabled": true,
                  "key": "limit",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_field",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "sort_by",
                  "value": null
                },
                {
                  "disabled": true,
                  "key": "page",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d631eb5-4b63-4130-98d5-dea6ab6ea151",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "93e805e4-f1c1-4dad-867f-abc016c1dd05"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "search-patients"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "keyword",
                "value": "patient_1721908978028"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0776875d-6151-4a8b-8fab-596fcba41487",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d2a2a8fe-b136-4eb8-9c46-90b3b43b0603",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:11 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 266,
          "responseSize": 31
        },
        "id": "c90814ad-a6da-481b-93ab-3672e459a6ca",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0318217f-be02-4196-80d0-66ced1960b6c",
          "length": 92,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a28a4c20-5238-4899-b3aa-399907b9eb90"
        },
        "item": {
          "id": "ceab139c-0dc1-4a02-b03d-6dafc6bee76c",
          "name": "Validate user is able to get current user task info successfully",
          "request": {
            "url": {
              "path": [
                "get-current-user-task-info"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fc7f366c-0675-4652-8b81-d95b471206b8",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient details fetched successfully.\");\r",
                  "});"
                ],
                "_lastExecutionId": "303b456f-72fd-4634-9a39-7e2133631bbd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-current-user-task-info"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "09153fdc-c107-40af-8f1d-5adbef6f40e6",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "272cdcce-1766-4e54-9cb7-5d9a6c8048a0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:11 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "7680"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              102,
              101,
              116,
              99,
              104,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              46,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              97,
              115,
              107,
              95,
              100,
              105,
              99,
              116,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              34,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              97,
              56,
              56,
              54,
              48,
              100,
              45,
              97,
              56,
              98,
              54,
              45,
              52,
              57,
              97,
              50,
              45,
              57,
              54,
              102,
              49,
              45,
              99,
              48,
              100,
              55,
              54,
              99,
              48,
              101,
              56,
              53,
              55,
              97,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              125,
              44,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              57,
              53,
              97,
              49,
              55,
              97,
              51,
              98,
              45,
              98,
              98,
              102,
              101,
              45,
              52,
              52,
              57,
              53,
              45,
              98,
              49,
              51,
              101,
              45,
              54,
              97,
              52,
              55,
              51,
              55,
              54,
              50,
              48,
              50,
              100,
              51,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              102,
              49,
              56,
              54,
              52,
              97,
              53,
              51,
              45,
              48,
              99,
              99,
              50,
              45,
              52,
              54,
              99,
              48,
              45,
              57,
              52,
              55,
              100,
              45,
              102,
              97,
              54,
              53,
              97,
              56,
              99,
              53,
              50,
              102,
              56,
              102,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              57,
              55,
              102,
              52,
              98,
              57,
              51,
              45,
              99,
              53,
              98,
              53,
              45,
              52,
              100,
              53,
              100,
              45,
              98,
              52,
              98,
              57,
              45,
              56,
              102,
              98,
              97,
              50,
              102,
              102,
              48,
              48,
              102,
              51,
              101,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              55,
              52,
              48,
              98,
              99,
              99,
              48,
              57,
              45,
              100,
              54,
              57,
              57,
              45,
              52,
              101,
              102,
              57,
              45,
              57,
              101,
              98,
              56,
              45,
              57,
              102,
              102,
              49,
              49,
              102,
              99,
              99,
              55,
              48,
              97,
              49,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              51,
              55,
              101,
              52,
              56,
              49,
              53,
              48,
              45,
              54,
              56,
              99,
              50,
              45,
              52,
              98,
              49,
              98,
              45,
              56,
              56,
              53,
              55,
              45,
              52,
              55,
              55,
              100,
              51,
              51,
              101,
              97,
              98,
              49,
              101,
              100,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              97,
              97,
              52,
              98,
              101,
              54,
              57,
              55,
              45,
              49,
              99,
              55,
              102,
              45,
              52,
              56,
              56,
              102,
              45,
              97,
              99,
              54,
              55,
              45,
              50,
              101,
              56,
              54,
              52,
              57,
              98,
              98,
              54,
              97,
              99,
              50,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              57,
              50,
              48,
              98,
              56,
              98,
              50,
              98,
              45,
              97,
              50,
              50,
              51,
              45,
              52,
              98,
              57,
              57,
              45,
              97,
              100,
              52,
              48,
              45,
              50,
              56,
              97,
              51,
              52,
              54,
              51,
              52,
              99,
              56,
              101,
              98,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              56,
              52,
              54,
              102,
              56,
              101,
              102,
              50,
              45,
              52,
              48,
              52,
              48,
              45,
              52,
              98,
              48,
              54,
              45,
              98,
              54,
              56,
              102,
              45,
              102,
              49,
              57,
              49,
              101,
              101,
              54,
              53,
              101,
              53,
              102,
              51,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              99,
              101,
              49,
              55,
              99,
              102,
              52,
              98,
              45,
              101,
              51,
              54,
              99,
              45,
              52,
              98,
              100,
              99,
              45,
              56,
              99,
              53,
              53,
              45,
              98,
              49,
              52,
              52,
              48,
              56,
              99,
              50,
              101,
              52,
              54,
              98,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              102,
              101,
              48,
              54,
              101,
              50,
              50,
              97,
              45,
              54,
              102,
              50,
              56,
              45,
              52,
              52,
              54,
              98,
              45,
              98,
              54,
              101,
              54,
              45,
              98,
              55,
              101,
              98,
              56,
              54,
              99,
              100,
              97,
              102,
              97,
              49,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              102,
              55,
              52,
              101,
              102,
              54,
              55,
              97,
              45,
              102,
              53,
              98,
              53,
              45,
              52,
              51,
              48,
              56,
              45,
              57,
              55,
              49,
              49,
              45,
              53,
              56,
              57,
              99,
              51,
              48,
              55,
              55,
              102,
              51,
              102,
              53,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              54,
              54,
              50,
              50,
              52,
              102,
              50,
              99,
              45,
              97,
              97,
              56,
              50,
              45,
              52,
              98,
              51,
              50,
              45,
              57,
              48,
              54,
              97,
              45,
              48,
              57,
              56,
              101,
              54,
              55,
              99,
              98,
              53,
              55,
              97,
              52,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              55,
              48,
              53,
              48,
              98,
              49,
              56,
              45,
              100,
              57,
              102,
              54,
              45,
              52,
              52,
              53,
              53,
              45,
              56,
              50,
              100,
              53,
              45,
              99,
              48,
              101,
              54,
              100,
              57,
              55,
              52,
              98,
              101,
              100,
              100,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              98,
              57,
              101,
              100,
              99,
              102,
              49,
              45,
              102,
              101,
              54,
              54,
              45,
              52,
              101,
              53,
              57,
              45,
              98,
              101,
              54,
              57,
              45,
              100,
              57,
              52,
              102,
              53,
              54,
              51,
              97,
              51,
              53,
              55,
              99,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              51,
              99,
              100,
              98,
              49,
              102,
              53,
              49,
              45,
              56,
              55,
              53,
              102,
              45,
              52,
              99,
              98,
              99,
              45,
              97,
              99,
              48,
              101,
              45,
              97,
              101,
              102,
              48,
              49,
              100,
              102,
              54,
              100,
              53,
              52,
              48,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              101,
              102,
              98,
              54,
              53,
              100,
              52,
              101,
              45,
              97,
              99,
              100,
              51,
              45,
              52,
              57,
              48,
              56,
              45,
              56,
              97,
              56,
              50,
              45,
              51,
              48,
              48,
              51,
              49,
              52,
              54,
              51,
              48,
              55,
              49,
              48,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              52,
              51,
              100,
              56,
              52,
              100,
              49,
              49,
              45,
              99,
              50,
              101,
              51,
              45,
              52,
              56,
              49,
              49,
              45,
              97,
              97,
              56,
              52,
              45,
              56,
              56,
              53,
              51,
              100,
              57,
              57,
              97,
              54,
              99,
              99,
              100,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              99,
              50,
              49,
              55,
              56,
              54,
              99,
              54,
              45,
              98,
              50,
              53,
              100,
              45,
              52,
              48,
              100,
              53,
              45,
              97,
              97,
              50,
              55,
              45,
              49,
              54,
              102,
              48,
              54,
              57,
              98,
              100,
              57,
              52,
              52,
              57,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              98,
              48,
              50,
              100,
              97,
              100,
              48,
              49,
              45,
              50,
              57,
              49,
              99,
              45,
              52,
              49,
              57,
              57,
              45,
              98,
              53,
              102,
              98,
              45,
              51,
              98,
              50,
              49,
              57,
              49,
              102,
              51,
              48,
              98,
              54,
              49,
              95,
              95,
              95,
              95,
              83,
              75,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              44,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              102,
              98,
              50,
              53,
              50,
              101,
              102,
              52,
              45,
              102,
              50,
              56,
              53,
              45,
              52,
              101,
              52,
              54,
              45,
              97,
              101,
              48,
              49,
              45,
              50,
              99,
              102,
              52,
              50,
              102,
              97,
              57,
              99,
              54,
              53,
              100,
              47,
              49,
              56,
              100,
              55,
              50,
              100,
              99,
              55,
              45,
              102,
              51,
              57,
              57,
              45,
              52,
              57,
              56,
              98,
              45,
              98,
              57,
              56,
              51,
              45,
              57,
              101,
              101,
              53,
              53,
              51,
              102,
              102,
              102,
              98,
              100,
              55,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              93,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              98,
              102,
              50,
              102,
              49,
              56,
              102,
              48,
              45,
              53,
              50,
              56,
              51,
              45,
              52,
              52,
              100,
              50,
              45,
              98,
              101,
              100,
              52,
              45,
              54,
              102,
              49,
              55,
              50,
              57,
              102,
              100,
              102,
              54,
              102,
              98,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              110,
              103,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              80,
              69,
              78,
              68,
              73,
              78,
              71,
              34,
              44,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              98,
              97,
              99,
              107,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              95,
              100,
              111,
              110,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              50,
              58,
              48,
              50,
              58,
              52,
              48,
              46,
              49,
              51,
              51,
              53,
              52,
              53,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              93,
              44,
              34,
              105,
              110,
              95,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              97,
              115,
              107,
              95,
              100,
              105,
              99,
              116,
              34,
              58,
              91,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              80,
              95,
              68,
              101,
              109,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              116,
              120,
              116,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              56,
              54,
              98,
              53,
              57,
              102,
              101,
              52,
              45,
              100,
              54,
              54,
              97,
              45,
              52,
              102,
              97,
              100,
              45,
              57,
              101,
              49,
              100,
              45,
              49,
              57,
              54,
              56,
              56,
              97,
              54,
              48,
              48,
              50,
              57,
              102,
              95,
              95,
              95,
              95,
              77,
              80,
              95,
              68,
              101,
              109,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              95,
              100,
              97,
              116,
              97,
              46,
              116,
              120,
              116,
              34,
              125,
              93,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              100,
              71,
              86,
              116,
              99,
              71,
              57,
              121,
              89,
              88,
              74,
              53,
              88,
              49,
              56,
              121,
              77,
              68,
              73,
              48,
              76,
              84,
              65,
              50,
              76,
              84,
              69,
              122,
              86,
              68,
              65,
              53,
              79,
              106,
              65,
              122,
              79,
              106,
              69,
              121,
              76,
              106,
              73,
              51,
              78,
              84,
              103,
              51,
              78,
              121,
              115,
              119,
              77,
              68,
              111,
              119,
              77,
              65,
              61,
              61,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              100,
              101,
              109,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              95,
              102,
              105,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              117,
              112,
              108,
              111,
              97,
              100,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              117,
              112,
              108,
              111,
              97,
              100,
              101,
              100,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              54,
              45,
              49,
              51,
              84,
              48,
              55,
              58,
              53,
              49,
              58,
              53,
              54,
              46,
              50,
              54,
              54,
              54,
              48,
              53,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              93,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 694,
          "responseSize": 7680
        },
        "id": "ceab139c-0dc1-4a02-b03d-6dafc6bee76c",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9b7af63b-d770-4a73-831b-15da83263007",
          "length": 92,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3d19ec30-e309-4726-b32f-e6d2f58eb195"
        },
        "item": {
          "id": "bcc31a96-8f7d-40a2-960c-b6620f961d50",
          "name": "Validate user is unable to get current user task info without authorization",
          "request": {
            "url": {
              "path": [
                "get-current-user-task-info"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8548814-bbf3-4029-ac27-719ec09bb5db",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "    });"
                ],
                "_lastExecutionId": "5ef01c8d-462c-42a4-a37c-ad9a8dfca711"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-current-user-task-info"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "037a9801-5265-4a0f-8c39-95caf0bcea83",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "69236411-8fcc-4679-919e-1e0f994d1ddf",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:12 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 266,
          "responseSize": 62
        },
        "id": "bcc31a96-8f7d-40a2-960c-b6620f961d50",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e4a61c9c-89db-4944-9a9b-29791a8a3e27",
          "length": 92,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6ec2f381-8dc6-4fbc-b872-74eb587c82a1"
        },
        "item": {
          "id": "a210008d-6411-4511-930e-8e348d7f0e9d",
          "name": "Validate user is unable to get current user task info as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "get-current-user-task-info"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5da657fa-c5c5-4db9-ad55-b06b4f137f0b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "0ccad901-ced5-4fc8-b91a-cd4367dff29e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-current-user-task-info"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7fbd84a7-7673-48b6-bc17-db9cebfcaef3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9c40c052-139f-4fe8-bf50-7dad8f17d3e5",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:12 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 290,
          "responseSize": 58
        },
        "id": "a210008d-6411-4511-930e-8e348d7f0e9d",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1cd3df12-e50f-45ab-bcfd-ea4449e0980e",
          "length": 92,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7da483af-0edb-4989-becb-463b43734dba"
        },
        "item": {
          "id": "34248423-a271-4b2a-b79c-b077380ab76c",
          "name": "Validate user is unable to get current user task info as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "get-current-user-task-info"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d9b69a1-385e-4e31-9a78-1326ab857ee5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "47bd14eb-075d-4e3a-98e6-396849aa53ec"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-current-user-task-info"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c2362d90-6c74-4405-9922-a6b8eb97a1c8",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7bfda438-0a02-4cef-b35a-6de890eba422",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:13 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 268,
          "responseSize": 31
        },
        "id": "34248423-a271-4b2a-b79c-b077380ab76c",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9f27f1a4-279a-441c-bf98-525c746499dc",
          "length": 92,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e661046c-9d35-478e-a953-1c7e28b3872f"
        },
        "item": {
          "id": "3e87fcdc-e119-46b3-ac9b-cd0a57a0831b",
          "name": "Validate user is able to start variant processing successfully",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "4a92ba9f-d7be-4eb1-bad0-2b22660b2a79"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2c317e85-875a-4fe9-a127-01f9bc0539a0",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) processed successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "98f26a65-db1c-4052-9fc5-0aadcfaaa212"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "4a92ba9f-d7be-4eb1-bad0-2b22660b2a79"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6de5147c-389c-41fe-874b-96335f5ab184",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6bc2cecc-500d-4d58-bcba-8eec733718c3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:13 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "681"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              86,
              97,
              114,
              105,
              97,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              40,
              115,
              41,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              52,
              97,
              57,
              50,
              98,
              97,
              57,
              102,
              45,
              100,
              55,
              98,
              101,
              45,
              52,
              101,
              98,
              49,
              45,
              98,
              97,
              100,
              48,
              45,
              50,
              98,
              50,
              50,
              54,
              54,
              48,
              98,
              50,
              97,
              55,
              57,
              47,
              100,
              102,
              52,
              100,
              50,
              57,
              55,
              48,
              45,
              98,
              57,
              98,
              102,
              45,
              52,
              99,
              56,
              48,
              45,
              56,
              52,
              100,
              48,
              45,
              57,
              99,
              56,
              101,
              48,
              48,
              97,
              49,
              55,
              49,
              53,
              99,
              95,
              95,
              95,
              95,
              115,
              97,
              109,
              112,
              108,
              101,
              95,
              112,
              114,
              101,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              111,
              109,
              97,
              116,
              105,
              99,
              32,
              83,
              78,
              86,
              45,
              73,
              110,
              100,
              101,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              95,
              105,
              110,
              95,
              105,
              110,
              112,
              117,
              116,
              34,
              58,
              34,
              50,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              113,
              99,
              95,
              112,
              97,
              115,
              115,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              98,
              101,
              100,
              95,
              102,
              105,
              108,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              115,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              58,
              34,
              53,
              48,
              48,
              48,
              34,
              125,
              93,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              56,
              97,
              101,
              101,
              53,
              99,
              51,
              102,
              45,
              50,
              97,
              101,
              98,
              45,
              52,
              48,
              48,
              51,
              45,
              57,
              52,
              49,
              52,
              45,
              57,
              52,
              54,
              97,
              49,
              100,
              50,
              100,
              53,
              56,
              99,
              52,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              110,
              103,
              95,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              115,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              80,
              69,
              78,
              68,
              73,
              78,
              71,
              34,
              44,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              98,
              97,
              99,
              107,
              34,
              58,
              34,
              78,
              111,
              110,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              95,
              100,
              111,
              110,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              50,
              58,
              48,
              51,
              58,
              49,
              53,
              46,
              52,
              48,
              56,
              55,
              55,
              49,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1847,
          "responseSize": 681
        },
        "id": "3e87fcdc-e119-46b3-ac9b-cd0a57a0831b",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4c1d3566-c76b-449c-b8ac-0ae2fbb8d30b",
          "length": 92,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08d644eb-8fb0-4aba-bd14-f7cb5024bea3"
        },
        "item": {
          "id": "bd9ad85a-570b-4dd0-98f9-947278b8ca16",
          "name": "Validate user is unable to start variant processing as required parameter is missing",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92b71ebe-1d4e-4afa-a594-a956477c86b4",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "53d0b97f-f943-450a-bf48-150f93576496"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "24a687dd-8797-42e4-89c9-3f453508b485",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c90dcab2-67d1-4f1d-9327-3d1b1a1e6a41",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:13 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 657,
          "responseSize": 53
        },
        "id": "bd9ad85a-570b-4dd0-98f9-947278b8ca16",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8a843f8d-b5a0-4ce2-8e61-7147814f73cd",
          "length": 92,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "07aa54e5-e510-4a2e-a937-a19dfa13cf78"
        },
        "item": {
          "id": "9ac9d029-df35-434d-962a-6177cf3f6072",
          "name": "Validate user is unable to start variant processing without Authorization",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d647557e-83e5-4050-a493-20d7930402a3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "528651cf-bfcb-443f-bec0-a7e8f0e2e53b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c15f63e8-fa44-481e-b743-e9b3d66352a8",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "dbc6c0e9-4541-45be-815f-36a49bbbb2c0",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:16 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 268,
          "responseSize": 62
        },
        "id": "9ac9d029-df35-434d-962a-6177cf3f6072",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c6483dd3-1326-423d-9705-5d860fc641e8",
          "length": 92,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "aff4a39d-1d32-47b1-8e02-c34c8b19b81e"
        },
        "item": {
          "id": "aedc28b1-af50-42ee-80a3-701cafc11b5c",
          "name": "Validate user is unable to start variant processing as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9657e5e3-ba56-4c83-b65b-4d0aabaee9e6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "7446c709-3698-459c-bd59-bc3395875365"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6a941e40-fe45-4ec3-bb2f-59f637714006",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "adc3164b-e0b7-45bf-a113-eb066db7d6a8",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:16 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 323,
          "responseSize": 58
        },
        "id": "aedc28b1-af50-42ee-80a3-701cafc11b5c",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ea81ea1f-e50b-4b74-a249-596712f5e797",
          "length": 92,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f7f43f07-ddf5-489e-a76d-340519ef0ebf"
        },
        "item": {
          "id": "ef43b0e7-f53e-47db-beb3-51fdc35ded05",
          "name": "Validate user is unable to start variant processing as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "start-variant-processing"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5b90a497-6129-42b5-87bd-9f8f6ddc3f20",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "717029e5-3b91-40dc-80c0-1ebdb8039cd5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "start-variant-processing"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "20025ae2-362f-4b92-8025-8db3eb9743a2",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c5963570-7af3-4c0e-967c-59ed47bf1e74",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:16 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 314,
          "responseSize": 31
        },
        "id": "ef43b0e7-f53e-47db-beb3-51fdc35ded05",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ad8509a5-9c8f-4592-aad0-9e30b212b5ea",
          "length": 92,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c7e2f9f5-09e1-464e-9a78-f5f990d04261"
        },
        "item": {
          "id": "dd757472-64ed-499f-ac13-67cd42326ea4",
          "name": "Validate user is able to display patient demograph dropdown successfully",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "tmb"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c23a312-2ec8-4ef2-82a5-8b3d3348f493",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Parse the JSON response\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "// Expected array elements\r",
                  "let expectedElements = [\"High\", \"Low\", \"Intermediate\", \"Unknown\"];\r",
                  "\r",
                  "// Validate the response is an array\r",
                  "pm.test(\"Response is an array\", function () {\r",
                  "    pm.expect(response).to.be.an('array');\r",
                  "});\r",
                  "\r",
                  "// Validate the response contains all expected elements\r",
                  "pm.test(\"Response contains all expected elements\", function () {\r",
                  "    expectedElements.forEach(function(element) {\r",
                  "        pm.expect(response).to.include(element);\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the response does not contain any unexpected elements\r",
                  "pm.test(\"Response does not contain unexpected elements\", function () {\r",
                  "    response.forEach(function(element) {\r",
                  "        pm.expect(expectedElements).to.include(element);\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "887dbb58-b4fa-41f0-8492-3573346bf4ee"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "tmb"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dd29d519-c85b-4f37-aa54-b77117d5bd9a",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "fc3bca33-6330-456c-b2c8-d8aaac0b9c79",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:17 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "39"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              34,
              72,
              105,
              103,
              104,
              34,
              44,
              34,
              76,
              111,
              119,
              34,
              44,
              34,
              73,
              110,
              116,
              101,
              114,
              109,
              101,
              100,
              105,
              97,
              116,
              101,
              34,
              44,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              93
            ]
          },
          "cookie": [],
          "responseTime": 634,
          "responseSize": 39
        },
        "id": "dd757472-64ed-499f-ac13-67cd42326ea4",
        "assertions": [
          {
            "assertion": "Response is an array",
            "skipped": false
          },
          {
            "assertion": "Response contains all expected elements",
            "skipped": false
          },
          {
            "assertion": "Response does not contain unexpected elements",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bc1de028-cbc9-422c-85a3-725d8889b34e",
          "length": 92,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1456337e-8e62-487f-a683-571e799078b0"
        },
        "item": {
          "id": "937eb979-9f65-4b1e-a382-6df27370615b",
          "name": "Validate user is unable to display patient demograph dropdown with missing required parameter",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7ec6cac2-d904-47ce-9df5-64e94e2f7d12",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "0b755b66-7b76-40dd-a60b-2ef2ac82de5f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "440c6291-b8b0-44e2-b402-69f6d8068c01",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6df5fa73-42eb-4e5b-ae2e-a21a0db73f11",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:17 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 752,
          "responseSize": 53
        },
        "id": "937eb979-9f65-4b1e-a382-6df27370615b",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "84bed151-c9fa-4bf4-bb96-840251734254",
          "length": 92,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8a8f4e1c-7066-4625-ac39-c5af66711cfe"
        },
        "item": {
          "id": "8467b49c-7072-4523-a635-46a2f0451791",
          "name": "Validate user is unable to display patient demograph dropdown with incorrect query parameter",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7845a510-fa8b-4161-9caa-a28a09926d73",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "9676fcb1-7a37-480d-a8b4-f8ed3e23799b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "77ee9caf-68fb-44cb-a3c6-fcc271323952",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "56619a5b-8d25-4541-90d7-b73b18972026",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:19 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 703,
          "responseSize": 53
        },
        "id": "8467b49c-7072-4523-a635-46a2f0451791",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b73ee229-e4a3-4415-af62-e5c676d9bcf2",
          "length": 92,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aee886f7-b691-48f2-88ca-a18c4742df88"
        },
        "item": {
          "id": "5de279b0-dcd1-4aae-a326-bc6ef0690da7",
          "name": "Validate user is unable to display patient demograph dropdown without Authorization",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "tmb"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c63982be-baeb-4f91-9c60-9e39a3a4a1f2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "07604a14-9c5f-4be6-8aa2-fbd15afb05b9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "tmb"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "387a79e8-6994-46ad-8d04-3f3d245a2c01",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "6b3ba240-4db6-4169-b670-dab100bfcc96",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:19 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 273,
          "responseSize": 62
        },
        "id": "5de279b0-dcd1-4aae-a326-bc6ef0690da7",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e19db850-cae6-45f4-8fd4-f6494073d105",
          "length": 92,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cd738f4f-8821-4550-9766-e00b4315ac53"
        },
        "item": {
          "id": "00178e39-9aae-462a-82c8-e9ddc987980d",
          "name": "Validate user is unable to display patient demograph dropdown as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "tmb"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0e4456b2-ee36-4c06-a797-a787b932cc8c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "11fdc8b6-9c39-48fd-b477-8d27d48da66a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "tmb"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0c72035b-76ec-4f83-9975-8ef2b5fadcea",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0dbb83c2-2773-40bd-9c16-bbbdeb5b92e7",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:19 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 296,
          "responseSize": 58
        },
        "id": "00178e39-9aae-462a-82c8-e9ddc987980d",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "23aa2dda-5c6a-4134-9737-43db2ea98573",
          "length": 92,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6c1dd02a-fd59-4d90-b486-12febabaaceb"
        },
        "item": {
          "id": "a6474958-3807-4c24-8c18-4b5dd9432edb",
          "name": "Validate user is unable to display patient demograph dropdown as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "patient-demograph-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "tmb"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5f99561f-6640-46b6-906c-fb9900486520",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "8b4fb60c-35cc-4b77-844c-c06561766610"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "patient-demograph-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "tmb"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7f4818da-1696-41ff-8ee4-882bdd4395af",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "defe9715-ba89-435b-b9a5-94dd733fb64e",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:20 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 269,
          "responseSize": 31
        },
        "id": "a6474958-3807-4c24-8c18-4b5dd9432edb",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "dec3dbe1-e4b5-4622-93b9-548446917070",
          "length": 92,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2f17020e-8758-4160-aae0-3e05ddceedc0"
        },
        "item": {
          "id": "66b1ead5-b003-49ac-bb80-b348d5acbfdf",
          "name": "Validate user is able to display sub tumor type dropdown successfully",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "lung_cancer"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4ff8c9f-bccc-4254-bb8a-38993d33a466",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Parse the JSON response\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "// Expected array elements\r",
                  "let expectedElements = [\r",
                  "    \"Small Cell Lung Cancer\",\r",
                  "    \"Non-Small Cell Lung Cancer\",\r",
                  "    \"Combined Small Cell Lung Carcinoma (CSCLC)\",\r",
                  "    \"Inflammatory Myofibroblastic Lung Tumor (IMTL)\",\r",
                  "    \"Lung Adenocarcinoma In Situ (LAIS)\",\r",
                  "    \"Lung Neuroendocrine Tumor (LNET)\",\r",
                  "    \"Non-Small Cell Lung Cancer (NSCLC)\",\r",
                  "    \"Pleuropulmonary Blastoma (PPB)\",\r",
                  "    \"Pulmonary Lymphangiomyomatosis (LAM)\",\r",
                  "    \"Sarcomatoid Carcinoma of the Lung (SARCL)\",\r",
                  "    \"Atypical Lung Carcinoid (ALUCA)\",\r",
                  "    \"Large Cell Neuroendocrine Carcinoma (LUNE)\",\r",
                  "    \"Lung Carcinoid (LUCA)\",\r",
                  "    \"Small Cell Lung Cancer (SCLC)\",\r",
                  "    \"Ciliated Muconodular Papillary Tumor of the Lung (CMPT)\",\r",
                  "    \"Large Cell Lung Carcinoma (LCLC)\",\r",
                  "    \"Lung Adenocarcinoma (LUAD)\",\r",
                  "    \"Lung Adenosquamous Carcinoma (LUAS)\",\r",
                  "    \"Lung Squamous Cell Carcinoma (LUSC)\",\r",
                  "    \"NUT Carcinoma of the Lung (NUTCL)\",\r",
                  "    \"Pleomorphic Carcinoma of the Lung (LUPC)\",\r",
                  "    \"Poorly Differentiated Non-Small Cell Lung Cancer (NSCLCPD)\",\r",
                  "    \"Salivary Gland-Type Tumor of the Lung (SGTTL)\",\r",
                  "    \"Spindle Cell Carcinoma of the Lung (SPCC)\",\r",
                  "    \"Basaloid Large Cell Carcinoma of the Lung (BLCLC)\",\r",
                  "    \"Clear Cell Carcinoma of the Lung (CCLC)\",\r",
                  "    \"Giant Cell Carcinoma of the Lung (GCLC)\",\r",
                  "    \"Large Cell Lung Carcinoma With Rhabdoid Phenotype (RLCLC)\",\r",
                  "    \"Lymphoepithelioma-like Carcinoma of the Lung (LECLC)\",\r",
                  "    \"Adenoid Cystic Carcinoma of the Lung (LUACC)\",\r",
                  "    \"Mucoepidermoid Carcinoma of the Lung (LUMEC)\"\r",
                  "];\r",
                  "\r",
                  "// Validate the response is an array\r",
                  "pm.test(\"Response is an array\", function () {\r",
                  "    pm.expect(response).to.be.an('array');\r",
                  "});\r",
                  "\r",
                  "// Validate the response contains all expected elements\r",
                  "pm.test(\"Response contains all expected elements\", function () {\r",
                  "    expectedElements.forEach(function(element) {\r",
                  "        pm.expect(response).to.include(element);\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the response does not contain any unexpected elements\r",
                  "pm.test(\"Response does not contain unexpected elements\", function () {\r",
                  "    response.forEach(function(element) {\r",
                  "        pm.expect(expectedElements).to.include(element);\r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "014618db-f781-47cc-99c0-3117d9477f0e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "lung_cancer"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "900ee039-ba96-4fd2-baae-c70f75164fe9",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4b5aebc0-546b-404b-a11f-3331dec4d78d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:20 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "1332"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              34,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              78,
              111,
              110,
              45,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              34,
              44,
              34,
              67,
              111,
              109,
              98,
              105,
              110,
              101,
              100,
              32,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              67,
              83,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              73,
              110,
              102,
              108,
              97,
              109,
              109,
              97,
              116,
              111,
              114,
              121,
              32,
              77,
              121,
              111,
              102,
              105,
              98,
              114,
              111,
              98,
              108,
              97,
              115,
              116,
              105,
              99,
              32,
              76,
              117,
              110,
              103,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              40,
              73,
              77,
              84,
              76,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              65,
              100,
              101,
              110,
              111,
              99,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              73,
              110,
              32,
              83,
              105,
              116,
              117,
              32,
              40,
              76,
              65,
              73,
              83,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              78,
              101,
              117,
              114,
              111,
              101,
              110,
              100,
              111,
              99,
              114,
              105,
              110,
              101,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              40,
              76,
              78,
              69,
              84,
              41,
              34,
              44,
              34,
              78,
              111,
              110,
              45,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              32,
              40,
              78,
              83,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              80,
              108,
              101,
              117,
              114,
              111,
              112,
              117,
              108,
              109,
              111,
              110,
              97,
              114,
              121,
              32,
              66,
              108,
              97,
              115,
              116,
              111,
              109,
              97,
              32,
              40,
              80,
              80,
              66,
              41,
              34,
              44,
              34,
              80,
              117,
              108,
              109,
              111,
              110,
              97,
              114,
              121,
              32,
              76,
              121,
              109,
              112,
              104,
              97,
              110,
              103,
              105,
              111,
              109,
              121,
              111,
              109,
              97,
              116,
              111,
              115,
              105,
              115,
              32,
              40,
              76,
              65,
              77,
              41,
              34,
              44,
              34,
              83,
              97,
              114,
              99,
              111,
              109,
              97,
              116,
              111,
              105,
              100,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              83,
              65,
              82,
              67,
              76,
              41,
              34,
              44,
              34,
              65,
              116,
              121,
              112,
              105,
              99,
              97,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              105,
              100,
              32,
              40,
              65,
              76,
              85,
              67,
              65,
              41,
              34,
              44,
              34,
              76,
              97,
              114,
              103,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              78,
              101,
              117,
              114,
              111,
              101,
              110,
              100,
              111,
              99,
              114,
              105,
              110,
              101,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              85,
              78,
              69,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              105,
              100,
              32,
              40,
              76,
              85,
              67,
              65,
              41,
              34,
              44,
              34,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              32,
              40,
              83,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              67,
              105,
              108,
              105,
              97,
              116,
              101,
              100,
              32,
              77,
              117,
              99,
              111,
              110,
              111,
              100,
              117,
              108,
              97,
              114,
              32,
              80,
              97,
              112,
              105,
              108,
              108,
              97,
              114,
              121,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              67,
              77,
              80,
              84,
              41,
              34,
              44,
              34,
              76,
              97,
              114,
              103,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              65,
              100,
              101,
              110,
              111,
              99,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              85,
              65,
              68,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              65,
              100,
              101,
              110,
              111,
              115,
              113,
              117,
              97,
              109,
              111,
              117,
              115,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              85,
              65,
              83,
              41,
              34,
              44,
              34,
              76,
              117,
              110,
              103,
              32,
              83,
              113,
              117,
              97,
              109,
              111,
              117,
              115,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              40,
              76,
              85,
              83,
              67,
              41,
              34,
              44,
              34,
              78,
              85,
              84,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              78,
              85,
              84,
              67,
              76,
              41,
              34,
              44,
              34,
              80,
              108,
              101,
              111,
              109,
              111,
              114,
              112,
              104,
              105,
              99,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              76,
              85,
              80,
              67,
              41,
              34,
              44,
              34,
              80,
              111,
              111,
              114,
              108,
              121,
              32,
              68,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              116,
              105,
              97,
              116,
              101,
              100,
              32,
              78,
              111,
              110,
              45,
              83,
              109,
              97,
              108,
              108,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              110,
              99,
              101,
              114,
              32,
              40,
              78,
              83,
              67,
              76,
              67,
              80,
              68,
              41,
              34,
              44,
              34,
              83,
              97,
              108,
              105,
              118,
              97,
              114,
              121,
              32,
              71,
              108,
              97,
              110,
              100,
              45,
              84,
              121,
              112,
              101,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              83,
              71,
              84,
              84,
              76,
              41,
              34,
              44,
              34,
              83,
              97,
              108,
              105,
              118,
              97,
              114,
              121,
              32,
              71,
              108,
              97,
              110,
              100,
              45,
              84,
              121,
              112,
              101,
              32,
              84,
              117,
              109,
              111,
              114,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              83,
              71,
              84,
              84,
              76,
              41,
              34,
              44,
              34,
              83,
              112,
              105,
              110,
              100,
              108,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              83,
              80,
              67,
              67,
              41,
              34,
              44,
              34,
              66,
              97,
              115,
              97,
              108,
              111,
              105,
              100,
              32,
              76,
              97,
              114,
              103,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              66,
              76,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              67,
              108,
              101,
              97,
              114,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              67,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              71,
              105,
              97,
              110,
              116,
              32,
              67,
              101,
              108,
              108,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              71,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              76,
              97,
              114,
              103,
              101,
              32,
              67,
              101,
              108,
              108,
              32,
              76,
              117,
              110,
              103,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              87,
              105,
              116,
              104,
              32,
              82,
              104,
              97,
              98,
              100,
              111,
              105,
              100,
              32,
              80,
              104,
              101,
              110,
              111,
              116,
              121,
              112,
              101,
              32,
              40,
              82,
              76,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              76,
              121,
              109,
              112,
              104,
              111,
              101,
              112,
              105,
              116,
              104,
              101,
              108,
              105,
              111,
              109,
              97,
              45,
              108,
              105,
              107,
              101,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              76,
              69,
              67,
              76,
              67,
              41,
              34,
              44,
              34,
              65,
              100,
              101,
              110,
              111,
              105,
              100,
              32,
              67,
              121,
              115,
              116,
              105,
              99,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              76,
              85,
              65,
              67,
              67,
              41,
              34,
              44,
              34,
              77,
              117,
              99,
              111,
              101,
              112,
              105,
              100,
              101,
              114,
              109,
              111,
              105,
              100,
              32,
              67,
              97,
              114,
              99,
              105,
              110,
              111,
              109,
              97,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              76,
              117,
              110,
              103,
              32,
              40,
              76,
              85,
              77,
              69,
              67,
              41,
              34,
              93
            ]
          },
          "cookie": [],
          "responseTime": 1006,
          "responseSize": 1332
        },
        "id": "66b1ead5-b003-49ac-bb80-b348d5acbfdf",
        "assertions": [
          {
            "assertion": "Response is an array",
            "skipped": false
          },
          {
            "assertion": "Response contains all expected elements",
            "skipped": false
          },
          {
            "assertion": "Response does not contain unexpected elements",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e83b620f-1e62-4468-b7df-201ea7340720",
          "length": 92,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ca512439-3cf9-4fa5-9cc7-cb585896e563"
        },
        "item": {
          "id": "18718129-1212-4729-8e4f-cc7270bf4c99",
          "name": "Validate user is unable to display sub tumor type dropdown with missing required parameter",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b36af5e7-dcf4-43c3-b498-950978f0b0dc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "0cb28231-1f54-499a-afdb-3365323de80c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "45576c4c-eaa4-4de4-9436-c7d74b2f2a66",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3c229690-9044-4d10-9743-e2376b05f34e",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:22 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 646,
          "responseSize": 53
        },
        "id": "18718129-1212-4729-8e4f-cc7270bf4c99",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "50432dbf-8e4f-418e-a8d1-f80f97736c76",
          "length": 92,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b99a86e2-c0fb-40a8-b95e-d19642a75845"
        },
        "item": {
          "id": "81d259b9-5af6-4adb-aa4c-1c045aee50b0",
          "name": "Validate user is unable to display sub tumor type dropdown with incorrect query parameter",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "55ff1500-2f02-4122-a641-3a0647533602",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "c3baa43a-5839-4ba5-a94d-36859b2713de"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c4fbb098-c4fd-4f6e-8be5-90876860cfde",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d41d9630-69d4-4ea5-b07b-d108053b80f0",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:22 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 638,
          "responseSize": 53
        },
        "id": "81d259b9-5af6-4adb-aa4c-1c045aee50b0",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2e5e373b-8882-497d-a19a-e3f4a00fdfa8",
          "length": 92,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1c083a23-19c5-494f-a31a-38abc7d6f16e"
        },
        "item": {
          "id": "b0887753-4743-44f6-8d63-cc13aa5f89e2",
          "name": "Validate user is unable to display sub tumor type dropdown without Authorization",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "lung_cancer"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4dda4f1-6c7b-4b72-a19d-d40d4b972bd8",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "72f6096b-dca8-4751-bffc-e865daa45452"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "lung_cancer"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "50b0779d-1403-4e3a-bc82-9f61bbb14534",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "c6d896a7-f6b2-4bac-9037-005f53e55f70",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:22 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 276,
          "responseSize": 62
        },
        "id": "b0887753-4743-44f6-8d63-cc13aa5f89e2",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2d567537-c372-4618-b0e5-305f8b281e54",
          "length": 92,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "11b423e8-91d8-4bfc-8741-532469ca04cd"
        },
        "item": {
          "id": "950f25f2-d03f-4685-a67d-62c6bf45ff45",
          "name": "Validate user is unable to display sub tumor type dropdown as toekn is invalid/expired",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "lung_cancer"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "10913985-8596-4455-ad0a-0e0b83e4d56c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "3f21e11a-0c44-4af5-a0b9-06a9f6a628f0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "lung_cancer"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "871dbb36-1c8c-4f46-a600-29654f5dbc98",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4e4a55e1-b842-4896-a392-e331727c629e",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:23 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 289,
          "responseSize": 58
        },
        "id": "950f25f2-d03f-4685-a67d-62c6bf45ff45",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "23890f60-2691-4505-8c68-f57b24419dc1",
          "length": 92,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "739db4ce-881c-40af-b155-59cc2eafa580"
        },
        "item": {
          "id": "79094cf9-e97d-4cec-828e-45ab1c2d33e1",
          "name": "Validate user is unable to display sub tumor type dropdown as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "sub-tumor-dropdown"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1c6c966-dbc6-448d-921d-4d6cb392cf03",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "de31d74f-e4df-46aa-b5b7-733683c7ee60"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "sub-tumor-dropdown"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "key",
                "value": "{{key}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "57acb7ac-a21f-4b30-8a5a-98ec5e2d1707",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "92abfa9c-bee9-4238-a75f-e9b705f2e128",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:23 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 273,
          "responseSize": 31
        },
        "id": "79094cf9-e97d-4cec-828e-45ab1c2d33e1",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "742f6c8e-8ee8-4a53-a7b8-8a63a3f315c1",
          "length": 92,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "24d21e85-2549-4a53-ba71-4b5301aabd9b"
        },
        "item": {
          "id": "889d023e-77fb-4da5-86f6-2299ed31721d",
          "name": "Validate user is able to get patient file details successfully",
          "request": {
            "url": {
              "port": "8001",
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "13",
                "233",
                "37",
                "45"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "958fd271-1a6f-4cbb-8c53-bb1cbd3405cc"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6f8990d-0550-4e6a-8613-d05c8aefbcea",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient file details retrieved\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "8704fb58-2490-40bf-a5ba-522d289fb4da"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "13",
              "233",
              "37",
              "45"
            ],
            "query": [
              {
                "key": "id",
                "value": "958fd271-1a6f-4cbb-8c53-bb1cbd3405cc"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2ef769b1-d61a-4bde-8b65-fa09a7271da3",
              "system": true
            },
            {
              "key": "Host",
              "value": "13.233.37.45:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "111023d6-adc8-4407-9d21-c7130cf04543",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:24 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "502"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              102,
              105,
              108,
              101,
              32,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              100,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              105,
              110,
              102,
              111,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              71,
              49,
              48,
              48,
              50,
              51,
              51,
              54,
              53,
              55,
              48,
              46,
              116,
              120,
              116,
              34,
              44,
              34,
              115,
              105,
              122,
              101,
              34,
              58,
              34,
              48,
              46,
              48,
              48,
              32,
              77,
              66,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              49,
              51,
              46,
              50,
              51,
              51,
              46,
              51,
              55,
              46,
              52,
              53,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              112,
              97,
              116,
              105,
              101,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              52,
              53,
              100,
              100,
              53,
              99,
              54,
              53,
              45,
              97,
              101,
              98,
              51,
              45,
              52,
              101,
              54,
              49,
              45,
              98,
              102,
              57,
              57,
              45,
              52,
              48,
              98,
              97,
              56,
              97,
              54,
              54,
              53,
              54,
              100,
              54,
              95,
              95,
              95,
              95,
              82,
              71,
              49,
              48,
              48,
              50,
              51,
              51,
              54,
              53,
              55,
              48,
              46,
              116,
              120,
              116,
              34,
              125,
              93,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              95,
              105,
              110,
              102,
              111,
              34,
              58,
              91,
              123,
              34,
              102,
              105,
              108,
              101,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              68,
              101,
              109,
              111,
              95,
              80,
              66,
              67,
              80,
              49,
              95,
              115,
              111,
              109,
              97,
              116,
              105,
              99,
              46,
              104,
              97,
              114,
              100,
              45,
              102,
              105,
              108,
              116,
              101,
              114,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              44,
              34,
              115,
              105,
              122,
              101,
              34,
              58,
              34,
              48,
              46,
              50,
              49,
              32,
              77,
              66,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              49,
              51,
              46,
              50,
              51,
              51,
              46,
              51,
              55,
              46,
              52,
              53,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              102,
              55,
              52,
              57,
              57,
              55,
              99,
              53,
              45,
              54,
              100,
              55,
              56,
              45,
              52,
              98,
              55,
              49,
              45,
              97,
              50,
              56,
              53,
              45,
              101,
              54,
              56,
              51,
              53,
              48,
              99,
              98,
              48,
              53,
              54,
              52,
              95,
              95,
              95,
              95,
              68,
              101,
              109,
              111,
              95,
              80,
              66,
              67,
              80,
              49,
              95,
              115,
              111,
              109,
              97,
              116,
              105,
              99,
              46,
              104,
              97,
              114,
              100,
              45,
              102,
              105,
              108,
              116,
              101,
              114,
              101,
              100,
              46,
              118,
              99,
              102,
              34,
              125,
              93,
              44,
              34,
              111,
              116,
              104,
              101,
              114,
              95,
              109,
              101,
              100,
              105,
              99,
              97,
              108,
              95,
              102,
              105,
              108,
              101,
              115,
              95,
              105,
              110,
              102,
              111,
              34,
              58,
              91,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1411,
          "responseSize": 502
        },
        "id": "889d023e-77fb-4da5-86f6-2299ed31721d",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "13f30f4b-22e9-475a-b0a6-059af1e46dfc",
          "length": 92,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c2497c01-8827-45a8-baec-f22c9bb88ab3"
        },
        "item": {
          "id": "c826933f-ac91-4bff-9386-e8293999ae42",
          "name": "Validate user is unable to get patient file details with missing required parameter",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "01f871cd-62c5-4bac-88d1-c8ece60601df",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient not found\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "1f21b7a3-98b1-4298-8b83-4d91b3ac136b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d66abd4a-8680-4976-898d-b20a62c50c8d",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "cfdb44a1-87d2-4053-8d3d-0947c91860c2",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:26 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "48"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 748,
          "responseSize": 48
        },
        "id": "c826933f-ac91-4bff-9386-e8293999ae42",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2b44a0e5-54d5-42b8-8af2-4204ad615c9d",
          "length": 92,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e058b81d-8f71-4f87-8da4-7709e6722545"
        },
        "item": {
          "id": "fb1d5c9c-7542-479f-9ce6-131f160686b6",
          "name": "Validate user is unable to get patient file details with incorrect query parameter",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "\"12345\""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dedc3cc6-a7ff-4140-b9f7-926bd31eb0f6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Patient not found\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "f32ffa9e-0272-433d-886a-3744c5482a2d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "%2212345%22"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "33e7fd39-f805-4d1d-ad9c-ebbf9418da46",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d0c9d6a1-e09b-47b2-9f1f-8cfc437a7080",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:26 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "48"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              116,
              105,
              101,
              110,
              116,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 565,
          "responseSize": 48
        },
        "id": "fb1d5c9c-7542-479f-9ce6-131f160686b6",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0daa5e4c-4482-48a4-a825-1c9d4eee4479",
          "length": 92,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2737052c-b3b5-451f-9f3b-ae59c510f06d"
        },
        "item": {
          "id": "e3ab91bc-da3b-44b9-8259-32ad360eccf4",
          "name": "Validate user is unable to get patient file details without Authorization",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ae354f60-4397-4480-8168-dc8b16a99b44",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9526efcb-a0eb-4242-acc2-40497254dfde"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "17dd14c0-b25c-4d8e-ba4b-5c48dbd3b52b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "cb69922d-8df0-4510-acb0-8ff718881818",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:26 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 265,
          "responseSize": 62
        },
        "id": "e3ab91bc-da3b-44b9-8259-32ad360eccf4",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "075d85e9-3bca-490e-9b78-8e96d57ac20e",
          "length": 92,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2c830c11-2bdb-4f3c-a341-224b545d7933"
        },
        "item": {
          "id": "81e2c27e-d8f3-4125-8cca-c11e00669e0c",
          "name": "Validate user is unable to get patient file details as token is invalid/expired",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b365038e-029d-4d24-bef4-075889816e04",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "346fe6d6-82c8-4023-8cf7-cc1d63370ae5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2f6a433e-98c5-4b01-aa61-09f2053d89d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOTVbo2b_Ke3vA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "85fd53bc-f180-47d4-8399-2fe363058aac",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:27 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 291,
          "responseSize": 58
        },
        "id": "81e2c27e-d8f3-4125-8cca-c11e00669e0c",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "be9e6116-c341-4406-9d75-6c8d5e8713b3",
          "length": 92,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c35e3797-ea3a-4e75-8271-79a311b6e024"
        },
        "item": {
          "id": "076a55a2-cfe4-4664-815d-22b8ec276970",
          "name": "Validate user is unable to get patient file details as incorrect CRUD operation is used",
          "request": {
            "url": {
              "path": [
                "get-patient-file-details"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{uid}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8f8f0b6d-fe96-4d78-b805-ed9aecf13c81",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "99ae016f-50b1-4ae0-a1ba-d1b3f7bc8dc0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "get-patient-file-details"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "69cf664c-cf44-482c-9cbb-1c97f711ffce",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6ccaba7e-fb81-45ae-809c-9406ae3a7b85",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:27 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 269,
          "responseSize": 31
        },
        "id": "076a55a2-cfe4-4664-815d-22b8ec276970",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "20b66303-b542-4eac-af9a-630408b4be89",
          "length": 92,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "61c12c9e-4f07-4961-b2d0-3e75031f0966"
        },
        "item": {
          "id": "373bfac8-05b2-48ea-ac8a-27a694735040",
          "name": "Successfully export files",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0e0836c4-d71d-4a97-a805-a33eee9058a5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "dd52bf90-b52a-417c-8fce-892a625dce70"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7d497db1-6e3c-4a5d-a5ac-67254d75c591",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "be0bbbb4-6113-4399-ab4f-89a2a3ea1b1d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6f8dcf7b-e4a5-4089-890b-c32dea8683c0",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7b181e9b-fc4d-48fe-aa2b-07d94196075a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:34 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "316"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              103,
              101,
              110,
              101,
              114,
              97,
              116,
              101,
              100,
              32,
              108,
              105,
              110,
              107,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              51,
              46,
              49,
              51,
              55,
              46,
              50,
              46,
              49,
              56,
              51,
              58,
              56,
              48,
              48,
              49,
              47,
              102,
              105,
              108,
              101,
              115,
              47,
              101,
              120,
              112,
              111,
              114,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              47,
              100,
              71,
              86,
              116,
              99,
              71,
              57,
              121,
              89,
              88,
              74,
              53,
              88,
              49,
              56,
              121,
              77,
              68,
              73,
              48,
              76,
              84,
              65,
              51,
              76,
              84,
              73,
              49,
              86,
              68,
              65,
              53,
              79,
              106,
              85,
              50,
              79,
              106,
              81,
              48,
              76,
              106,
              99,
              120,
              77,
              84,
              89,
              122,
              77,
              105,
              115,
              119,
              77,
              68,
              111,
              119,
              77,
              65,
              61,
              61,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              68,
              97,
              116,
              97,
              95,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              95,
              49,
              50,
              45,
              48,
              51,
              45,
              51,
              52,
              46,
              120,
              108,
              115,
              120,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              100,
              71,
              86,
              116,
              99,
              71,
              57,
              121,
              89,
              88,
              74,
              53,
              88,
              49,
              56,
              121,
              77,
              68,
              73,
              48,
              76,
              84,
              65,
              51,
              76,
              84,
              73,
              49,
              86,
              68,
              65,
              53,
              79,
              106,
              85,
              50,
              79,
              106,
              81,
              48,
              76,
              106,
              99,
              120,
              77,
              84,
              89,
              122,
              77,
              105,
              115,
              119,
              77,
              68,
              111,
              119,
              77,
              65,
              61,
              61,
              95,
              71,
              101,
              110,
              111,
              109,
              105,
              99,
              68,
              97,
              116,
              97,
              95,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              95,
              49,
              50,
              45,
              48,
              51,
              45,
              51,
              52,
              46,
              120,
              108,
              115,
              120,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 928,
          "responseSize": 316
        },
        "id": "373bfac8-05b2-48ea-ac8a-27a694735040",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fd25ca49-520f-4d0a-ae25-5ef4a650fa6f",
          "length": 92,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a928ec3c-d76b-4b32-81ab-c78c477ef0a9"
        },
        "item": {
          "id": "1c2a541a-eebb-4510-ab3e-31dc58385917",
          "name": "Successfully could not export files with incorrect id",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "1234567890"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f6a03e42-afa0-4f3a-8a7c-a3787b208aad",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                  "});"
                ],
                "_lastExecutionId": "04c546cb-c76e-4b67-a09c-d5297ba6bf66"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "1234567890"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "53e13426-d238-4027-bb0b-1369e9896d50",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ad7ce046-6286-4cdd-8a56-ec3c5390a5b1",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:39 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "56"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              102,
              101,
              116,
              99,
              104,
              105,
              110,
              103,
              32,
              100,
              97,
              116,
              97,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1034,
          "responseSize": 56
        },
        "id": "1c2a541a-eebb-4510-ab3e-31dc58385917",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Status message is Valid",
              "message": "expected 'Error while fetching data' to deeply equal 'Error while removing files'",
              "stack": "AssertionError: expected 'Error while fetching data' to deeply equal 'Error while removing files'\n   at Object.eval sandbox-script.js:2:83)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "21a785e3-9197-4d9a-8b58-f5b167b6c799",
          "length": 92,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "61f93e1f-d74f-4ef8-9fe6-e0b959c37995"
        },
        "item": {
          "id": "c8f7352b-100f-4c6b-95ab-7d3391422327",
          "name": "Could not export files  due to missing authorization",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "199daa44-9aba-4c9b-8320-cee4249bec84",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "53aee542-4886-40ab-8c73-9d3ab538d793"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "53791a3d-51cf-4a31-b5da-13fea0d702b8",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "372faa2e-33ec-4390-a55b-66541068af94"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "247d3d83-a665-401d-811e-d62a6dcd0d3d",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "10b1f58b-8b55-4416-a021-c244858ce228",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:45 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 532,
          "responseSize": 62
        },
        "id": "c8f7352b-100f-4c6b-95ab-7d3391422327",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "613343c6-13f9-4991-83da-e13f0046a678",
          "length": 92,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f747e224-78b9-44a6-83c1-ff62a32bfb60"
        },
        "item": {
          "id": "a889b806-50ba-459a-9a75-460788e2d136",
          "name": "Could not export files  due to invalid  authorization",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "484c3c09-b3f9-4541-bfd7-7160deea6ad2",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                "key": "token"
              }
            ]
          }
        },
        "id": "a889b806-50ba-459a-9a75-460788e2d136",
        "requestError": {
          "code": "ECONNRESET"
        },
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status Code is valid",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:85)"
            }
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Status message is Valid",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:85)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "160b30d5-7ecd-4ba7-ad28-97518f48774f",
          "length": 92,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "90d0b095-9e43-441d-bdcf-c395bef751a3"
        },
        "item": {
          "id": "9d081f49-9055-46ae-9273-2cd86a1fac67",
          "name": "Could not export files  due to invalid CRUD operation",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "72740b62-f749-4969-a351-0128645fc7a2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "c48cd0af-ce89-4bb6-9f92-af494e44b3b2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "export-files"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [
              {
                "key": "id",
                "value": "fb252ef4-f285-4e46-ae01-2cf42fa9c65d"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bde097e9-ef91-4cc9-9e5a-74c5e4878d0c",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c6cca961-e74f-4e6b-8c92-816ebc8636fb",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:57 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 542,
          "responseSize": 31
        },
        "id": "9d081f49-9055-46ae-9273-2cd86a1fac67",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6b1b873e-a95f-4264-88d6-6c0a63d4f1bf",
          "length": 92,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1e981aca-5816-4864-a3b0-c85d5fb66101"
        },
        "item": {
          "id": "90d5d7e9-6fbb-4688-b793-1eb4963cef86",
          "name": "Update patient workflow",
          "request": {
            "url": {
              "port": "8001",
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "13",
                "233",
                "37",
                "45"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"958fd271-1a6f-4cbb-8c53-bb1cbd3405cc\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"{{currentUTCTime}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c7f5fc1d-3cfd-4400-b418-c16ef3c2f782",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Updated Task\");\r",
                  "});"
                ],
                "_lastExecutionId": "49220e50-c312-4444-a879-907a34d3ff35"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "cecd0d41-497b-447c-8d9d-335b2726f63f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "423ac503-5394-4bbc-a6de-0c4eac4aaa2a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "13",
              "233",
              "37",
              "45"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6d2173cd-8ba8-42ef-861d-29c1c83c46d1",
              "system": true
            },
            {
              "key": "Host",
              "value": "13.233.37.45:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "199",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"958fd271-1a6f-4cbb-8c53-bb1cbd3405cc\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-07-25T12:03:57.301Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "2fd271ee-69d8-4c29-9520-84ead53d94d8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:57 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "210"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              84,
              97,
              115,
              107,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              57,
              53,
              56,
              102,
              100,
              50,
              55,
              49,
              45,
              49,
              97,
              54,
              102,
              45,
              52,
              99,
              98,
              98,
              45,
              56,
              99,
              53,
              51,
              45,
              98,
              98,
              49,
              99,
              98,
              100,
              51,
              52,
              48,
              53,
              99,
              99,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              50,
              58,
              48,
              51,
              58,
              53,
              55,
              46,
              51,
              48,
              49,
              90,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1023,
          "responseSize": 210
        },
        "id": "90d5d7e9-6fbb-4688-b793-1eb4963cef86",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8e6419da-1eb9-4b4c-a1a2-93e36d01716f",
          "length": 92,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8754166c-e3ee-4487-8298-ea595d26ca02"
        },
        "item": {
          "id": "0a9277c0-586d-4da3-996a-5a3842e0f640",
          "name": "Could not Update patient workflow with incorrect id",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"1234567890\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bfef9822-ca6f-4d5b-b680-8d7724a68350",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "9b8258ed-5186-41a0-afe0-efcfc63194a7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b6dab7b7-6fc8-426a-ba01-ddb488b3b080",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "173",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"1234567890\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "62b2a499-0efb-4638-890b-6ef8447457d2",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:03:58 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 678,
          "responseSize": 53
        },
        "id": "0a9277c0-586d-4da3-996a-5a3842e0f640",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "86af42a2-5e29-45da-b3c2-a9013fb04041",
          "length": 92,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "adc7e570-e9af-4783-909a-6ee9aef7132e"
        },
        "item": {
          "id": "eab297c8-2b3c-40a0-a064-e8de26fd93cc",
          "name": "Could not Update patient workflow with missing required fields",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90ed29e1-1885-42a6-9328-9d1de103e7a5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Missing required fields\");\r",
                  "});"
                ],
                "_lastExecutionId": "53b3ed9f-ed23-44c1-8caf-75995cff3d88"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4983956a-02bb-4ad9-bd95-4c968b1126ae",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "150",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9135f0cd-8dc2-44fd-a7c1-6e58cfad7d53",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:04:00 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              77,
              105,
              115,
              115,
              105,
              110,
              103,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              32,
              102,
              105,
              101,
              108,
              100,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 651,
          "responseSize": 54
        },
        "id": "eab297c8-2b3c-40a0-a064-e8de26fd93cc",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5910f2ae-8a90-46be-b4f8-ccc48ea474fc",
          "length": 92,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2753381b-c2fd-4be8-ac6f-d55b281e6575"
        },
        "item": {
          "id": "f6bbca98-3381-40eb-be9f-b13ced50caf7",
          "name": "Could not Update patient workflow with missing Authorization",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "491efbba-9a44-4f00-b011-50aa59671d75",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                  "});"
                ],
                "_lastExecutionId": "ed45d43f-0021-4788-abf8-f7d6909585a7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ab88fc86-c2fb-463e-8975-1a5e7be4337a",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "cc7a6763-f092-4bac-9702-75d5d1293d92"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d8aada49-8297-46ec-8607-ffa709f286fa",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "169",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "bdf7b9ea-ddd0-4f2e-b4f5-5af2175b8355",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:04:00 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              104,
              101,
              97,
              100,
              101,
              114,
              32,
              105,
              115,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 270,
          "responseSize": 62
        },
        "id": "f6bbca98-3381-40eb-be9f-b13ced50caf7",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "92ee3e80-3c7d-4a89-96cc-31e6106fe27e",
          "length": 92,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bdc007dd-4445-44b6-9d2f-da0505729506"
        },
        "item": {
          "id": "694b19e2-4c87-4efc-82f4-1cf6ea6b54ed",
          "name": "Could not Update patient workflow with invalid Authorization",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fM",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bd936c6a-1eeb-447a-8c58-308b6938b33a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "47e02987-925b-4d16-8538-aa9efdd14a68"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fM",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3aed53d6-9563-478a-81c9-48a3ce16be7e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "169",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fM",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "2fdf5a35-3f4c-41ea-928b-4bda3166f58c",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:04:01 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 305,
          "responseSize": 58
        },
        "id": "694b19e2-4c87-4efc-82f4-1cf6ea6b54ed",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "247ae743-e7d3-487a-b019-82b7497f7833",
          "length": 92,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cb1a9bf3-c738-4c2f-a3b5-d9b8b2737851"
        },
        "item": {
          "id": "aa27f809-f147-4dc6-ab8f-7b8976973560",
          "name": "Could not Update patient workflow with invalid CRUD  operation",
          "request": {
            "url": {
              "path": [
                "update-patient-workflow"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "262fc0f4-4643-4ad7-9e3c-5e4794c74525",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "75f28926-5782-4e8c-93f3-537037785162"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8001",
            "path": [
              "update-patient-workflow"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "356a3f0f-0432-4a13-b083-13e01e5d0914",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "169",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": \"string\",\r\n  \"profile\": {\r\n    \"current_stage\": \"string\",\r\n    \"state\": \"string\",\r\n    \"status\": \"string\"\r\n  },\r\n  \"updated_at\": \"2024-06-27T02:49:54.247Z\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIwZWY1MDRkYy1iYWQzLTRjYjItOTg4Zi1hMDgwOGE2YWYwOGIiLCJldmVudF9pZCI6Ijk4MDBiZDRiLWJhZTUtNDVlOC1iMzdmLWE5MWJlMDU1YjEyZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE4OTgyMTcsImV4cCI6MTcyMTk4NDYxNywiaWF0IjoxNzIxODk4MjE3LCJqdGkiOiIyNTIxYzU0MC1lMmI1LTQ1ZWQtODY3Zi02OGZkYjM5MjMzMjkiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.znRyuZ-eylaT8o-If_Tom9nYFM6LyVQSAAR7bcqDcL_Y5Fll-re37EmdvavErT-U8YpQO1t56kjxIQuQDD60GG2ydVRJMaJrwLqhG0IiiguXa4NYw_KmpX4kDc3muKDeo6GKEnSZT3N-yy5xG5YX4JZClBdYixdLmn7wRC4vYURtCekwIcIksUkUUw8swYK3rit2ucMA8gfnAHQqQ3XG6Jio9RASavTUC5YstZDAALHJzgkZsZ0_mLK0oTTjhRoSoROTZRO1YHz1d7IF9MrVs2p_Y9B9DNGn88l-R1J53LC09uxnczT3DkAAUX8448i0jsdXYG0b7-CKIooXPpHp_A",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bfd4717a-ac11-4b37-9db4-45d7d4c35e73",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Thu, 25 Jul 2024 12:04:01 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 285,
          "responseSize": 31
        },
        "id": "aa27f809-f147-4dc6-ab8f-7b8976973560",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 31116
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "53801d183c4301200965b7a01cd80fb1",
          "id": "c98eae84-24f3-489d-b393-7f3e1e58dab0",
          "timestamp": 1721908947909,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
          "name": "Validate user is able to upload variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);"
                ],
                "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b567330c-e06f-42b7-bfda-9a5d68379534",
          "length": 92,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0a5330e9-b7be-443b-8397-58c7614a98ed",
          "scriptId": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
          "execution": "0715a61f-c0dd-4405-8fdb-280d3346766a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
          "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:6)",
          "checksum": "426037118474dc04f020057db1d01764",
          "id": "7ae2b929-1990-4db6-8bd4-04a1b04c4a7f",
          "timestamp": 1721908947913,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
          "name": "Validate user is able to upload variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);"
                ],
                "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b567330c-e06f-42b7-bfda-9a5d68379534",
          "length": 92,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0a5330e9-b7be-443b-8397-58c7614a98ed",
          "scriptId": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
          "execution": "0715a61f-c0dd-4405-8fdb-280d3346766a"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "Cannot read properties of undefined (reading 'id')",
          "checksum": "7968b7e0e6adfbc32cfd96627c083201",
          "id": "021eff01-c86f-4d31-8935-fe98a207744d",
          "timestamp": 1721908947916,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
          "name": "Validate user is able to upload variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);"
                ],
                "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b567330c-e06f-42b7-bfda-9a5d68379534",
          "length": 92,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0a5330e9-b7be-443b-8397-58c7614a98ed",
          "scriptId": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "fa16b32b478834c79271b7da4adb6fc0",
          "id": "1c53f935-6c51-40cf-8903-5287a19f4421",
          "timestamp": 1721908948543,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
          "name": "Validate user is able to upload multiple variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                    "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ee00bc8c-6c34-479a-b50b-2f89c94aaa91",
          "length": 92,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dd841ee0-06fa-4949-81ea-d307e878f761",
          "scriptId": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
          "execution": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
          "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:7)",
          "checksum": "54a26343de30a93827990a84c7ff2fa2",
          "id": "3dbc6aec-7898-4877-8ee2-808d396ac0d1",
          "timestamp": 1721908948544,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
          "name": "Validate user is able to upload multiple variants file successfully",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                    "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ee00bc8c-6c34-479a-b50b-2f89c94aaa91",
          "length": 92,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dd841ee0-06fa-4949-81ea-d307e878f761",
          "scriptId": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
          "execution": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 400 but got 422",
          "stack": "AssertionError: expected response to have status code 400 but got 422\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "4b27cfd1941fbfdaf9c86f5a28ca9e4d",
          "id": "2112e32a-0480-49a0-a291-cee45b9a416b",
          "timestamp": 1721908949175,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5836f544-7661-42fc-ab6a-114175eb749a",
          "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d42979d5-563e-41b1-aad7-fd3583d71138",
          "length": 92,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b9a16fe-33ff-43f6-8ae6-c6f74efb56b3",
          "scriptId": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
          "execution": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Only VCF and TSV files are allowed'",
          "stack": "AssertionError: expected undefined to deeply equal 'Only VCF and TSV files are allowed'\n   at Object.eval sandbox-script.js:2:8)",
          "checksum": "6aeb914ab58fa9b732d17c05de191924",
          "id": "4045967a-97af-4970-9390-571a86bb46e1",
          "timestamp": 1721908949176,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "5836f544-7661-42fc-ab6a-114175eb749a",
          "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d42979d5-563e-41b1-aad7-fd3583d71138",
          "length": 92,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b9a16fe-33ff-43f6-8ae6-c6f74efb56b3",
          "scriptId": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
          "execution": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "50d4835c9caf06b438d08f51ec45a94a",
          "id": "b3c25ca8-b1c6-49b6-8969-8c1f6e9e4b8d",
          "timestamp": 1721908949827,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
          "name": "Validate user is able  to upload variants file without id",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);\r",
                  ""
                ],
                "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dc4b2fbd-aa50-4b23-bf1c-020770e8366d",
          "length": 92,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ceb65ccd-3625-4141-9df4-b979ab4e0226",
          "scriptId": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
          "execution": "49a157b9-348a-4664-bdd0-4639a8c3242e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Variant file(s) uploaded'",
          "stack": "AssertionError: expected undefined to deeply equal 'Variant file(s) uploaded'\n   at Object.eval sandbox-script.js:2:9)",
          "checksum": "957e81addada517aaf8b0feec400db8b",
          "id": "19d2ba05-8be2-4325-bd7b-b34047d532bb",
          "timestamp": 1721908949828,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
          "name": "Validate user is able  to upload variants file without id",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);\r",
                  ""
                ],
                "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dc4b2fbd-aa50-4b23-bf1c-020770e8366d",
          "length": 92,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ceb65ccd-3625-4141-9df4-b979ab4e0226",
          "scriptId": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
          "execution": "49a157b9-348a-4664-bdd0-4639a8c3242e"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "Cannot read properties of undefined (reading 'id')",
          "checksum": "7968b7e0e6adfbc32cfd96627c083201",
          "id": "cbfa6791-207c-4bd3-ace8-1cc5c855c4e1",
          "timestamp": 1721908949831,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
          "name": "Validate user is able  to upload variants file without id",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                  "});\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "let p_info_task_id = response.data.id;\r",
                  "// Set the ID as an environment variable\r",
                  "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                  "\r",
                  "// Log the environment variable to the Postman console for verification\r",
                  "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                  "\r",
                  "let url = response.data.data[0].url;\r",
                  "\r",
                  "// Set the URL as an environment variable\r",
                  "pm.environment.set(\"file_url\", url);\r",
                  ""
                ],
                "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dc4b2fbd-aa50-4b23-bf1c-020770e8366d",
          "length": 92,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ceb65ccd-3625-4141-9df4-b979ab4e0226",
          "scriptId": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 401 but got 422",
          "stack": "AssertionError: expected response to have status code 401 but got 422\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "efe6cdb44fa79eab1fc0ed45abf1e7ca",
          "id": "6b31adeb-a5ef-4b37-85ba-2022bba13c22",
          "timestamp": 1721908956502,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
          "name": "Validate user is unable to upload variants file as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "43015ade-1274-4f31-bb9d-41c537cb9623",
          "length": 92,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "17691a08-f91a-494c-a631-10ba9125511d",
          "scriptId": "d1837d53-c8a9-4eef-a99f-908b09bec053",
          "execution": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Token is invalid or expired'",
          "stack": "AssertionError: expected undefined to deeply equal 'Token is invalid or expired'\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "c1d00c72df0e3ce27b8c1a5528457443",
          "id": "97cdccdd-f213-4a59-9bd1-5a41e55f2b99",
          "timestamp": 1721908956504,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
          "name": "Validate user is unable to upload variants file as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-variant-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
              }
            }
          ]
        },
        "parent": {
          "id": "5995ceb6-618f-405f-bf68-56292fa3a3b2",
          "name": "patient variant file upload",
          "item": [
            {
              "id": "fa56f2d3-8867-4ec4-b047-4be5c32b52f6",
              "name": "Validate user is able to upload variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d4fc6dd-3a2d-4c72-9a41-e34cc8b4ac05",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);"
                    ],
                    "_lastExecutionId": "0715a61f-c0dd-4405-8fdb-280d3346766a"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1459a657-8f50-4a15-8ced-34f8f913a2b6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "8f195b62-f678-4c7e-8b77-b9f4be9de925"
                  }
                }
              ]
            },
            {
              "id": "0d6e19fe-0b17-488a-93d4-a77bd108a58d",
              "name": "Validate user is able to upload multiple variants file successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb",
                        "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "66d43a2c-5fed-4aa2-89a3-94e94c2920bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "84cfbbb3-c787-4e34-b859-c9c2c96ab08a"
                  }
                }
              ]
            },
            {
              "id": "5836f544-7661-42fc-ab6a-114175eb749a",
              "name": "Validate user is unable to upload variants file other than vcf and tsv file type",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef27e63-6957-42e0-abc3-24c3546ab1d2"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a518bb1-1400-4f46-aa16-f7a0a980fad5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8c5c3715-52dc-4842-8e2a-1a52bcc6bb98"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a3f13684-47ab-470b-95fc-c088f64a015b",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "95243650-c095-414e-8b7e-8992b04c71a4"
                  }
                }
              ]
            },
            {
              "id": "4dad6cd1-678f-4dd9-b8da-7f3a46e7dd71",
              "name": "Validate user is able  to upload variants file without id",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": ""
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef2969c-857b-41f0-b0af-1e75dea869eb"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "64b44f9d-74ec-49a6-bccf-3fab8d6ef788",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Variant file(s) uploaded\");\r",
                      "});\r",
                      "let response = pm.response.json();\r",
                      "\r",
                      "let p_info_task_id = response.data.id;\r",
                      "// Set the ID as an environment variable\r",
                      "pm.environment.set(\"p_info_task_id\", p_info_task_id);\r",
                      "\r",
                      "// Log the environment variable to the Postman console for verification\r",
                      "console.log(\"p_info_task_id set to:\", p_info_task_id);\r",
                      "\r",
                      "let url = response.data.data[0].url;\r",
                      "\r",
                      "// Set the URL as an environment variable\r",
                      "pm.environment.set(\"file_url\", url);\r",
                      ""
                    ],
                    "_lastExecutionId": "49a157b9-348a-4664-bdd0-4639a8c3242e"
                  }
                }
              ]
            },
            {
              "id": "06fc54b1-5855-4c9f-aa4f-152d36af6136",
              "name": "Validate user is unable to upload without variants file",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "97863c5b-ca5c-49cf-9c84-db67a8a6c23b",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Only VCF and TSV files are allowed\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "9680a990-f71d-4648-9dcc-6e54226e6cb7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "072bf48c-cd0b-4ded-b9d2-8ce874c7b9f2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                      "\r",
                      "setTimeout(function() {\r",
                      "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                      "}, delay);\r",
                      ""
                    ],
                    "_lastExecutionId": "cda96b2b-d893-4017-9d91-32bfd1cba550"
                  }
                }
              ]
            },
            {
              "id": "1f37e91c-56f4-4f6d-93d4-1b4bbccca6e3",
              "name": "Validate user is unable to upload variants file as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1837d53-c8a9-4eef-a99f-908b09bec053",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
                  }
                }
              ]
            },
            {
              "id": "6b8ac2f3-ceaa-4a28-8fab-b03cbc49caa5",
              "name": "Validate user is unable to upload variants file if incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-variant-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29694-e0e4-4e40-a6d8-f35ae6de9039"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8dcb5279-1e5c-4e5e-b847-5767f3d3a998",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b90a1922-814c-485b-bc06-42203c43cfdd"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "43015ade-1274-4f31-bb9d-41c537cb9623",
          "length": 92,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "17691a08-f91a-494c-a631-10ba9125511d",
          "scriptId": "d1837d53-c8a9-4eef-a99f-908b09bec053",
          "execution": "b38a28c2-2f10-49e3-9768-72e91ffbc261"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "b2a64114afd0cb6a1a0eade1163ed051",
          "id": "f9e03c7a-8aef-42a7-a2ca-994b3d17066e",
          "timestamp": 1721908963943,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
          "name": "Validate user is able to upload medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ceeeaca6-2649-4245-80ed-5e3aaf2f2a17",
          "length": 92,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "83d8c293-9282-4abd-a142-50de5037f037",
          "scriptId": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
          "execution": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
          "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:19)",
          "checksum": "3c2ad6264ec9b32813044c0e11064cec",
          "id": "a18ae856-83ac-4ca8-8141-c0b7a63e347a",
          "timestamp": 1721908963945,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
          "name": "Validate user is able to upload medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ceeeaca6-2649-4245-80ed-5e3aaf2f2a17",
          "length": 92,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "83d8c293-9282-4abd-a142-50de5037f037",
          "scriptId": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
          "execution": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "6c8099a90382faabd3623095e9c0681d",
          "id": "ce8fde1d-82e5-4da7-a6d2-901959a92c27",
          "timestamp": 1721908964557,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
          "name": "Validate user is able to upload medical files successfully without id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "af6a9ea5-1781-45e7-8197-4b24e9d76a95",
          "length": 92,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52398fbf-24a1-482e-95a8-3e8c7f2ee8c5",
          "scriptId": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
          "execution": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
          "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:20)",
          "checksum": "6c72f7ba6a8fb62fc7f149a46fcc193e",
          "id": "6d71d3cf-9e1d-4b34-b33d-99c1f5142c98",
          "timestamp": 1721908964558,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
          "name": "Validate user is able to upload medical files successfully without id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "af6a9ea5-1781-45e7-8197-4b24e9d76a95",
          "length": 92,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52398fbf-24a1-482e-95a8-3e8c7f2ee8c5",
          "scriptId": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
          "execution": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 422",
          "stack": "AssertionError: expected response to have status code 200 but got 422\n   at Object.eval sandbox-script.js:1:21)",
          "checksum": "5f65793c28b0dc0f2b8c4b9852ab6ffa",
          "id": "22c1d693-0c34-4822-908b-1897475b9403",
          "timestamp": 1721908965174,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a1342838-4465-4670-9162-e89f648846bd",
          "name": "Validate user is able to upload multiple medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                    "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  "let responseData = pm.response.json();\r",
                  "let p_other_task_id = responseData.task_id;\r",
                  "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                ],
                "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6e48d92f-76e3-4640-bae0-c97f033e5fc5",
          "length": 92,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c5151821-57ec-4d8d-a700-b2490ce2883a",
          "scriptId": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
          "execution": "8003cb54-4478-423e-9a3c-227708e6ed88"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Other medical file(s) uploaded succes…'",
          "stack": "AssertionError: expected undefined to deeply equal 'Other medical file(s) uploaded succes…'\n   at Object.eval sandbox-script.js:2:21)",
          "checksum": "44987f21605e2f0174209337306c2616",
          "id": "9a5a6e51-765b-4640-a2f3-5f60c4bfd82b",
          "timestamp": 1721908965176,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "a1342838-4465-4670-9162-e89f648846bd",
          "name": "Validate user is able to upload multiple medical files successfully",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": [
                    "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                    "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                  ]
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                  "});\r",
                  "let responseData = pm.response.json();\r",
                  "let p_other_task_id = responseData.task_id;\r",
                  "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                ],
                "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6e48d92f-76e3-4640-bae0-c97f033e5fc5",
          "length": 92,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c5151821-57ec-4d8d-a700-b2490ce2883a",
          "scriptId": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
          "execution": "8003cb54-4478-423e-9a3c-227708e6ed88"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 400 but got 422",
          "stack": "AssertionError: expected response to have status code 400 but got 422\n   at Object.eval sandbox-script.js:1:22)",
          "checksum": "a0f28b0f1c6665680284c26b68884141",
          "id": "587c6b2a-e7bb-40e0-a92d-bc2a67015bfd",
          "timestamp": 1721908965767,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 22,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
          "name": "Validate user is unable to upload medical fileswith incorrect id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b3e69096-cd63-47b3-b805-eb885025d0b9",
          "length": 92,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6e086c71-fdd9-4af0-a067-45c8e80c641d",
          "scriptId": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
          "execution": "d525a769-ce02-403c-9d12-8af41462609d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Unknown error occurred'",
          "stack": "AssertionError: expected undefined to deeply equal 'Unknown error occurred'\n   at Object.eval sandbox-script.js:2:22)",
          "checksum": "749df53a068a808905571e6f35596719",
          "id": "ccae7dc7-60a8-4e8f-8418-a89bee99cc05",
          "timestamp": 1721908965769,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 22,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
          "name": "Validate user is unable to upload medical fileswith incorrect id",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "12345"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b3e69096-cd63-47b3-b805-eb885025d0b9",
          "length": 92,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6e086c71-fdd9-4af0-a067-45c8e80c641d",
          "scriptId": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
          "execution": "d525a769-ce02-403c-9d12-8af41462609d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected response to have status code 401 but got 422",
          "stack": "AssertionError: expected response to have status code 401 but got 422\n   at Object.eval sandbox-script.js:1:23)",
          "checksum": "a0091e47b1c6a25805ef83fec2ccfba2",
          "id": "02f062fb-94f0-481b-9980-eb3e254ea221",
          "timestamp": 1721908966453,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 23,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
          "name": "Validate user is unable to upload medical files as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a9e2822c-ff25-4879-936d-0ca18697cce8",
          "length": 92,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fa092d8a-7d81-4859-ac79-d9c51121eedc",
          "scriptId": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
          "execution": "22c42daa-2c4b-4539-9a4c-463893c7d894"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response message is Valid",
          "message": "expected undefined to deeply equal 'Token is invalid or expired'",
          "stack": "AssertionError: expected undefined to deeply equal 'Token is invalid or expired'\n   at Object.eval sandbox-script.js:2:23)",
          "checksum": "33c7bb761421c3dcf6a834f816de5b10",
          "id": "d9316b45-b786-473d-a9ce-fbd2ce0c4f7a",
          "timestamp": 1721908966454,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 23,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
          "name": "Validate user is unable to upload medical files as user is unauthorized",
          "request": {
            "url": {
              "path": [
                "patient-medical-file-upload",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                }
              ]
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
              }
            }
          ]
        },
        "parent": {
          "id": "62011b4b-e283-484f-9b8f-5bd2c14ac75f",
          "name": "patient medical file upload",
          "item": [
            {
              "id": "4357a2f4-757b-46ac-a40b-9239ca9b4e09",
              "name": "Validate user is able to upload medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e81bb9e2-d788-4a79-95bd-a71f9c498fea",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "2bac199a-daab-4ed3-9797-3819d89dfd4f"
                  }
                }
              ]
            },
            {
              "id": "0e8549c7-5681-4f8a-a57e-1343d8698920",
              "name": "Validate user is able to upload medical files successfully without id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "faecb0b7-14f7-41d3-8e66-68f17005b80e",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "4a0538b1-2eb8-4c03-938d-6a010b8f9d51"
                  }
                }
              ]
            },
            {
              "id": "a1342838-4465-4670-9162-e89f648846bd",
              "name": "Validate user is able to upload multiple medical files successfully",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": [
                        "postman-cloud:///1ef2d10f-13bc-4ed0-a541-0eb267abd65b",
                        "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                      ]
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "685ca610-0cd2-4d8f-906c-7d40f51a4767",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Other medical file(s) uploaded successfully\");\r",
                      "});\r",
                      "let responseData = pm.response.json();\r",
                      "let p_other_task_id = responseData.task_id;\r",
                      "pm.environment.set(\"p_other_task_id\", p_other_task_id);"
                    ],
                    "_lastExecutionId": "8003cb54-4478-423e-9a3c-227708e6ed88"
                  }
                }
              ]
            },
            {
              "id": "a00052e6-a527-4f73-98ee-fbba0e49a2ad",
              "name": "Validate user is unable to upload medical fileswith incorrect id",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12345"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d54628e-1a91-4d2f-a210-66a5d5fdec3f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "d525a769-ce02-403c-9d12-8af41462609d"
                  }
                }
              ]
            },
            {
              "id": "7e95f0e8-975c-4080-9515-d07e31ba3848",
              "name": "Validate user is unable to upload medical files as user is unauthorized",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": "postman-cloud:///1ef29849-dbf3-4330-8528-6fe16f429096"
                    }
                  ]
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYzExNmVjZS0wYjVlLTRkNGMtOGFjZC03YmM3MjJmZWQxZTciLCJldmVudF9pZCI6IjQyYzA5MzljLWNhOWUtNDAxMS05YjA1LWY4N2I5ZTBhMjk0NSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgzNDk1MzYsImV4cCI6MTcxODM1MzEzNiwiaWF0IjoxNzE4MzQ5NTM2LCJqdGkiOiIzMzhmN2NmMS1mMWM4LTQ3N2YtODMwNy1kNjU1Mjg3Y2Q4OTEiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.Dbunj-9QMgK2LkYk-xnhHFhbunWENiNOa5lEKK8VNyjBo-QfOTtKSDU8dy3LhnMR0hGJKm_X_NCmIIaYBd4yPIIm7QLtgEvSkuy2SIBcRnp4ibJ76ijf96yjk0-2FYuje36ZlJieAUiwq7AxIO1smYnIJbdx1xVisWOJ2P9yf2cuR9_rcd2wr5FIxl1N47jB6Gpp4cnnAG8Sd1tnwiEur4lJGBuj-6zMD5xzIn-Rxs5m_7qNbK5FBQhSPsLuSqS9NzkbcX-1CGlpLihQWeMdFNAVYKaVYc1gE3_qahDq-9b1oA03HM-Xcvvcg8WbcvX6yXg8dVeduBWNkugFuBy0hA",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "22c42daa-2c4b-4539-9a4c-463893c7d894"
                  }
                }
              ]
            },
            {
              "id": "1667db83-f14b-40b9-b8bf-ae4e593d1b87",
              "name": "Validate user is unable to upload medical files as incorrect CRUD operation is used",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "508ec495-f7c1-4c93-a1c8-acd68e9da659",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a960174d-2bad-4bc0-a73c-8286240f0166"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a9e2822c-ff25-4879-936d-0ca18697cce8",
          "length": 92,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fa092d8a-7d81-4859-ac79-d9c51121eedc",
          "scriptId": "a0e9afc2-a6d5-4a85-8cf6-b6255597462d",
          "execution": "22c42daa-2c4b-4539-9a4c-463893c7d894"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response has all required fields",
          "message": "expected { status: 'error', …(1) } to have property 'data'",
          "stack": "AssertionError: expected { status: 'error', …(1) } to have property 'data'\n   at Object.eval sandbox-script.js:1:25)",
          "checksum": "1a9436db3717eaf0cfb5f483f746ab26",
          "id": "e53c53e8-2052-4e19-b6dd-12cd3de72449",
          "timestamp": 1721908968498,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 25,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
          "name": "Validate user is able to check status of task successfully for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "516be162-26f0-439b-b903-e86fbb11ee75",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "41a32442-3894-4560-89ae-120df3e2f65e"
              }
            }
          ]
        },
        "parent": {
          "id": "e90d9720-ba83-4688-aacd-d70668cc07da",
          "name": "check task status",
          "item": [
            {
              "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
              "name": "Validate user is able to check status of task successfully for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "516be162-26f0-439b-b903-e86fbb11ee75",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "41a32442-3894-4560-89ae-120df3e2f65e"
                  }
                }
              ]
            },
            {
              "id": "b369d374-0cb8-4cf3-92c8-06701cf103cb",
              "name": "Validate user is able to check status of task successfully for Patient Variant File",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "814dca3a-94c2-41aa-bd51-9d2f5becf165",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3668300c-dd10-4b4e-85a9-d0f027ca2a78"
                  }
                }
              ]
            },
            {
              "id": "bb090519-b4fa-4a4a-bf61-16f47448c2de",
              "name": "Validate user is unable to check status as task_id is incorrect.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b4dbe240-bbaf-483a-a71f-e26368ea9679",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a0c9def1-ce50-4b8a-869b-dd469077bd87"
                  }
                }
              ]
            },
            {
              "id": "a29dadf3-69c1-4240-b6fd-1e202d105b14",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "da4e3f39-7820-47e0-b764-2ac7b7bc40f8",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "ea7e8d25-5da4-4313-8519-8a8956cd9420"
                  }
                }
              ]
            },
            {
              "id": "a89bea02-1765-414c-ba42-c2c3cf2470c4",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cb30adc3-9836-4d57-af1f-f9ff3fae28e9",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e9a44ebb-03ec-45a4-b9cd-257accba15b3"
                  }
                }
              ]
            },
            {
              "id": "9ef9a257-949e-4a17-b59a-f04787be0699",
              "name": "Validate user is unable to check status as the token is invalid.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f443cc5-00b8-4525-825e-3b060d99b65d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "ff1559b9-ac3e-40bc-b979-6f8bf3d9e6bf"
                  }
                }
              ]
            },
            {
              "id": "5b67c71b-ddb0-460e-8645-994c73d6a1b1",
              "name": "Validate user is unable check status as incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f89f2fcd-d3d6-40c2-b9b8-3bdfa2388b57",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f7da108-d716-40b9-8495-a7b1ea4a0305"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4842b189-c973-4200-8c3e-2876c9a727fa",
          "length": 92,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e42a874a-946c-419f-931b-b094e2d423ec",
          "scriptId": "516be162-26f0-439b-b903-e86fbb11ee75",
          "execution": "41a32442-3894-4560-89ae-120df3e2f65e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Status Code is valid",
          "message": "expected response to have status code 200 but got 400",
          "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:2:25)",
          "checksum": "d75c57a3193c7a5384963e27f30f331e",
          "id": "9e15363a-5ae5-4c87-8127-a402c54f16d2",
          "timestamp": 1721908968500,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 25,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
          "name": "Validate user is able to check status of task successfully for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "516be162-26f0-439b-b903-e86fbb11ee75",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "41a32442-3894-4560-89ae-120df3e2f65e"
              }
            }
          ]
        },
        "parent": {
          "id": "e90d9720-ba83-4688-aacd-d70668cc07da",
          "name": "check task status",
          "item": [
            {
              "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
              "name": "Validate user is able to check status of task successfully for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "516be162-26f0-439b-b903-e86fbb11ee75",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "41a32442-3894-4560-89ae-120df3e2f65e"
                  }
                }
              ]
            },
            {
              "id": "b369d374-0cb8-4cf3-92c8-06701cf103cb",
              "name": "Validate user is able to check status of task successfully for Patient Variant File",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "814dca3a-94c2-41aa-bd51-9d2f5becf165",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3668300c-dd10-4b4e-85a9-d0f027ca2a78"
                  }
                }
              ]
            },
            {
              "id": "bb090519-b4fa-4a4a-bf61-16f47448c2de",
              "name": "Validate user is unable to check status as task_id is incorrect.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b4dbe240-bbaf-483a-a71f-e26368ea9679",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a0c9def1-ce50-4b8a-869b-dd469077bd87"
                  }
                }
              ]
            },
            {
              "id": "a29dadf3-69c1-4240-b6fd-1e202d105b14",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "da4e3f39-7820-47e0-b764-2ac7b7bc40f8",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "ea7e8d25-5da4-4313-8519-8a8956cd9420"
                  }
                }
              ]
            },
            {
              "id": "a89bea02-1765-414c-ba42-c2c3cf2470c4",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cb30adc3-9836-4d57-af1f-f9ff3fae28e9",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e9a44ebb-03ec-45a4-b9cd-257accba15b3"
                  }
                }
              ]
            },
            {
              "id": "9ef9a257-949e-4a17-b59a-f04787be0699",
              "name": "Validate user is unable to check status as the token is invalid.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f443cc5-00b8-4525-825e-3b060d99b65d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "ff1559b9-ac3e-40bc-b979-6f8bf3d9e6bf"
                  }
                }
              ]
            },
            {
              "id": "5b67c71b-ddb0-460e-8645-994c73d6a1b1",
              "name": "Validate user is unable check status as incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f89f2fcd-d3d6-40c2-b9b8-3bdfa2388b57",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f7da108-d716-40b9-8495-a7b1ea4a0305"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4842b189-c973-4200-8c3e-2876c9a727fa",
          "length": 92,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e42a874a-946c-419f-931b-b094e2d423ec",
          "scriptId": "516be162-26f0-439b-b903-e86fbb11ee75",
          "execution": "41a32442-3894-4560-89ae-120df3e2f65e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response message is Valid",
          "message": "expected 'Task details could not be retrieved' to deeply equal 'Task details retrieved successfully'",
          "stack": "AssertionError: expected 'Task details could not be retrieved' to deeply equal 'Task details retrieved successfully'\n   at Object.eval sandbox-script.js:3:25)",
          "checksum": "2dd41ab584031d3d18f3b945ad4f24a6",
          "id": "24eac5a8-6b82-4459-bd81-f0b0b2c5e329",
          "timestamp": 1721908968501,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 25,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
          "name": "Validate user is able to check status of task successfully for Patient info",
          "request": {
            "url": {
              "path": [
                "check-task-status",
                ""
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "516be162-26f0-439b-b903-e86fbb11ee75",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "    pm.expect(response).to.have.property(\"data\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "41a32442-3894-4560-89ae-120df3e2f65e"
              }
            }
          ]
        },
        "parent": {
          "id": "e90d9720-ba83-4688-aacd-d70668cc07da",
          "name": "check task status",
          "item": [
            {
              "id": "0e2b1f95-293d-4ecf-8398-321a48dc0c10",
              "name": "Validate user is able to check status of task successfully for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"3ee04750-6438-409f-9e7f-2f0798a799e5\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "516be162-26f0-439b-b903-e86fbb11ee75",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "41a32442-3894-4560-89ae-120df3e2f65e"
                  }
                }
              ]
            },
            {
              "id": "b369d374-0cb8-4cf3-92c8-06701cf103cb",
              "name": "Validate user is able to check status of task successfully for Patient Variant File",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"{{p_variant_task_id}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "814dca3a-94c2-41aa-bd51-9d2f5becf165",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "let response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Response has all required fields\", ()=> {\r",
                      "    pm.expect(response).to.have.property(\"status\");\r",
                      "    pm.expect(response).to.have.property(\"message\");\r",
                      "    pm.expect(response).to.have.property(\"data\");\r",
                      "});\r",
                      "\r",
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details retrieved successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "3668300c-dd10-4b4e-85a9-d0f027ca2a78"
                  }
                }
              ]
            },
            {
              "id": "bb090519-b4fa-4a4a-bf61-16f47448c2de",
              "name": "Validate user is unable to check status as task_id is incorrect.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"129234\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b4dbe240-bbaf-483a-a71f-e26368ea9679",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Task details could not be retrieved\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "a0c9def1-ce50-4b8a-869b-dd469077bd87"
                  }
                }
              ]
            },
            {
              "id": "a29dadf3-69c1-4240-b6fd-1e202d105b14",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient info",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "da4e3f39-7820-47e0-b764-2ac7b7bc40f8",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "ea7e8d25-5da4-4313-8519-8a8956cd9420"
                  }
                }
              ]
            },
            {
              "id": "a89bea02-1765-414c-ba42-c2c3cf2470c4",
              "name": "Validate user is unable to check status as task_id is missing in the body for Patient variant file",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cb30adc3-9836-4d57-af1f-f9ff3fae28e9",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "e9a44ebb-03ec-45a4-b9cd-257accba15b3"
                  }
                }
              ]
            },
            {
              "id": "9ef9a257-949e-4a17-b59a-f04787be0699",
              "name": "Validate user is unable to check status as the token is invalid.",
              "request": {
                "url": {
                  "path": [
                    "check-task-status",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2MjFiMDIxZS04NWU2LTQzNGQtOTVhYS02MGRlMjFhODAyNWIiLCJldmVudF9pZCI6ImM5OWQxN2VjLTYwNDktNDZiMC1iNmNjLTY3ODhkYTlmZTY4NCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTgwMDI5NTQsImV4cCI6MTcxODAwNjU1NCwiaWF0IjoxNzE4MDAyOTU0LCJqdGkiOiIzYWI0MzRkOC03ODdjLTQyZmUtYjRmYi0wZjBkOTU2MzVjNjMiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.QSsG2TYRzRFqlRyiD5e98pFQ0LT_PHMCatAFXmX4vFGVKC_CgImSc6__e0L30N82QT1npJsuAf6AJweC2JrIb_7SWQ-CUav-FDuZ8wbbRjan8SjakNVZtfSOsgR39P5Ee2Axwh2-qUiJ7KpqghMWh_jAD8UB_tgVxT0OT947CkggxomVx8H4p22iXmJns2e27DkAkBk_XE4cxg9XW63lXqZ9rj_OA2ypKehPSFpDmCZhLtzOkIYM49fv3q0s4LKgX0rlsM6szLiWn14nWW_loBZUeCVPE0f2UNVoPIp2SJvLgkCJpuPWNwvs6flfdDDodVV3RPeTWOT",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f443cc5-00b8-4525-825e-3b060d99b65d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "ff1559b9-ac3e-40bc-b979-6f8bf3d9e6bf"
                  }
                }
              ]
            },
            {
              "id": "5b67c71b-ddb0-460e-8645-994c73d6a1b1",
              "name": "Validate user is unable check status as incorrect CRUD operation is used.",
              "request": {
                "url": {
                  "path": [
                    "patient-medical-file-upload",
                    ""
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"task_id\": \"qwer-tyui-asdf-ghjk\"\r\n}"
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f89f2fcd-d3d6-40c2-b9b8-3bdfa2388b57",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid',()=>{\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f7da108-d716-40b9-8495-a7b1ea4a0305"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4842b189-c973-4200-8c3e-2876c9a727fa",
          "length": 92,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e42a874a-946c-419f-931b-b094e2d423ec",
          "scriptId": "516be162-26f0-439b-b903-e86fbb11ee75",
          "execution": "41a32442-3894-4560-89ae-120df3e2f65e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Status message is Valid",
          "message": "expected 'Error while fetching data' to deeply equal 'Error while removing files'",
          "stack": "AssertionError: expected 'Error while fetching data' to deeply equal 'Error while removing files'\n   at Object.eval sandbox-script.js:2:83)",
          "checksum": "5e0815517cd40e70b06774466022089c",
          "id": "6897b579-c4f8-428c-a0a0-28a6a243d8e2",
          "timestamp": 1721909019858,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 83,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "1c2a541a-eebb-4510-ab3e-31dc58385917",
          "name": "Successfully could not export files with incorrect id",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "1234567890"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f6a03e42-afa0-4f3a-8a7c-a3787b208aad",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                  "});"
                ],
                "_lastExecutionId": "04c546cb-c76e-4b67-a09c-d5297ba6bf66"
              }
            }
          ]
        },
        "parent": {
          "id": "44951c83-0779-4664-a45f-418f70da163d",
          "name": "Export Files",
          "item": [
            {
              "id": "373bfac8-05b2-48ea-ac8a-27a694735040",
              "name": "Successfully export files",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0e0836c4-d71d-4a97-a805-a33eee9058a5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "dd52bf90-b52a-417c-8fce-892a625dce70"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7d497db1-6e3c-4a5d-a5ac-67254d75c591",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "be0bbbb4-6113-4399-ab4f-89a2a3ea1b1d"
                  }
                }
              ]
            },
            {
              "id": "1c2a541a-eebb-4510-ab3e-31dc58385917",
              "name": "Successfully could not export files with incorrect id",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "1234567890"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f6a03e42-afa0-4f3a-8a7c-a3787b208aad",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "04c546cb-c76e-4b67-a09c-d5297ba6bf66"
                  }
                }
              ]
            },
            {
              "id": "c8f7352b-100f-4c6b-95ab-7d3391422327",
              "name": "Could not export files  due to missing authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "199daa44-9aba-4c9b-8320-cee4249bec84",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "53aee542-4886-40ab-8c73-9d3ab538d793"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "53791a3d-51cf-4a31-b5da-13fea0d702b8",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "372faa2e-33ec-4390-a55b-66541068af94"
                  }
                }
              ]
            },
            {
              "id": "a889b806-50ba-459a-9a75-460788e2d136",
              "name": "Could not export files  due to invalid  authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
                  }
                }
              ]
            },
            {
              "id": "9d081f49-9055-46ae-9273-2cd86a1fac67",
              "name": "Could not export files  due to invalid CRUD operation",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "72740b62-f749-4969-a351-0128645fc7a2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "c48cd0af-ce89-4bb6-9f92-af494e44b3b2"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c48577f0-eaeb-4d9e-be9e-5c019d203b2b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                  "\r",
                  "setTimeout(function() {\r",
                  "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                  "}, delay);\r",
                  ""
                ],
                "_lastExecutionId": "c53585f2-6137-4f74-9afe-14d48d66301c"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "60d62679-a7c6-45b5-9197-efdc951beb77",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d0306a62-2fe0-4330-8cfe-fc355e8f417a"
              }
            }
          ]
        },
        "cursor": {
          "ref": "fd25ca49-520f-4d0a-ae25-5ef4a650fa6f",
          "length": 92,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a928ec3c-d76b-4b32-81ab-c78c477ef0a9",
          "scriptId": "f6a03e42-afa0-4f3a-8a7c-a3787b208aad",
          "execution": "04c546cb-c76e-4b67-a09c-d5297ba6bf66"
        }
      },
      {
        "error": {
          "code": "ECONNRESET",
          "name": "Error",
          "message": "socket hang up",
          "stack": "Error: socket hang up\n    at connResetException (node:internal/errors:787:14)\n    at Socket.socketOnEnd (node:_http_client:519:23)\n    at Socket.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1589:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
          "checksum": "fd48e961c4288f9c22468dec3441e3f3",
          "id": "0bfba224-20b0-4d34-9507-54eb2dd1be8f",
          "timestamp": 1721909031554,
          "stacktrace": [
            {
              "fileName": "node:internal/errors",
              "lineNumber": 787,
              "functionName": "connResetException",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "node:_http_client",
              "lineNumber": 519,
              "functionName": "Socket.socketOnEnd",
              "typeName": "Socket",
              "methodName": "socketOnEnd",
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 526,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 35,
              "native": false
            },
            {
              "fileName": "node:internal/streams/readable",
              "lineNumber": 1589,
              "functionName": "endReadableNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 12,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 82,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "a889b806-50ba-459a-9a75-460788e2d136",
          "name": "Could not export files  due to invalid  authorization",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
              }
            }
          ]
        },
        "parent": {
          "id": "44951c83-0779-4664-a45f-418f70da163d",
          "name": "Export Files",
          "item": [
            {
              "id": "373bfac8-05b2-48ea-ac8a-27a694735040",
              "name": "Successfully export files",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0e0836c4-d71d-4a97-a805-a33eee9058a5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "dd52bf90-b52a-417c-8fce-892a625dce70"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7d497db1-6e3c-4a5d-a5ac-67254d75c591",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "be0bbbb4-6113-4399-ab4f-89a2a3ea1b1d"
                  }
                }
              ]
            },
            {
              "id": "1c2a541a-eebb-4510-ab3e-31dc58385917",
              "name": "Successfully could not export files with incorrect id",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "1234567890"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f6a03e42-afa0-4f3a-8a7c-a3787b208aad",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "04c546cb-c76e-4b67-a09c-d5297ba6bf66"
                  }
                }
              ]
            },
            {
              "id": "c8f7352b-100f-4c6b-95ab-7d3391422327",
              "name": "Could not export files  due to missing authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "199daa44-9aba-4c9b-8320-cee4249bec84",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "53aee542-4886-40ab-8c73-9d3ab538d793"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "53791a3d-51cf-4a31-b5da-13fea0d702b8",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "372faa2e-33ec-4390-a55b-66541068af94"
                  }
                }
              ]
            },
            {
              "id": "a889b806-50ba-459a-9a75-460788e2d136",
              "name": "Could not export files  due to invalid  authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
                  }
                }
              ]
            },
            {
              "id": "9d081f49-9055-46ae-9273-2cd86a1fac67",
              "name": "Could not export files  due to invalid CRUD operation",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "72740b62-f749-4969-a351-0128645fc7a2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "c48cd0af-ce89-4bb6-9f92-af494e44b3b2"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c48577f0-eaeb-4d9e-be9e-5c019d203b2b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                  "\r",
                  "setTimeout(function() {\r",
                  "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                  "}, delay);\r",
                  ""
                ],
                "_lastExecutionId": "c53585f2-6137-4f74-9afe-14d48d66301c"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "60d62679-a7c6-45b5-9197-efdc951beb77",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d0306a62-2fe0-4330-8cfe-fc355e8f417a"
              }
            }
          ]
        },
        "cursor": {
          "ref": "613343c6-13f9-4991-83da-e13f0046a678",
          "length": 92,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f747e224-78b9-44a6-83c1-ff62a32bfb60"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status Code is valid",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:85)",
          "checksum": "d45ee35930c1c1f8c3bc13fdb536e71e",
          "id": "a4bd1344-4a23-426f-9b2a-aee689b216b9",
          "timestamp": 1721909031612,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 85,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a889b806-50ba-459a-9a75-460788e2d136",
          "name": "Could not export files  due to invalid  authorization",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
              }
            }
          ]
        },
        "parent": {
          "id": "44951c83-0779-4664-a45f-418f70da163d",
          "name": "Export Files",
          "item": [
            {
              "id": "373bfac8-05b2-48ea-ac8a-27a694735040",
              "name": "Successfully export files",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0e0836c4-d71d-4a97-a805-a33eee9058a5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "dd52bf90-b52a-417c-8fce-892a625dce70"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7d497db1-6e3c-4a5d-a5ac-67254d75c591",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "be0bbbb4-6113-4399-ab4f-89a2a3ea1b1d"
                  }
                }
              ]
            },
            {
              "id": "1c2a541a-eebb-4510-ab3e-31dc58385917",
              "name": "Successfully could not export files with incorrect id",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "1234567890"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f6a03e42-afa0-4f3a-8a7c-a3787b208aad",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "04c546cb-c76e-4b67-a09c-d5297ba6bf66"
                  }
                }
              ]
            },
            {
              "id": "c8f7352b-100f-4c6b-95ab-7d3391422327",
              "name": "Could not export files  due to missing authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "199daa44-9aba-4c9b-8320-cee4249bec84",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "53aee542-4886-40ab-8c73-9d3ab538d793"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "53791a3d-51cf-4a31-b5da-13fea0d702b8",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "372faa2e-33ec-4390-a55b-66541068af94"
                  }
                }
              ]
            },
            {
              "id": "a889b806-50ba-459a-9a75-460788e2d136",
              "name": "Could not export files  due to invalid  authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
                  }
                }
              ]
            },
            {
              "id": "9d081f49-9055-46ae-9273-2cd86a1fac67",
              "name": "Could not export files  due to invalid CRUD operation",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "72740b62-f749-4969-a351-0128645fc7a2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "c48cd0af-ce89-4bb6-9f92-af494e44b3b2"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c48577f0-eaeb-4d9e-be9e-5c019d203b2b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                  "\r",
                  "setTimeout(function() {\r",
                  "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                  "}, delay);\r",
                  ""
                ],
                "_lastExecutionId": "c53585f2-6137-4f74-9afe-14d48d66301c"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "60d62679-a7c6-45b5-9197-efdc951beb77",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d0306a62-2fe0-4330-8cfe-fc355e8f417a"
              }
            }
          ]
        },
        "cursor": {
          "ref": "613343c6-13f9-4991-83da-e13f0046a678",
          "length": 92,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f747e224-78b9-44a6-83c1-ff62a32bfb60",
          "scriptId": "c0c73248-092a-469c-bb03-0c9270f4ff76",
          "execution": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Status message is Valid",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:85)",
          "checksum": "7e97095b589bc33d384e77a6c8f8b6e5",
          "id": "9405ddbb-8fa4-4d47-97e6-90f1438646a9",
          "timestamp": 1721909031613,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 85,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "a889b806-50ba-459a-9a75-460788e2d136",
          "name": "Could not export files  due to invalid  authorization",
          "request": {
            "url": {
              "path": [
                "export-files"
              ],
              "host": [
                "{{baseUrl_patient_service}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{p_info_task_id}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
              }
            }
          ]
        },
        "parent": {
          "id": "44951c83-0779-4664-a45f-418f70da163d",
          "name": "Export Files",
          "item": [
            {
              "id": "373bfac8-05b2-48ea-ac8a-27a694735040",
              "name": "Successfully export files",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0e0836c4-d71d-4a97-a805-a33eee9058a5",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Successfully generated link\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "dd52bf90-b52a-417c-8fce-892a625dce70"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7d497db1-6e3c-4a5d-a5ac-67254d75c591",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "be0bbbb4-6113-4399-ab4f-89a2a3ea1b1d"
                  }
                }
              ]
            },
            {
              "id": "1c2a541a-eebb-4510-ab3e-31dc58385917",
              "name": "Successfully could not export files with incorrect id",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "1234567890"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f6a03e42-afa0-4f3a-8a7c-a3787b208aad",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Error while removing files\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "04c546cb-c76e-4b67-a09c-d5297ba6bf66"
                  }
                }
              ]
            },
            {
              "id": "c8f7352b-100f-4c6b-95ab-7d3391422327",
              "name": "Could not export files  due to missing authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "199daa44-9aba-4c9b-8320-cee4249bec84",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Authorization header is missing\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "53aee542-4886-40ab-8c73-9d3ab538d793"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "53791a3d-51cf-4a31-b5da-13fea0d702b8",
                    "type": "text/javascript",
                    "exec": [],
                    "_lastExecutionId": "372faa2e-33ec-4390-a55b-66541068af94"
                  }
                }
              ]
            },
            {
              "id": "a889b806-50ba-459a-9a75-460788e2d136",
              "name": "Could not export files  due to invalid  authorization",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NGU4NDQ4OC0yMDAxLTcwODEtNWVmZi03ODAyNjIyNzVmMTciLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiI2ZmI2NjZmMy1iNmFlLTQ5ZmQtYmVhNC05MzhkMGQzMTgwMGEiLCJldmVudF9pZCI6ImVmZDkxNjQxLTlhNmItNDk2Zi1hOGNlLTliY2E4NGNiMDc1ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTkzODM0MTcsImV4cCI6MTcxOTM4NzAxNywiaWF0IjoxNzE5MzgzNDE3LCJqdGkiOiJmZWRlNTRhOS1jY2M4LTQzMjgtYmY3Ni1hMDQ5ODA1OGZhNjAiLCJ1c2VybmFtZSI6Ijc0ZTg0NDg4LTIwMDEtNzA4MS01ZWZmLTc4MDI2MjI3NWYxNyJ9.fDPh_Fkq0MiVpcaboE_aIndnhpnGsbA4Lax7vKLt4MQX3AKKfEG-L0kJj2lxRH9LBsR0vmlreBn33bWm1wUJTnkFZiGwLnLSYii4-J3cK5L2a8JX9rdgAfblzQK4_bxZnHjJXnnRudvKzYFrPUTdAUTGYigPRy4MYIsKeYkvyvpB_YeTma1E5tIaJBQdl2ck3w_WZ8Iy1Jw6m8-HzQe47BgqiKfKKxPzrp7Jh68QMGKLPDiuV9tQtOdJp2IpVfmQNMvcj7rEYyKShwN1O3fP0EFTQiFTNaKenE1ElmK-ihQuOFe02QdTe_bv9WAA8N21olruiG5AP_fMeFP7TU",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0c73248-092a-469c-bb03-0c9270f4ff76",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
                  }
                }
              ]
            },
            {
              "id": "9d081f49-9055-46ae-9273-2cd86a1fac67",
              "name": "Could not export files  due to invalid CRUD operation",
              "request": {
                "url": {
                  "path": [
                    "export-files"
                  ],
                  "host": [
                    "{{baseUrl_patient_service}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{p_info_task_id}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bearer_token}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "72740b62-f749-4969-a351-0128645fc7a2",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test('Status Code is valid', () => {\r",
                      "    pm.response.to.have.status(405);\r",
                      "});\r",
                      "pm.test('Status message is Valid', ()=>{\r",
                      "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "c48cd0af-ce89-4bb6-9f92-af494e44b3b2"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c48577f0-eaeb-4d9e-be9e-5c019d203b2b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const delay = 5000; // Delay time in milliseconds (e.g., 5000ms = 5 seconds)\r",
                  "\r",
                  "setTimeout(function() {\r",
                  "    console.log(`Delaying request by ${delay / 1000} seconds`);\r",
                  "}, delay);\r",
                  ""
                ],
                "_lastExecutionId": "c53585f2-6137-4f74-9afe-14d48d66301c"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "60d62679-a7c6-45b5-9197-efdc951beb77",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d0306a62-2fe0-4330-8cfe-fc355e8f417a"
              }
            }
          ]
        },
        "cursor": {
          "ref": "613343c6-13f9-4991-83da-e13f0046a678",
          "length": 92,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f747e224-78b9-44a6-83c1-ff62a32bfb60",
          "scriptId": "c0c73248-092a-469c-bb03-0c9270f4ff76",
          "execution": "247154f2-1ae8-45c0-9911-3c4ddf61d2b1"
        }
      }
    ],
    "error": null
  }
}