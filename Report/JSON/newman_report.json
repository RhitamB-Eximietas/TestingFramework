{
  "collection": {
    "_": {
      "postman_id": "044a7ef3-6e61-45c7-bb48-4490384e51a6",
      "exporter_id": "33071978",
      "collection_link": "https://planetary-moon-946240.postman.co/workspace/Team-Workspace~b71c68f9-be16-4953-8b0f-b19e310fc6ac/collection/33423351-044a7ef3-6e61-45c7-bb48-4490384e51a6?action=share&source=collection_link&creator=33071978"
    },
    "item": [
      {
        "id": "e195ffd6-40ac-4e87-9367-07bc5242d373",
        "name": "User Management",
        "item": [
          {
            "id": "a692e696-f9f7-4379-88e0-1c85d7e73465",
            "name": "signup",
            "item": [
              {
                "id": "54850b2d-e804-4233-a422-58f044a1fbd5",
                "name": "Validate New User should be able to  register to OncoConnect",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"{{temporary_email}}\",\n  \"password\": \"Abc@1234\",\n  \"first_name\": \"TestABC\",\n  \"last_name\": \"Xyz\"    \n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "0dc26d07-cab2-438f-af35-dbc5d66c586f",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "1e8e0086-9560-486c-8082-fa4dec138bb7",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "91067b04-cd98-47d1-a7e9-b9bc03db3d76",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "9947f09b-ec14-402e-824d-3bf601878f53",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "997c5cfe-28aa-43b9-858b-b95c0b17b94e",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(201);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Sign up successful! Please confirm your account.\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "3f4a2764-6982-4563-b183-7e5b48eccb11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afd6165f-5333-4fdf-ba72-3d7917b2eeff",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "// Generate a unique YupMail email address\r",
                        "let uniqueNumber = Math.floor(Math.random() * 1000000);\r",
                        "let temporary_email = `testuser${uniqueNumber}@yopmail.com`;\r",
                        "\r",
                        "// Save the unique email address to an environment variable\r",
                        "pm.environment.set(\"temporary_email\", temporary_email);\r",
                        "\r",
                        "// Optionally, log the unique email to the console for debugging\r",
                        "console.log(\"Generated Email: \", temporary_email);\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "4498aa14-d472-4a97-887f-b057282c8b88"
                    }
                  }
                ]
              },
              {
                "id": "32b4c321-acd2-46ea-984e-6b1e3a385d63",
                "name": "Validate New User should not be able to  register to OncoConnect with password not long enough",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "a2d841fb-86f7-4a29-b833-ee5039eb6a94",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "4129ea30-7124-48f8-b53c-e567f5b95160",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "3ee3ef0c-7902-4bb9-8689-e22f8c7bbf34",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "c778c61b-2296-453c-9e31-3f89aacb74e0",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e728098d-9ca6-4850-a490-06dce094d5fd",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\",() =>{\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                        "});\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "6db58e93-a795-474a-a42a-e8fc0bf02352"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e250dc70-3ef3-4332-bbe8-77bfbd851138",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c18a91e2-4045-4442-b2ed-dc3b7dc54301"
                    }
                  }
                ]
              },
              {
                "id": "b43ee52c-7e1b-449b-9b45-27bb9510fe03",
                "name": "Validate New User should not be able to  register to OncoConnect with password missing numeric numbers",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "84f80f8b-b048-4954-a38d-16afbdc3dacf",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "c8befc92-67dc-4e52-a9f2-c6f153070931",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "7e8bdbb7-b330-4bf5-a6be-006ae2184ac2",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "d7a9fbec-9a4a-4177-a882-29999e039062",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5d65362-ae13-4535-94a4-e347010b962c",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "\r",
                        "pm.test('Error message is valid',()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "c3c95abc-0f4d-42bc-932b-ec693f3c3a36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eb45404-3ad9-4c4d-805c-21666a43461e",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e474e0b-ed36-441f-966a-b658ed299ec5"
                    }
                  }
                ]
              },
              {
                "id": "08891eec-08ee-412f-9cf0-95a49cc9ff61",
                "name": "Validate New User should not be able to  register to OncoConnect with password missing special characters",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "e9e2466f-423c-4d27-8b3a-d0b61ca8886f",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "2e41ac59-5bee-4f5c-afe2-10e68bd2a124",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "8db8fbd7-2acc-4432-af1a-99e235ebb118",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "0bb7623e-6f5f-4212-87e4-4b08704d53aa",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5799c933-3cf2-4b01-b736-186d2e0c6f4d",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "\r",
                        "pm.test('Error message is valid',()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "9915549a-f6bb-4500-bb21-e659eb1076e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb9cf730-e4d3-4f58-b146-b666f0cb93a9",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26a5516d-3002-4611-b3fc-112d504708aa"
                    }
                  }
                ]
              },
              {
                "id": "9d398dd6-676e-4edc-9105-a2723629f4bb",
                "name": "Validate New User should not be able to  register to OncoConnect with password missing lowercase characters",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"MADHU\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "5db80bee-f9fc-4b79-896f-88cdb42a0cb0",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "5e0a3487-939e-4891-a7f6-b73486d9c975",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "29c5decc-b4e1-4082-9dbb-f7efd112eb62",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "e273ba08-2bb1-48db-8299-6dc57f6839ec",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f77ed268-6199-41ec-9922-8bfd4229f301",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\",()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Error message is valid',()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "032de219-89e1-4993-bca3-8f7eb631365e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18336f93-bee6-4e55-9f8b-6acb3c62d88c",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "800c5de3-7d73-4722-9631-ba7c0e2fb416"
                    }
                  }
                ]
              },
              {
                "id": "51d3f575-a422-4997-90ba-c1e5a54e8e38",
                "name": "Validate New User should not be able to  register to OncoConnect with password missing uppercase characters",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"qwerty@123\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "e4338434-fc3b-4545-983b-44bece86c1bd",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "9817c8ee-1cb7-4db0-86aa-d2e7d30d14c3",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "7fc06314-f429-4c0a-80a6-670643ebaeb6",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "1bd02301-4837-4e8c-a5aa-154664fc3127",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "865a5a4b-b1c4-4080-9e90-91846953a487",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\",()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "\r",
                        "pm.test('Error message is valid',()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "87e2c7cd-521d-4f40-b921-8766741745dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1638f23f-b1ba-4549-93e2-44b6424990d3",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8de544c-4252-4e24-9708-7537d6b90205"
                    }
                  }
                ]
              },
              {
                "id": "79b8f593-a3b5-4a50-8500-0c2b8c629d20",
                "name": "Validate New User should not be able to  register to OncoConnect with invalid data",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Qwerty@123\",\n  \"first_name\": \"25\",\n  \"last_name\": \"\"    \n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "33430daa-d611-4472-936d-69f5c3131116",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "a8c5c24b-c2f2-4b7b-a928-88654e1e1afd",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "23185519-d13a-4105-9e2a-272bc3fcc613",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "3c0c04f7-c606-48cb-84ec-42c45f9ea3e4",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e1e6655-cd4d-43f9-8277-74102277d5c7",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\",()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Error message is valid',()=>{\r",
                        "    pm.expect(pm.response.json().message ).to.eql(\"Invalid name\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "4d08e84c-fd03-4f13-8e4c-a727764e6f0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dd5992b-1cd3-4a85-9318-facefd86a3b1",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82dcb5b9-2912-42c4-81e2-3b077e24ec62"
                    }
                  }
                ]
              },
              {
                "id": "6d34f9c1-9acc-46cd-b50e-f80fe9e4552b",
                "name": "Validate New User should not be able to  register to OncoConnect with invalid Password",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"{{temporary_email}}\",\n  \"password\": \"madhu@1234\",\n  \"first_name\": \"Madhusmita\",\n  \"last_name\": \"Nath\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "be7160a6-aa06-4139-8979-1b511b85b153",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "0f579912-e756-4162-a240-dea7793d7ecd",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "9d2165ae-15e0-4688-a1df-e559df3bef59",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "dce807de-c6a1-4792-96da-b4d2a6f40427",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed8f04e8-5b31-4721-bd87-cada86d27ce9",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\",()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Error message is valid',()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "0ac2546e-ed94-4cd6-b292-78cbb0a837a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a336e723-ff31-4e49-9a96-c89f54f4bf8f",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "const randomPart = Math.random().toString(36).substring(2, 10); // Generates a random string\r",
                        "const mailinatorEmail = `${randomPart}@mailinator.com`;\r",
                        "pm.environment.set(\"mailinator_email\", mailinatorEmail);"
                      ],
                      "_lastExecutionId": "6efca595-b38f-4b4a-9292-cc5b602fa83a"
                    }
                  }
                ]
              },
              {
                "id": "4994ec99-69d8-4061-887e-e96f19727a12",
                "name": "Validate User should not be able to register - Missing Field",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu@1234\",\n  \"last_name\": \"Test\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "71b69436-0203-466f-ac2e-1f8c2c186377",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "6fd27318-33b0-47d9-b2b4-d83cae4a49d3",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "06d8f9f0-cb02-482e-9078-9fa4fb17a128",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "074ae9b4-f679-4dd9-9da4-c916ffbb021c",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29e1740e-14e6-4b03-817c-df6c0ebe0e6b",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\",()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Error Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "376d3f83-e7bb-40cc-8afb-21b0169fcfef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6972cab-1234-4190-8e60-4f1df4fd8c76",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8e83341-54c7-441c-a1a9-be5ac116bc58"
                    }
                  }
                ]
              },
              {
                "id": "1d216af5-ea00-4feb-8ecd-b5f1db733207",
                "name": "Validate User should not be able to register if already registered",
                "request": {
                  "description": {
                    "content": "This endpoint is used for registering a new user with the necessary details.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"{{temporary_email}}\",\n  \"password\": \"Abc@1234\",\n  \"first_name\": \"TestABC\",\n  \"last_name\": \"Xyz\"    \n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "4dd6e953-29b9-42e0-a91b-8c78c37604a8",
                    "name": "User registered successfully",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Created",
                    "code": 201,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "f829a616-8c2b-40e4-ad5a-914b6502a7e1",
                    "name": "Bad request if any required field is missing or data format is incorrect",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "f6f9bcbd-1be9-40df-87b1-1466e5757d08",
                    "name": "Conflict if email already exists",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "29a82216-c017-4e61-887d-44fce70c9fbf",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signup"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "775f6b78-c8ab-4647-befa-ebe090f98559",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\",()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(409);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Error is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Email address is already registered\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "07f84ac3-acf9-4535-b27c-582132172f5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0141efb-e0b5-449f-ac89-f85fed11af45",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cab4e21-ac20-4c73-8d86-0b51c4cdcce7"
                    }
                  }
                ]
              },
              {
                "id": "fe60b075-c942-44bd-b2dd-57ecfd80edc9",
                "name": "Validate user should not be able to register with incorrect CRUD operation",
                "request": {
                  "url": {
                    "path": [
                      "sign-up"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"email\": \"yasiki3786@huleos.com\",\r\n  \"password\": \"Mads@1234\",\r\n  \"first_name\": \"Madhusmita\",\r\n  \"last_name\": \"Nath\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36367c37-4b8d-4cd0-982a-b0184056e44d",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(405);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "5857da3e-4b2b-406b-81d2-fb5941c34451"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1e2f85c-51fa-40c7-88fc-8c50cd603559",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "311c096d-f7a9-4316-bb79-325f65fb3550"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ed1265a-3fa5-4116-aecc-22414f873f26",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "3e4d229d-da5c-493e-acd2-dc80fcbce1ce"
                }
              }
            ]
          },
          {
            "id": "c7b623c8-5003-4b93-b279-ef8eecdde5da",
            "name": "confirm signup",
            "item": [
              {
                "id": "8400c3f5-6a57-4e40-ad05-040e60b9342b",
                "name": "Validate the user should be able to confirm email successfully",
                "request": {
                  "url": {
                    "path": [
                      "confirm-sign-up",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\":\"{{temporary_email}}\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "791437e2-1bf8-4b80-ab59-437bc09a42fc",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(200);\r",
                        "});\r",
                        "\r",
                        "pm.test('Status message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Account confirmed automatically.\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "5dc66524-a140-4af5-932f-589b2e6038d9"
                    }
                  }
                ]
              },
              {
                "id": "c32c4493-8471-48ec-8532-6a2843513033",
                "name": "Validate the user should not be able to confirm email for not registered Email.",
                "request": {
                  "url": {
                    "path": [
                      "confirm-sign-up",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\":\"{{mailinator_email}}\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e04da69d-faf3-4a4d-9697-e1070d99eccb",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Error message is valid',()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"User does not exist.\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "c570f7e9-63d7-4b5f-9c1d-97808510bea3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28ee65c5-762d-46ab-9106-2b9b6a776e5d",
                      "type": "text/javascript",
                      "exec": [],
                      "_lastExecutionId": "b2bbb9b7-2470-41e1-ad9e-974ce6661314"
                    }
                  }
                ]
              },
              {
                "id": "eaff416c-0f70-4cd4-a72d-cc6dbd5783cd",
                "name": "Validate the user should not be able to confirm email if data format is incorrect or required field is missing",
                "request": {
                  "url": {
                    "path": [
                      "confirm-sign-up",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8242eed6-8081-4877-8b6d-298998ce849f",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "df2fa7af-a265-4e03-9527-ddfa2a32e6de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64052856-449c-4453-b52c-c2d24eb8e45b",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc2f9188-853c-4e3f-b69f-bc1823e79568"
                    }
                  }
                ]
              },
              {
                "id": "fe91e6d8-5efb-4477-ae12-6db9809b7635",
                "name": "Validate the user should not be able to confirm email if incorrect CRUD operation is used.",
                "request": {
                  "url": {
                    "path": [
                      "confirm-sign-up",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\":\"{{temporary_email}}\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "597db9f4-047f-465b-902e-78e0f9ea652b",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(405);\r",
                        "});\r",
                        "\r",
                        "pm.test('Status message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "e6541d4f-67ff-4927-ba41-2c61bb037438"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              },
              {
                "id": "811109c1-96f1-441c-9930-923ceec66877",
                "name": "Validate the user should not be able to confirm email if the email already exists.",
                "request": {
                  "url": {
                    "path": [
                      "confirm-sign-up",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\" : \"japepav263@fincainc.com\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90c3e3a1-bebf-4d7e-9740-97ac85d77df6",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(409);\r",
                        "});\r",
                        "\r",
                        "\r",
                        "pm.test('Status message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Email address is already registered\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "c653e89e-b876-40a9-91f2-4589b49bc758"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81d0a85f-c65e-4e5b-8500-8f76b560cace",
                      "type": "text/javascript",
                      "exec": [],
                      "_lastExecutionId": "a6aa40fa-5d5a-41b1-b050-b4ca9eed1183"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "749090e4-7cef-4deb-a706-0ce53c3677c2",
            "name": "signin",
            "item": [
              {
                "id": "fa2eda98-1e94-4ea5-91ef-33c09a5bd1a2",
                "name": "Validate user should be able to login using valid credentials",
                "request": {
                  "description": {
                    "content": "Authenticates a user and returns an authentication token.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-in",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  //\"email\": \"{{temporary_email}}\",\n     \"email\" : \"madhusmitanath80@gmail.com\",\n  \"password\": \"Mads!23456\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  },
                  "auth": {
                    "type": "noauth",
                    "noauth": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "d1b1980a-c108-4010-bfc4-58669058cc78",
                    "name": "Authentication successful",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "a42f7304-fd75-4e78-a8a6-f814fcbb80d6",
                    "name": "Unauthorized - Invalid credentials",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Unauthorized",
                    "code": 401,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "4a872482-c05d-42fb-9161-ab3a120298f4",
                    "name": "Forbidden - Account inactive",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Forbidden",
                    "code": 403,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "2496cb0a-4c8f-453d-b28c-e7e9d6af47b8",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6929946d-368a-436f-b0ad-e5cdecad856f",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid', () => {\r",
                        "    pm.response.to.have.status(200);\r",
                        "});\r",
                        "pm.test('Status message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Sign in successful!!\");\r",
                        "});\r",
                        " const jsonData = pm.response.json();\r",
                        "\r",
                        "// Extract tokens from AuthenticationResult\r",
                        "const tokenType = jsonData.AuthenticationResult.TokenType || \"Bearer\";\r",
                        "const accessToken = jsonData.AuthenticationResult.AccessToken;\r",
                        "const refreshToken = jsonData.AuthenticationResult.RefreshToken;\r",
                        "\r",
                        "if (accessToken && refreshToken) {\r",
                        "    const bearerToken = `${accessToken}`;\r",
                        "    pm.environment.set(\"bearer_token\", bearerToken);\r",
                        "    pm.environment.set(\"refresh_token\", refreshToken);\r",
                        "\r",
                        "    console.log(\"Bearer token saved:\", bearerToken);\r",
                        "    console.log(\"Refresh token saved:\", refreshToken);\r",
                        "} else {\r",
                        "    console.error(\"Tokens not found in the response\");\r",
                        "}\r",
                        "\r",
                        "var response = pm.response.json();\r",
                        "var id = response.user.id;\r",
                        "\r",
                        "pm.environment.set(\"uid\",id);\r",
                        ""
                      ],
                      "_lastExecutionId": "28419bcc-afda-44b3-a4ec-5011cdae5f4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7534e99-6d85-4ec5-9066-80584f3400ec",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bcd7954-e8e7-41c7-9bf5-72b38c942e31"
                    }
                  }
                ]
              },
              {
                "id": "20471029-b4e7-4053-b1dc-261b3f638209",
                "name": "Validate user should not be able to login using invalid email",
                "request": {
                  "description": {
                    "content": "Authenticates a user and returns an authentication token.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-in",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n//   \"email\": \"{{temporary_email}}\",\n    \"email\" : \"madhusm0@gmail.com\",\n  \"password\": \"Abc@1234\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "b03bd3b0-5a68-4ce7-a79c-c21ab3663b7a",
                    "name": "Authentication successful",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "0b444952-2eeb-4976-a0e5-76c89d37b0d6",
                    "name": "Unauthorized - Invalid credentials",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Unauthorized",
                    "code": 401,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "847da9a4-cce1-4b2e-aeaa-68d1bbc835e1",
                    "name": "Forbidden - Account inactive",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Forbidden",
                    "code": 403,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "7718dad3-22ce-4f47-a14c-e4df53d4c660",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10debe75-6f32-4516-b77c-1939e2e39798",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid', () => {\r",
                        "    pm.response.to.have.status(401);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Email address is not registered\");\r",
                        "});\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "b18b7509-856e-4ac8-9313-5e9a8ac87fe7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4965debc-11e9-4dc0-8d37-f0691c43f55d",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6ab6ba2-5de9-4647-8aa8-ab1a5ad25918"
                    }
                  }
                ]
              },
              {
                "id": "354fb61c-29a7-462a-92ee-a4a959db8533",
                "name": "Validate user should not be able to login using invalid password",
                "request": {
                  "description": {
                    "content": "Authenticates a user and returns an authentication token.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-in",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n   \"email\": \"{{temporary_email}}\",\n //   \"email\" : \"madhusmitanath80@gmail.com \",\n  \"password\": \"Mads\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "1c3faf1b-32d5-433c-afed-2a6598655759",
                    "name": "Authentication successful",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "848c19c2-1cee-442c-8e4c-07fede047a77",
                    "name": "Unauthorized - Invalid credentials",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Unauthorized",
                    "code": 401,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "8a3ecd9d-ddc5-4f17-9749-bd2cc7a1abdb",
                    "name": "Forbidden - Account inactive",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Forbidden",
                    "code": 403,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "de4e3e02-94aa-44bc-952e-f229076b008a",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "707fe6b4-31fe-42df-8639-5c849b1d8b6e",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid', () => {\r",
                        "    pm.response.to.have.status(401);\r",
                        "});\r",
                        "\r",
                        "pm.test('Error message is valid',()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "10f6753c-bd13-4d8f-87f0-98db0dc1f67b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58f4e5fa-aa7b-41a2-832a-76eff9f2757e",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc9db31e-c0f7-4af2-87de-1cb2348b1cdd"
                    }
                  }
                ]
              },
              {
                "id": "cb9fec5b-d8cd-4682-ae74-0c0237eddc16",
                "name": "Validate user should not be able to login using missing password",
                "request": {
                  "description": {
                    "content": "Authenticates a user and returns an authentication token.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-in",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"{{temporary_email}}\"\n    // \"email\" : \"madhusmitanath80@gmail.com\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "cb64d540-7d9f-4cf5-8f60-87ef8a6f4716",
                    "name": "Authentication successful",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "fc1ac876-28d9-4aca-99b9-d66c35d68f7d",
                    "name": "Unauthorized - Invalid credentials",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Unauthorized",
                    "code": 401,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "6fefbc1d-a8f3-467c-8beb-bfecac451bc5",
                    "name": "Forbidden - Account inactive",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Forbidden",
                    "code": 403,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "a296ae72-1657-48e3-80f2-14688c5ee0c9",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32d6adab-0884-4d72-ab8c-6b9009ca3ba1",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid', () => {\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                        "});\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "19cbcadf-74dd-4907-b5ab-c6acb82aef0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "085dd30a-3a55-4b31-a5e2-60bb34114972",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b89f1c4d-2fab-4448-9e80-38326858e9ce"
                    }
                  }
                ]
              },
              {
                "id": "0a7a6932-0997-4c72-ac78-b15502edb572",
                "name": "Validate user should not be able to login using missing email",
                "request": {
                  "description": {
                    "content": "Authenticates a user and returns an authentication token.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-in",
                      ""
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n//   \"email\": \"{{temporary_email}}\",\n    \"password\":\"Mads!234\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "3dcf4306-aa8b-4e1c-8080-d502b3cf031f",
                    "name": "Authentication successful",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "9669a2c0-6b67-4151-8940-6dc016791195",
                    "name": "Unauthorized - Invalid credentials",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Unauthorized",
                    "code": 401,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "621704fa-328c-4ec4-bd1a-7abf54745afd",
                    "name": "Forbidden - Account inactive",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Forbidden",
                    "code": 403,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "02cb135b-0a93-421a-83d8-f8a8aa1c36d4",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2a4d0c4-7eea-4398-839b-6067b5bb6c29",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid', () => {\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                        "});\r",
                        "\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "e7685eb9-dca9-4fcd-9c04-a4549ff22bba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c8663a3-0f53-4e17-a8a6-4c4aecc0fcd3",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb23530d-dee9-458c-8f7c-38c45fca7636"
                    }
                  }
                ]
              },
              {
                "id": "7f2539a5-09e3-4a2d-987b-ea5f72589909",
                "name": "Validate user should not be able to log in  with incorrect credentials",
                "request": {
                  "description": {
                    "content": "Authenticates a user and returns an authentication token.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-in"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"{{temporary_email}}\",\n  \"password\": \"Madhusmita@12\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "0df4b548-969f-4893-b305-662afeb1d2ee",
                    "name": "Authentication successful",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "90da0117-2cc9-4356-9c8a-6d00ddfb042d",
                    "name": "Unauthorized - Invalid credentials",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Unauthorized",
                    "code": 401,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "85399dd9-8d9b-476b-b619-4e44c73fcc9e",
                    "name": "Forbidden - Account inactive",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Forbidden",
                    "code": 403,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "936278e4-411a-4a1e-9dae-c4da7ae81f58",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "065d97eb-805a-428a-bd5b-cd7918abfb62",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(401);\r",
                        "});\r",
                        "\r",
                        "\r",
                        "pm.test('Error message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "ca298f1c-9858-4c6a-8f4f-619d89e4e13f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ee5e971-ada2-46b4-8fa7-5f3a770f3d41",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b128ee9-b829-4f23-8492-9491578fe31e"
                    }
                  }
                ]
              },
              {
                "id": "af23618d-d3e8-4239-afb4-c196ceaa8621",
                "name": "Validate user should not be able to log in  if user is not confirmed.",
                "request": {
                  "description": {
                    "content": "Authenticates a user and returns an authentication token.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "sign-in"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"email\": \"hofyipedri@gufum.com\",\n  \"password\": \"GodSigma@1234\"\n}",
                    "options": {
                      "raw": {
                        "headerFamily": "json",
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "d32adbde-400e-4e52-95a3-ce471cae6320",
                    "name": "Authentication successful",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "a19e7e7e-fd6e-4301-b6a9-a7d5d906afdf",
                    "name": "Unauthorized - Invalid credentials",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Unauthorized",
                    "code": 401,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "f87e03a3-6516-4985-adda-a7172e725385",
                    "name": "Forbidden - Account inactive",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Forbidden",
                    "code": 403,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"message\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "fc46a332-5c11-43c8-a011-e24147ca18b7",
                    "name": "In case of server fails to respond",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "signin"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                        "options": {
                          "raw": {
                            "headerFamily": "json",
                            "language": "json"
                          }
                        }
                      }
                    },
                    "status": "Internal Server Error",
                    "code": 500,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n  \"error\": \"<string>\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fae4b1d-d4e3-4d93-9a46-41040185c180",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(403);\r",
                        "});\r",
                        "\r",
                        "\r",
                        "pm.test('Error Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"User has not been confirmed by the admin\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "abb38669-1bc9-4ef8-96a6-1de3b22fa041"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "383ae575-a43e-4303-a43b-852878b33132",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acbc1265-f95b-40a1-83c5-7d3fd805149b"
                    }
                  }
                ]
              },
              {
                "id": "e972846b-482e-4e00-9ebe-92349bfdf055",
                "name": "Validate user should not be able to  login with incorrect CRUD operation",
                "request": {
                  "url": {
                    "path": [
                      "sign-in"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"email\": \"{{temporary_email}}\",\r\n  \"password\": \"Abc@1234\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d7552d-950b-4a51-86f3-8b7c4f3be323",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(405);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                        "});\r",
                        ""
                      ],
                      "_lastExecutionId": "a52d2d95-ffca-483c-ba34-4c75a47e4abf"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              }
            ],
            "event": []
          },
          {
            "id": "8ab08e06-6c5c-4b43-872d-145e5ace75a0",
            "name": "signout",
            "item": [
              {
                "id": "de1e9c6d-6fa8-4d63-bd51-4a4363f078d3",
                "name": "Validate user logged out successfully",
                "request": {
                  "url": {
                    "path": [
                      "sign-out"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "type": "string",
                        "value": "{{bearer_token}}",
                        "key": "token"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf373850-6d81-4fef-a683-e0bbd3eb5ad4",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(200);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Sign out successful.\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "1e720803-c5ec-4347-b951-12d434b57344"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fe54598-e76f-425c-b0d9-c4d01010a575",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "const token = pm.environment.get(\"bearer_token\");\r",
                        "if (token) {\r",
                        "    pm.request.headers.add({\r",
                        "        key: \"Authorization\",\r",
                        "        value: token\r",
                        "    });\r",
                        "} else {\r",
                        "    console.error(\"No Bearer token found\");\r",
                        "}\r",
                        "\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "ef2b7ffd-1c42-44d1-bddb-f27e5e9c3eff"
                    }
                  }
                ]
              },
              {
                "id": "7ac7e264-f464-4d8e-af99-3d6c600fd489",
                "name": "Validate user should not be able to logged out successfully for invalid token",
                "request": {
                  "url": {
                    "path": [
                      "sign-out"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "type": "string",
                        "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI0NGI4YjRhOC04MDMxLTcwNjQtMGFjYy0wZGZkOTM3MDViYmUiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIyYTg5MTE0Yi01ZjAwLTQ2MjMtOGI2Yy1jYzEwODk3NzYxMzgiLCJldmVudF9pZCI6ImZiOWE5ODliLTlhMDEtNDBhNi05NzVmLWQ2YzNmYjNiY2MyNSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTcxNDQ4MDYsImV4cCI6MTcxNzE0ODQwNiwiaWF0IjoxNzE3MTQ0ODA2LCJqdGkiOiJiOGY0MmYyMC0wNGFmLTQwZjYtOWY3OS00ODY3NjI0MTI2ZWYiLCJ1c2VybmFtZSI6IjQ0YjhiNGE4LTgwMzEtNzA2NC0wYWNjLTBkZmQ5MzcwNWJiZSJ9.ZWrT7UJ9WnRBogOllKy9MqM_PvEj5U4DGEDcRubhX_fpz44y2VnLuVsDsVjSFlpvI-npnUG_b8xhZT1uL-4XWNkJcRKJNjaWQslyejbfJ_0f8TI2ikhERzES7HhmNeCWpmWl2Hc4rRUViY-I7IQvUu5zeQTnbv2IADKxvCBBkFH6RytYXlPwubRLsA4s8XKt5aiVhbj9PdpJYhdYHKQtc2L0iiEzwKRbVoqq_3ECyGNyf3vzCPBCQIojzuDSbeh7oFFJibpgtXqQIQMXDncMxZefz6eU1r_e3GqYehQGPPII7J7yd7lpyZ6vCOJgqIRdbyGDx_BntS4PhQ-Qj6Jggg",
                        "key": "token"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f43ce661-5d0d-4152-bdf4-2c938399c640",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(401);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "c265b04c-9232-4964-ba53-c4c35f6a6634"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0b082af-4385-4db5-ae5b-b96778599508",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "const token = pm.environment.get(\"bearer_token\");\r",
                        "if (token) {\r",
                        "    pm.request.headers.add({\r",
                        "        key: \"Authorization\",\r",
                        "        value: token\r",
                        "    });\r",
                        "} else {\r",
                        "    console.error(\"No Bearer token found\");\r",
                        "}\r",
                        "\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "bfefd757-fbfd-4691-acd9-bc3d1eb2fd71"
                    }
                  }
                ]
              },
              {
                "id": "3d2df8ed-571e-459b-9220-03b019eb9380",
                "name": "Validate user should not be able to log out if the Token has expired",
                "request": {
                  "url": {
                    "path": [
                      "sign-out"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "type": "string",
                        "value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TB5WJ_xJafS7ArMxfKnoqtEALVOdRZyDDtuRgrH2LAHRrL17S-2CzHEwq4lbezCFVXXAMn50txZWYEqn2Hp3fvlSmt3bEFWrF5pwUwsFp8VWoIOb1Wk-b4e_xof95_VAYb2rwu0i4haANxtw-G2OZT-Q-Fx7FjyimcMSzVvWKbc66ouua_7XP3b4jRrQjbsIrBgJcsTJfquJXNNv3OVV4VnLC5kuzgCyVACgwnhPss0M4bR3BGbilTTL_5C4OdJoKdlSAh074Eh3SG1zo6LTJDYYaf0V-q_ATsNMFMMP3XuNkWCrGl2ATk4CB0MwAyLgu-vfaT9w25N_nP2UJ3GyHQ.ExNGC4kPQo_2ufSp.A5JKSBX87-Ya4dCmffTibMGzbLSOSFf0sHHu7QL_SKVfFMBl6CGHOmk5ebRvhilwHNT3S0DX-UFWKdVylqPWHbDZgR8vUSwWqFeK_4tMp3Jiavvoi7KAh_MNH5aGQrwWlC08SVPFnVjssOsWYJgZWexJonrY2fr1ESEmYndmfpEFDpmRqC_WNXlITOGZoHJ4zTkjf96vl_Tl-_ssW8ZQ_tzy7DlDiTKe7JeI_KAhGJkUSiPwbeQUQFRYT0rOqSaykl2etaMv73XW71FbBt2ti3PCeyGsESYURWoFpW9CgeJHqjTVkTHMSIwuB0zbgpZ_JRDH-QIO1378f5hHax8iB4Nv0uFocUcksScbWlu6Cf7BDXMHew0wUoXo0nPftSEiXe4QtyQDx_H6gHDZC3ZhGKmWWu8XP6rAp7Uh1XPudx7mogsCc1kAwis3fbfwsaGiCJhv8_fAmp5GfcLS_qjig-_IL8aOz8aG60KjjzeAOwpi8j9jQAO2Dbq7e55T41dZ5LK0p7Ckk2zoJlAE9xSPBL894b_eTMStRMVK_Ys1x2aLLt2BPVUREcSOb-jIh7fzJ8yin4cFKJtMAUwBJmmTxwqN0NrD3qRXEVu0O6_RgdkEqZGyGLJS0V2l2LD2OAcRixc-6S8bX7Z2_b7C_fSBl88MqPVRPOGmROVdbbr3R__9QLAOwmb6UKJ_h8NaNQ8Q6ReTjshb1d93W2lvFWS8gDz2bpICHvK-FrgrO4wa3S9wpjrfZUvXKoJxi0_vNg7-kTf_bJE4y77EsBP3-Bd7t_BkfdkBA6tugVh_M_EJb2ciGGtV8LfLXtm_Fv0tQGowihuQdRtEytj7nE2soD1ni8Tqt1YRF5eqi4dzb4qAS2-ofk4FxdXvCMIsmVZ-ESw-FOynXdTitb7LcNcB3TGHpcjfPfkRvap-cFlVcHmaRW2IzAcwIUmkPRLD9lVjPWoB0akhDqC7Gw72z5yAerSJzqroj2SElP0VuSoxAZvCste6Oai1fk2urFdPLwqn74ddnOVq9HTKMveyuGfA-JnpzjgB5e11IQleMETGF63qSPNh3n3EQLNC69zpLiIDn5ng-F-869EcEOMWwV1Z75mnYUU0rNcCfGnxzW8_eqbQ-tlBcu5oolhrSu1fDIocSx2a7oBARt4-O-AYRvHLqxyxBcNqiCcnF9hnyRKJE6cl_Hb561WauwZH4nDAFmK6_KbqxVCuAdEWMYn9pknl8e7siLoa-P07HFQZCWPfqH5_dB1C4QZ3O1y2rxcEHXHFDmENxiSZY6Hb-hDjAoLjYiKizTMHXP12ClaN34NtrjD6kUfgn6DHRNynezVMxaI.ZNqwRdcFFkSt6GesuuYpXw",
                        "key": "token"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ae65264-f67e-49e3-bd89-95669a4991fc",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(401);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "ff8042e8-88be-4a56-967c-2c45e09973a2"
                    }
                  }
                ]
              },
              {
                "id": "64cd32a5-80d0-4312-bfbe-fbe09e7aeba6",
                "name": "Validate user should not be able to register with incorrect CRUD operation",
                "request": {
                  "url": {
                    "path": [
                      "sign-out"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "type": "string",
                        "value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TB5WJ_xJafS7ArMxfKnoqtEALVOdRZyDDtuRgrH2LAHRrL17S-2CzHEwq4lbezCFVXXAMn50txZWYEqn2Hp3fvlSmt3bEFWrF5pwUwsFp8VWoIOb1Wk-b4e_xof95_VAYb2rwu0i4haANxtw-G2OZT-Q-Fx7FjyimcMSzVvWKbc66ouua_7XP3b4jRrQjbsIrBgJcsTJfquJXNNv3OVV4VnLC5kuzgCyVACgwnhPss0M4bR3BGbilTTL_5C4OdJoKdlSAh074Eh3SG1zo6LTJDYYaf0V-q_ATsNMFMMP3XuNkWCrGl2ATk4CB0MwAyLgu-vfaT9w25N_nP2UJ3GyHQ.ExNGC4kPQo_2ufSp.A5JKSBX87-Ya4dCmffTibMGzbLSOSFf0sHHu7QL_SKVfFMBl6CGHOmk5ebRvhilwHNT3S0DX-UFWKdVylqPWHbDZgR8vUSwWqFeK_4tMp3Jiavvoi7KAh_MNH5aGQrwWlC08SVPFnVjssOsWYJgZWexJonrY2fr1ESEmYndmfpEFDpmRqC_WNXlITOGZoHJ4zTkjf96vl_Tl-_ssW8ZQ_tzy7DlDiTKe7JeI_KAhGJkUSiPwbeQUQFRYT0rOqSaykl2etaMv73XW71FbBt2ti3PCeyGsESYURWoFpW9CgeJHqjTVkTHMSIwuB0zbgpZ_JRDH-QIO1378f5hHax8iB4Nv0uFocUcksScbWlu6Cf7BDXMHew0wUoXo0nPftSEiXe4QtyQDx_H6gHDZC3ZhGKmWWu8XP6rAp7Uh1XPudx7mogsCc1kAwis3fbfwsaGiCJhv8_fAmp5GfcLS_qjig-_IL8aOz8aG60KjjzeAOwpi8j9jQAO2Dbq7e55T41dZ5LK0p7Ckk2zoJlAE9xSPBL894b_eTMStRMVK_Ys1x2aLLt2BPVUREcSOb-jIh7fzJ8yin4cFKJtMAUwBJmmTxwqN0NrD3qRXEVu0O6_RgdkEqZGyGLJS0V2l2LD2OAcRixc-6S8bX7Z2_b7C_fSBl88MqPVRPOGmROVdbbr3R__9QLAOwmb6UKJ_h8NaNQ8Q6ReTjshb1d93W2lvFWS8gDz2bpICHvK-FrgrO4wa3S9wpjrfZUvXKoJxi0_vNg7-kTf_bJE4y77EsBP3-Bd7t_BkfdkBA6tugVh_M_EJb2ciGGtV8LfLXtm_Fv0tQGowihuQdRtEytj7nE2soD1ni8Tqt1YRF5eqi4dzb4qAS2-ofk4FxdXvCMIsmVZ-ESw-FOynXdTitb7LcNcB3TGHpcjfPfkRvap-cFlVcHmaRW2IzAcwIUmkPRLD9lVjPWoB0akhDqC7Gw72z5yAerSJzqroj2SElP0VuSoxAZvCste6Oai1fk2urFdPLwqn74ddnOVq9HTKMveyuGfA-JnpzjgB5e11IQleMETGF63qSPNh3n3EQLNC69zpLiIDn5ng-F-869EcEOMWwV1Z75mnYUU0rNcCfGnxzW8_eqbQ-tlBcu5oolhrSu1fDIocSx2a7oBARt4-O-AYRvHLqxyxBcNqiCcnF9hnyRKJE6cl_Hb561WauwZH4nDAFmK6_KbqxVCuAdEWMYn9pknl8e7siLoa-P07HFQZCWPfqH5_dB1C4QZ3O1y2rxcEHXHFDmENxiSZY6Hb-hDjAoLjYiKizTMHXP12ClaN34NtrjD6kUfgn6DHRNynezVMxaI.ZNqwRdcFFkSt6GesuuYpXw",
                        "key": "token"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4588a72-6319-4d6e-b4e5-bba1a8b91262",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(405);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "a1e2a05e-52bb-4777-aa6f-1578c4171c0e"
                    }
                  }
                ]
              },
              {
                "id": "7f03b690-e3ea-44ab-bb74-bad508931e71",
                "name": "Validate the user should not be able to logout if already logged out.",
                "request": {
                  "url": {
                    "path": [
                      "sign-out"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "type": "string",
                        "value": "{{bearer_token}}",
                        "key": "token"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "090ad2cd-6a83-4901-b5d5-f597264df958",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(401);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response Message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "3976692c-b280-4e97-a661-e12e835bd516"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8887d248-8304-4d1c-b0c8-d660e8d58a8c",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aee607df-074b-4623-ab1b-288dc0551851"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "ddf94aa2-fb5d-45e5-a75c-c448f285f8bd",
            "name": "forgot password",
            "item": [
              {
                "id": "d936ad41-39b7-4057-a1c8-8d9c21140950",
                "name": "Validate the verification code has been sent to the user successfully.",
                "request": {
                  "url": {
                    "path": [
                      "forgot-password"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\":\"{{temporary_email}}\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f35d1b7-8452-473f-bc99-0897de7a4d45",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(`Status Code is ${pm.response.code === 200 ? 'valid' : 'invalid'}`, () => {\r",
                        "    const expectedStatusCode = 200;\r",
                        "    const actualStatusCode = pm.response.code;\r",
                        "    pm.expect(actualStatusCode, `Expected status code ${expectedStatusCode} but got ${actualStatusCode}`).to.equal(expectedStatusCode);\r",
                        "});\r",
                        "\r",
                        "pm.test(`Response Message is ${pm.response.json().message === \"OTP sent successfully\" ? 'valid' : 'invalid'}`, () => {\r",
                        "    const expectedMessage = \"OTP sent successfully\";\r",
                        "    const actualMessage = pm.response.json().message;\r",
                        "    pm.expect(actualMessage, `Expected response message \"${expectedMessage}\" but got \"${actualMessage}\"`).to.eql(expectedMessage);\r",
                        "});\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "e13ee0b8-151b-43aa-905e-23a221433aa5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a78c4d8-a0cd-46b2-b03e-09f96ceecea3",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da3c996b-e3bb-47b2-8d21-1ec8f3feead0"
                    }
                  }
                ]
              },
              {
                "id": "247ab4f8-7147-4389-9241-91dfa91262d7",
                "name": "Validate the verification code has not been sent to the user as an unregistered email is provided.",
                "request": {
                  "url": {
                    "path": [
                      "forgot-password"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\":\"madhusmitanath0327@gmail.com\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7f6d9d5-7ade-4482-a028-035e22e4fe4c",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Status message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Email address is not registered\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "60ef4917-6b27-49e2-8386-a0aaf205f175"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4ce283e-a918-4ca9-9b2d-28fca050673b",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09050959-4600-4356-8191-e104c70b6d52"
                    }
                  }
                ]
              },
              {
                "id": "380a9269-a9d6-453a-a049-9b4a50c0d519",
                "name": "Validate the verification code has not been sent to the user as an incorrect email is provided",
                "request": {
                  "url": {
                    "path": [
                      "forgot-password"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\":\"madhusmitanath0327@gmail.com\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9163527a-0db1-4493-a3ee-83cdd61d4c8c",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(\"Response has all required fields\", ()=> {\r",
                        "    pm.expect(response).to.have.property(\"status\");\r",
                        "    pm.expect(response).to.have.property(\"message\");\r",
                        "});\r",
                        "\r",
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(400);\r",
                        "});\r",
                        "\r",
                        "pm.test('Response message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().message).to.eql(\"Email address is not registered\");\r",
                        "});\r",
                        "\r",
                        ""
                      ],
                      "_lastExecutionId": "718c6fe3-238b-4e78-8227-2102870770e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea3fcd55-5eaf-4922-8232-bb60ca0a30c6",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4339ad53-2e99-41c5-b1f5-a897c671a7fd"
                    }
                  }
                ]
              },
              {
                "id": "92c53a8d-cf15-4ad3-84aa-4acc33c1753f",
                "name": "Validate the verification code has not been sent to the user whose email is not confirmed",
                "request": {
                  "url": {
                    "path": [
                      "forgot-password"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\":\"alon.naveen@floodouts.com\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a70c04a6-e626-49ad-b4f2-203af574c280",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "let response = pm.response.json();\r",
                        "\r",
                        "pm.test(`Status Code is ${pm.response.code === 403 ? 'valid' : 'invalid'}`, () => {\r",
                        "    const expectedStatusCode = 403;\r",
                        "    const actualStatusCode = pm.response.code;\r",
                        "    pm.expect(actualStatusCode, `Expected status code ${expectedStatusCode} but got ${actualStatusCode}`).to.equal(expectedStatusCode);\r",
                        "});\r",
                        "\r",
                        "pm.test(`Response Message is ${pm.response.json().message === \"User has not been confirmed by the admin\" ? 'valid' : 'invalid'}`, () => {\r",
                        "    const expectedMessage = \"User has not been confirmed by the admin\";\r",
                        "    const actualMessage = pm.response.json().message;\r",
                        "    pm.expect(actualMessage, `Expected response message \"${expectedMessage}\" but got \"${actualMessage}\"`).to.eql(expectedMessage);\r",
                        "});\r",
                        ""
                      ],
                      "_lastExecutionId": "b36897f7-d1b0-415f-b712-1cc10f68e1d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97e16f6b-686d-42c8-9f27-500212e3e125",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02132d46-28a6-4f4a-a8a2-241512cf8e17"
                    }
                  }
                ]
              },
              {
                "id": "3de07dd0-ea86-44cb-8b32-e8c3d9abe915",
                "name": "Validate the user should not receive a verification code if incorrect CRUD operation is used.",
                "request": {
                  "url": {
                    "path": [
                      "forgot-password"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"email\":\"{{temporary_email}}\"\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "056d33ad-82c0-41b9-aa30-030fc247d7a2",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        "pm.test('Status Code is valid',()=>{\r",
                        "    pm.response.to.have.status(405);\r",
                        "});\r",
                        "\r",
                        "pm.test('Status message is Valid', ()=>{\r",
                        "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                        "});"
                      ],
                      "_lastExecutionId": "6baeb246-f6e8-4691-a100-3884a7cac46f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bc58acb-c376-48cb-8eed-757002a9bd7c",
                      "type": "text/javascript",
                      "packages": {},
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07837c52-1d69-443b-bea3-415ac7ecadfb"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "baa45e3b-4ed0-461b-8e29-15554b32dbb7",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "console.log(\"Email:\", pm.environment.get(\"temporary_email\"));"
                  ],
                  "_lastExecutionId": "9b2bd8ce-88cd-4ff5-93b7-8e1fa2a5b882"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dda891c9-cd9a-4a2e-91df-4273d377b014",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7d51727-5c79-414b-89cc-385281b39553"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "044a7ef3-6e61-45c7-bb48-4490384e51a6",
      "name": "OncoConnect_SignUp_SignIn_ConfirmSignUp_Signout",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2024-07-22T05:11:20.676Z",
      "postman_exported_using": "Postman/11.3.1"
    },
    "id": "31a12bec-5eff-4e5c-969b-554cbb3dd5f4",
    "name": "OncoConnect",
    "values": [
      {
        "type": "any",
        "value": "http://3.137.2.183:8000",
        "key": "baseUrl"
      },
      {
        "type": "any",
        "value": "lukasz.ryley@floodouts.com",
        "key": "fakemail_address"
      },
      {
        "type": "any",
        "value": "testuser374931@yopmail.com",
        "key": "temporary_email"
      },
      {
        "type": "any",
        "value": "",
        "key": "email_username"
      },
      {
        "type": "any",
        "value": "",
        "key": "email_domain"
      },
      {
        "type": "any",
        "value": "072455",
        "key": "reset_otp"
      },
      {
        "type": "any",
        "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxNDE4MjQxOC04MDMxLTcwYmMtOWEyMS1mNjc4MjkyNzgwM2QiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYTEzMjI1Yy1hNzVkLTQzZmItODlhNy0zYmM3ZmZhYjY5NzUiLCJldmVudF9pZCI6IjlhY2E0Y2RjLWI2NmUtNDJmOC1iOGFjLTlkYmEwOThkMDQxOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE2NDg0NDAsImV4cCI6MTcyMTczNDg0MCwiaWF0IjoxNzIxNjQ4NDQwLCJqdGkiOiJmMGEzNzUyYS0wNmE4LTQwZGMtYjFhNy1jMWY1ZDg3NjA4MGQiLCJ1c2VybmFtZSI6IjE0MTgyNDE4LTgwMzEtNzBiYy05YTIxLWY2NzgyOTI3ODAzZCJ9.oe-2yODjrLE4ylnRYkCiq0BkaX-h5osIs2GEdum1hLUAoZl6JBJWCqs3z-6j9k4tdX_--TLI1pJM2EDqKJmyxWEYwstSEGNQwoq0SMwHC1R_Sn5bIxVIlhUFqvI8un41z2Omh_j52H3Pnl4CCb7eqbFoUR3RFdmij3X2wi-2o68PuBU6GTyGgnBTqnL8OMsRUbDnR0bzkjk3IIlGoAF7HkWlzEM3hpnAWQk6rtALwhn_yxf8WssnzRZGJRPYaHYjJimoAZ878wNyJm5K5aY7NLNNPXNjGrNRCANhn4I6EYARNwHZRECiC2D5BgCDeZostlJpdOgwQNxBZClVfnt5zQ",
        "key": "bearer_token"
      },
      {
        "type": "any",
        "value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.sRHPgKTMMbBAx8LZ8Mk11yK0FdfrgzQ8fS3ybmdAICaivExQmNLOxx6MRIZhbNRbAv_RiJPk_8oBFIbnws3y0tuWyJWTPgt0GZi5feYI6NYMA0KXQDgu4eDmj1fj69R8l2V4NVnAHtIlDDm-nWL85OmB9ropidKQW2MrKIVjg2GhSq6KFtqoo0bxmdjrstmlfW5sez9b5zeGfszYC3uCoeG9FkxUf_hzAHALhBvLRc_szug-775yGsLvvHAXqJZFJReH8U1L29uMQfVKZEdR2kEzNsGyrg8tlQj1A2cdXEm98ZyCdV5_XZvzjcNZd4C_F6KGddAw2eHjKEtE634SEQ.SF6BcNV7cNAtpu22.pQ_4CvMinuLv6YpS-hV8zzV1lOYb7LPQoh7uyEzuZEz_Z5FInoZIKE4fiyysF7ooM3qd_FmGPg_s1_p6fFbL-yLTOvWhS0o3r6KJ0VlrilU7dzEHGZdivI8MSoMoPZAyaegkPHvlXsfx17L6v5j9XPfXuLxx7v1FY4N_iGZySLK1NCAEnffochS_x1H5e1pGfx9OiL__HCT16pawTOh5-uAeM1Nv3zNDQ_nY36U4O_ys5ddaQ7nwZsMdPmqbU4TwOtFw7zSEubZXZ_dVByapnI2JimCmdQCoxV_ujjkny-aZr_Kf_M17dUFVKTshvXp8LvHXIxdEPmPGhDSitpIVBfCO_P_NfVficYZPb2xAyyF010NdLTaPQWZ5h7jAPmlfC3yE12JD8MeLifh8EDq-Nwel4FxGbTzPdWo7z79YQ3kVaYfUN4l-c0jelMhmAN5rBqvxLxvPOQvtu-aw_oMEXi3skEXd72QsBGgBRv1Xe48g8fHE5LL0iV5v82INQrh3HKiAGY2RqE1HAhAdv-G48_8Vr65y3PwecyKUhOz-US8GmBhxkSm0g8vRNjJgLVT0JMRWZ8-hveWdJHIGW03Mymamg8iby23JsiVhvmnZNBaIA10PPIHCLknDpBi344EJY-2Axx8_TiA0PV7nMPjPrzW1fQeg-HdamNSmDkAqoRKhF4zG2LFAPkPSKN4EkUUkuFRYyHa8-Kq2phWP1-jEzcSFmvNImUWSESr5VUAH_Z1poSpptqmiAxGqvVgUQgViJgTJgTeUI0nCHh6b8ZkNSSWz17dvJESUj_-FAgFnR9Esy-q3aS-XDT8pvjTqBnVqzZ046jC_qUp8QKPSPbF6_8ScT4_JP7Y5v8gPRHBAJVKBhhjtVpJj_RcH3Koa1REbptV9f17fPqF1FxAeRs1lXxmAeoFhnM0t4PmmyJYdBogW1Txn4w5_O2zYJMte6i0SmaVVf2Htc-NaBlwPIMGX5SqArPc_6sZqya9pa_-J_YZlnQtN8ktpN7uCyAGEXi4Tvmd09F8V2e4dcyLXfuHkrkqByQhmTo5OQuJjUsM0g21tpIhKvN9vkUWiziMJALfPJtRWBf0jn0gyk_yj9GxzzWd8yKq93HMSv3nNn9H-8uQJnTCoUjfEdhXd2DcgapOg0FpdG7L1moCOOTyYnDdiPW0hgB7A3kvQuBTdgs8tp2vnX7c1uK2yHwufYQd4QK46uYwxdbaeCMcsKZNFefdohGiTmh-B2YifM-abW-j6ynExuPuBsR4QmwK8MX7jgN1FdNnqie8w6ISZBPkEZPcO2EWPVd1P9nNp79EtXuJIBpQbtp5b3zymKSBUl5I.OJwF40O1HH9MOtlXljopWw",
        "key": "refresh_token"
      },
      {
        "type": "any",
        "value": "d3q0essv@mailinator.com",
        "key": "mailinator_email"
      },
      {
        "type": "any",
        "value": "http://3.137.2.183:8001",
        "key": "baseUrl_patient_service"
      },
      {
        "type": "any",
        "value": "",
        "key": "p_info_task_id"
      },
      {
        "type": "any",
        "value": "febe6c21-a0ff-46f9-8303-1c59c16a090a",
        "key": "uid"
      },
      {
        "type": "any",
        "value": "",
        "key": "task_id"
      },
      {
        "type": "any",
        "value": "1543bd5d-2e4d-4f61-b96c-c096a75f5270",
        "key": "p_variant_task_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "patient_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "name"
      },
      {
        "type": "any",
        "value": "",
        "key": "file_url"
      },
      {
        "type": "any",
        "value": "",
        "key": "p_other_task_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "variant_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "variantIds"
      },
      {
        "type": "any",
        "value": "http://3.137.2.183:8002",
        "key": "base_Url_caseManger"
      },
      {
        "type": "any",
        "value": "",
        "key": "variant_ids"
      },
      {
        "type": "any",
        "value": "",
        "key": "dynamic_payload"
      },
      {
        "type": "any",
        "value": "",
        "key": "currentUTCTime"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_1"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_2"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_3"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_4"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_5"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_6"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_7"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_8"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_9"
      },
      {
        "type": "any",
        "value": "",
        "key": "VARIANT_ID_10"
      }
    ]
  },
  "globals": {
    "id": "0284ff85-01f1-4d02-ba56-6a1282fa7f29",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 34,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 94,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 34,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 34,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 34,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 89,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 50,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 44,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 549.4411764705883,
      "responseMin": 266,
      "responseMax": 1448,
      "responseSd": 289.5671405611029,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721648428162,
      "completed": 1721648450659
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 34,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6d236b07-1632-4df9-b7c8-9fab48f66f8b",
          "httpRequestId": "b639a19f-f88b-49e9-9232-c7529857f189"
        },
        "item": {
          "id": "54850b2d-e804-4233-a422-58f044a1fbd5",
          "name": "Validate New User should be able to  register to OncoConnect",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{temporary_email}}\",\n  \"password\": \"Abc@1234\",\n  \"first_name\": \"TestABC\",\n  \"last_name\": \"Xyz\"    \n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0dc26d07-cab2-438f-af35-dbc5d66c586f",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1e8e0086-9560-486c-8082-fa4dec138bb7",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "91067b04-cd98-47d1-a7e9-b9bc03db3d76",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9947f09b-ec14-402e-824d-3bf601878f53",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "997c5cfe-28aa-43b9-858b-b95c0b17b94e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Sign up successful! Please confirm your account.\");\r",
                  "});"
                ],
                "_lastExecutionId": "3f4a2764-6982-4563-b183-7e5b48eccb11"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "afd6165f-5333-4fdf-ba72-3d7917b2eeff",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Generate a unique YupMail email address\r",
                  "let uniqueNumber = Math.floor(Math.random() * 1000000);\r",
                  "let temporary_email = `testuser${uniqueNumber}@yopmail.com`;\r",
                  "\r",
                  "// Save the unique email address to an environment variable\r",
                  "pm.environment.set(\"temporary_email\", temporary_email);\r",
                  "\r",
                  "// Optionally, log the unique email to the console for debugging\r",
                  "console.log(\"Generated Email: \", temporary_email);\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "4498aa14-d472-4a97-887f-b057282c8b88"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "177668a7-0f2f-4bd8-adb0-f747a12e4043",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "122",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"testuser374931@yopmail.com\",\n  \"password\": \"Abc@1234\",\n  \"first_name\": \"TestABC\",\n  \"last_name\": \"Xyz\"    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f9e11539-b376-45f9-a5f7-17e450af3fd6",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:29 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "468"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              85,
              115,
              101,
              114,
              67,
              111,
              110,
              102,
              105,
              114,
              109,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              85,
              115,
              101,
              114,
              83,
              117,
              98,
              34,
              58,
              34,
              101,
              52,
              98,
              56,
              52,
              52,
              100,
              56,
              45,
              100,
              48,
              48,
              49,
              45,
              55,
              48,
              101,
              101,
              45,
              54,
              99,
              53,
              100,
              45,
              56,
              57,
              102,
              55,
              99,
              56,
              99,
              53,
              102,
              57,
              54,
              48,
              34,
              44,
              34,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              73,
              100,
              34,
              58,
              34,
              101,
              56,
              98,
              48,
              49,
              98,
              98,
              52,
              45,
              52,
              99,
              99,
              51,
              45,
              52,
              56,
              55,
              55,
              45,
              56,
              101,
              54,
              51,
              45,
              52,
              54,
              50,
              56,
              49,
              98,
              50,
              51,
              48,
              56,
              54,
              98,
              34,
              44,
              34,
              72,
              84,
              84,
              80,
              83,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              50,
              48,
              49,
              44,
              34,
              72,
              84,
              84,
              80,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              77,
              111,
              110,
              44,
              32,
              50,
              50,
              32,
              74,
              117,
              108,
              32,
              50,
              48,
              50,
              52,
              32,
              49,
              49,
              58,
              52,
              48,
              58,
              51,
              48,
              32,
              71,
              77,
              84,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              120,
              45,
              97,
              109,
              122,
              45,
              106,
              115,
              111,
              110,
              45,
              49,
              46,
              49,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              55,
              50,
              34,
              44,
              34,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              107,
              101,
              101,
              112,
              45,
              97,
              108,
              105,
              118,
              101,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              105,
              100,
              34,
              58,
              34,
              101,
              56,
              98,
              48,
              49,
              98,
              98,
              52,
              45,
              52,
              99,
              99,
              51,
              45,
              52,
              56,
              55,
              55,
              45,
              56,
              101,
              54,
              51,
              45,
              52,
              54,
              50,
              56,
              49,
              98,
              50,
              51,
              48,
              56,
              54,
              98,
              34,
              125,
              44,
              34,
              82,
              101,
              116,
              114,
              121,
              65,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              34,
              58,
              48,
              125,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              105,
              103,
              110,
              32,
              117,
              112,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              33,
              32,
              80,
              108,
              101,
              97,
              115,
              101,
              32,
              99,
              111,
              110,
              102,
              105,
              114,
              109,
              32,
              121,
              111,
              117,
              114,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              46,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1448,
          "responseSize": 468
        },
        "id": "54850b2d-e804-4233-a422-58f044a1fbd5",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "88d2b704-9c1c-4122-9c75-dfc7a23e9384",
          "length": 34,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "480208bf-e5af-4cca-aad5-176d9e7c612e"
        },
        "item": {
          "id": "32b4c321-acd2-46ea-984e-6b1e3a385d63",
          "name": "Validate New User should not be able to  register to OncoConnect with password not long enough",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a2d841fb-86f7-4a29-b833-ee5039eb6a94",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4129ea30-7124-48f8-b53c-e567f5b95160",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3ee3ef0c-7902-4bb9-8689-e22f8c7bbf34",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c778c61b-2296-453c-9e31-3f89aacb74e0",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e728098d-9ca6-4850-a490-06dce094d5fd",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\",() =>{\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "6db58e93-a795-474a-a42a-e8fc0bf02352"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e250dc70-3ef3-4332-bbe8-77bfbd851138",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c18a91e2-4045-4442-b2ed-dc3b7dc54301"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "549642d8-4852-4a90-a815-34c706318f80",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "37c2c413-1bfa-4c06-8672-000b6ad7f48a",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:29 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 340,
          "responseSize": 54
        },
        "id": "32b4c321-acd2-46ea-984e-6b1e3a385d63",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a3e74091-74c6-4ed4-b4ec-a10585174f90",
          "length": 34,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7b184a9a-f5e7-4569-8556-2eaac6043d0a"
        },
        "item": {
          "id": "b43ee52c-7e1b-449b-9b45-27bb9510fe03",
          "name": "Validate New User should not be able to  register to OncoConnect with password missing numeric numbers",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "84f80f8b-b048-4954-a38d-16afbdc3dacf",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c8befc92-67dc-4e52-a9f2-c6f153070931",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7e8bdbb7-b330-4bf5-a6be-006ae2184ac2",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d7a9fbec-9a4a-4177-a882-29999e039062",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d5d65362-ae13-4535-94a4-e347010b962c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test('Error message is valid',()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                  "});"
                ],
                "_lastExecutionId": "c3c95abc-0f4d-42bc-932b-ec693f3c3a36"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5eb45404-3ad9-4c4d-805c-21666a43461e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "5e474e0b-ed36-441f-966a-b658ed299ec5"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "df69c14a-2da6-4674-8ec9-e769374a5bf3",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6ce0a110-5e0a-4e7f-ba3b-0d9c066898c7",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 332,
          "responseSize": 54
        },
        "id": "b43ee52c-7e1b-449b-9b45-27bb9510fe03",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0f6e30df-c697-46a0-b41e-958d01888e52",
          "length": 34,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b79468ee-d2b4-445a-942c-36ab9d66dfbe"
        },
        "item": {
          "id": "08891eec-08ee-412f-9cf0-95a49cc9ff61",
          "name": "Validate New User should not be able to  register to OncoConnect with password missing special characters",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e9e2466f-423c-4d27-8b3a-d0b61ca8886f",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2e41ac59-5bee-4f5c-afe2-10e68bd2a124",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8db8fbd7-2acc-4432-af1a-99e235ebb118",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0bb7623e-6f5f-4212-87e4-4b08704d53aa",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5799c933-3cf2-4b01-b736-186d2e0c6f4d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test('Error message is valid',()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                  "});"
                ],
                "_lastExecutionId": "9915549a-f6bb-4500-bb21-e659eb1076e2"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "cb9cf730-e4d3-4f58-b146-b666f0cb93a9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "26a5516d-3002-4611-b3fc-112d504708aa"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c0e17cf0-5c40-4297-b866-9bb902a78d49",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "69906363-5e4c-4cc0-ac25-a47b34c0dc7d",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 367,
          "responseSize": 54
        },
        "id": "08891eec-08ee-412f-9cf0-95a49cc9ff61",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "76a7475a-9440-448f-b1d3-43ff66eb74e6",
          "length": 34,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "44c0ddc8-c984-4114-ad21-63f33dfb06fc"
        },
        "item": {
          "id": "9d398dd6-676e-4edc-9105-a2723629f4bb",
          "name": "Validate New User should not be able to  register to OncoConnect with password missing lowercase characters",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"MADHU\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5db80bee-f9fc-4b79-896f-88cdb42a0cb0",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5e0a3487-939e-4891-a7f6-b73486d9c975",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "29c5decc-b4e1-4082-9dbb-f7efd112eb62",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e273ba08-2bb1-48db-8299-6dc57f6839ec",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f77ed268-6199-41ec-9922-8bfd4229f301",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\",()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Error message is valid',()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                  "});"
                ],
                "_lastExecutionId": "032de219-89e1-4993-bca3-8f7eb631365e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "18336f93-bee6-4e55-9f8b-6acb3c62d88c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "800c5de3-7d73-4722-9631-ba7c0e2fb416"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b8183cad-7267-471d-aadf-d821d0688064",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"MADHU\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "189ce94a-c9f0-4937-9a90-a66e564841ea",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:32 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 357,
          "responseSize": 54
        },
        "id": "9d398dd6-676e-4edc-9105-a2723629f4bb",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "27fac54f-6e22-4ba3-8e40-9a344164bb15",
          "length": 34,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7577fd85-d191-42c1-9617-770dfbeecef8"
        },
        "item": {
          "id": "51d3f575-a422-4997-90ba-c1e5a54e8e38",
          "name": "Validate New User should not be able to  register to OncoConnect with password missing uppercase characters",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"qwerty@123\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e4338434-fc3b-4545-983b-44bece86c1bd",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9817c8ee-1cb7-4db0-86aa-d2e7d30d14c3",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7fc06314-f429-4c0a-80a6-670643ebaeb6",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1bd02301-4837-4e8c-a5aa-154664fc3127",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "865a5a4b-b1c4-4080-9e90-91846953a487",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\",()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test('Error message is valid',()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                  "});"
                ],
                "_lastExecutionId": "87e2c7cd-521d-4f40-b921-8766741745dd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1638f23f-b1ba-4549-93e2-44b6424990d3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "e8de544c-4252-4e24-9708-7537d6b90205"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9c9bec04-90a7-4fe5-aeab-5cb987cfb16e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "129",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"qwerty@123\",\n  \"first_name\": \"FirstName\",\n  \"last_name\": \"LastName\"    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "864243e7-a8a6-4380-b21a-9253402e70d0",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:32 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 345,
          "responseSize": 54
        },
        "id": "51d3f575-a422-4997-90ba-c1e5a54e8e38",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8ec3074d-ccd7-48fc-9f3c-97b3edbf5fcf",
          "length": 34,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3ebb1759-5fbf-439b-816c-ad9664069230"
        },
        "item": {
          "id": "79b8f593-a3b5-4a50-8500-0c2b8c629d20",
          "name": "Validate New User should not be able to  register to OncoConnect with invalid data",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Qwerty@123\",\n  \"first_name\": \"25\",\n  \"last_name\": \"\"    \n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "33430daa-d611-4472-936d-69f5c3131116",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a8c5c24b-c2f2-4b7b-a928-88654e1e1afd",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "23185519-d13a-4105-9e2a-272bc3fcc613",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3c0c04f7-c606-48cb-84ec-42c45f9ea3e4",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0e1e6655-cd4d-43f9-8277-74102277d5c7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\",()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Error message is valid',()=>{\r",
                  "    pm.expect(pm.response.json().message ).to.eql(\"Invalid name\");\r",
                  "});"
                ],
                "_lastExecutionId": "4d08e84c-fd03-4f13-8e4c-a727764e6f0a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8dd5992b-1cd3-4a85-9318-facefd86a3b1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "82dcb5b9-2912-42c4-81e2-3b077e24ec62"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "05c8e7fb-d077-4402-8731-78f6257fb05b",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "114",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Qwerty@123\",\n  \"first_name\": \"25\",\n  \"last_name\": \"\"    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6729b706-57d4-4532-afb8-872e14c013d5",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:32 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "43"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              110,
              97,
              109,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 281,
          "responseSize": 43
        },
        "id": "79b8f593-a3b5-4a50-8500-0c2b8c629d20",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "060ade47-88a7-424e-9f05-1d11d91b7ecc",
          "length": 34,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4485a19a-839e-4783-8a4a-2cbc2f3f14f6"
        },
        "item": {
          "id": "6d34f9c1-9acc-46cd-b50e-f80fe9e4552b",
          "name": "Validate New User should not be able to  register to OncoConnect with invalid Password",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{temporary_email}}\",\n  \"password\": \"madhu@1234\",\n  \"first_name\": \"Madhusmita\",\n  \"last_name\": \"Nath\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "be7160a6-aa06-4139-8979-1b511b85b153",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0f579912-e756-4162-a240-dea7793d7ecd",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9d2165ae-15e0-4688-a1df-e559df3bef59",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "dce807de-c6a1-4792-96da-b4d2a6f40427",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ed8f04e8-5b31-4721-bd87-cada86d27ce9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\",()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Error message is valid',()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                  "});"
                ],
                "_lastExecutionId": "0ac2546e-ed94-4cd6-b292-78cbb0a837a9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a336e723-ff31-4e49-9a96-c89f54f4bf8f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const randomPart = Math.random().toString(36).substring(2, 10); // Generates a random string\r",
                  "const mailinatorEmail = `${randomPart}@mailinator.com`;\r",
                  "pm.environment.set(\"mailinator_email\", mailinatorEmail);"
                ],
                "_lastExecutionId": "6efca595-b38f-4b4a-9292-cc5b602fa83a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "98b7051d-358c-4879-98d8-e705a874a7be",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"testuser374931@yopmail.com\",\n  \"password\": \"madhu@1234\",\n  \"first_name\": \"Madhusmita\",\n  \"last_name\": \"Nath\"\n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "341b9e86-7c01-48a4-9ce8-2a2b47ca1773",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:33 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 362,
          "responseSize": 54
        },
        "id": "6d34f9c1-9acc-46cd-b50e-f80fe9e4552b",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ef09253f-4ab5-402c-9cae-6e422fe9e0dd",
          "length": 34,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "30e55bf5-9a3e-4eea-b00a-9a6caf0fec27"
        },
        "item": {
          "id": "4994ec99-69d8-4061-887e-e96f19727a12",
          "name": "Validate User should not be able to register - Missing Field",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu@1234\",\n  \"last_name\": \"Test\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "71b69436-0203-466f-ac2e-1f8c2c186377",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6fd27318-33b0-47d9-b2b4-d83cae4a49d3",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "06d8f9f0-cb02-482e-9078-9fa4fb17a128",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "074ae9b4-f679-4dd9-9da4-c916ffbb021c",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "29e1740e-14e6-4b03-817c-df6c0ebe0e6b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\",()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Error Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "376d3f83-e7bb-40cc-8afb-21b0169fcfef"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "b6972cab-1234-4190-8e60-4f1df4fd8c76",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "f8e83341-54c7-441c-a1a9-be5ac116bc58"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ff4efd0f-4e69-41b2-b4d9-2cb5c6b89073",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "92",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"leul.ashok@floodouts.com\",\n  \"password\": \"Madhu@1234\",\n  \"last_name\": \"Test\"\n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "82d448af-9d41-43cb-b851-7859fced83a5",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:33 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 299,
          "responseSize": 53
        },
        "id": "4994ec99-69d8-4061-887e-e96f19727a12",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "10a86547-6995-479a-85a8-d0b4bbb58933",
          "length": 34,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d61b8af9-d1fb-4381-9a1e-2b1953ca277b"
        },
        "item": {
          "id": "1d216af5-ea00-4feb-8ecd-b5f1db733207",
          "name": "Validate User should not be able to register if already registered",
          "request": {
            "description": {
              "content": "This endpoint is used for registering a new user with the necessary details.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{temporary_email}}\",\n  \"password\": \"Abc@1234\",\n  \"first_name\": \"TestABC\",\n  \"last_name\": \"Xyz\"    \n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4dd6e953-29b9-42e0-a91b-8c78c37604a8",
              "name": "User registered successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f829a616-8c2b-40e4-ad5a-914b6502a7e1",
              "name": "Bad request if any required field is missing or data format is incorrect",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f6f9bcbd-1be9-40df-87b1-1466e5757d08",
              "name": "Conflict if email already exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "29a82216-c017-4e61-887d-44fce70c9fbf",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signup"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "775f6b78-c8ab-4647-befa-ebe090f98559",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\",()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(409);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Error is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Email address is already registered\");\r",
                  "});"
                ],
                "_lastExecutionId": "07f84ac3-acf9-4535-b27c-582132172f5d"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f0141efb-e0b5-449f-ac89-f85fed11af45",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "2cab4e21-ac20-4c73-8d86-0b51c4cdcce7"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is used for registering a new user with the necessary details.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "38b30daa-0c87-4de4-8f8b-220ec9b35fbf",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "122",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"testuser374931@yopmail.com\",\n  \"password\": \"Abc@1234\",\n  \"first_name\": \"TestABC\",\n  \"last_name\": \"Xyz\"    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ba949439-3b64-4a5b-b6aa-cfc8781249a9",
          "status": "Conflict",
          "code": 409,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:34 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "66"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              69,
              109,
              97,
              105,
              108,
              32,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              97,
              108,
              114,
              101,
              97,
              100,
              121,
              32,
              114,
              101,
              103,
              105,
              115,
              116,
              101,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 561,
          "responseSize": 66
        },
        "id": "1d216af5-ea00-4feb-8ecd-b5f1db733207",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Error is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b0c8ca0e-253e-4e3c-b889-3cae7cfe5d4c",
          "length": 34,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "59931bd8-2b88-4ac3-bab6-bd16f9db49a2"
        },
        "item": {
          "id": "fe60b075-c942-44bd-b2dd-57ecfd80edc9",
          "name": "Validate user should not be able to register with incorrect CRUD operation",
          "request": {
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"yasiki3786@huleos.com\",\r\n  \"password\": \"Mads@1234\",\r\n  \"first_name\": \"Madhusmita\",\r\n  \"last_name\": \"Nath\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "36367c37-4b8d-4cd0-982a-b0184056e44d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "5857da3e-4b2b-406b-81d2-fb5941c34451"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-up"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f24fd77c-3742-471a-9a8a-dbed13a8e219",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "123",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"yasiki3786@huleos.com\",\r\n  \"password\": \"Mads@1234\",\r\n  \"first_name\": \"Madhusmita\",\r\n  \"last_name\": \"Nath\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "0a9ed90f-f83c-49d7-a0e5-0afbfb24f263",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:34 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 299,
          "responseSize": 31
        },
        "id": "fe60b075-c942-44bd-b2dd-57ecfd80edc9",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5e8298a9-a4bc-4a54-9aac-51c0a75fc872",
          "length": 34,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8401e2ed-7556-4e0e-b10d-09fcb8dbc369"
        },
        "item": {
          "id": "8400c3f5-6a57-4e40-ad05-040e60b9342b",
          "name": "Validate the user should be able to confirm email successfully",
          "request": {
            "url": {
              "path": [
                "confirm-sign-up",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\":\"{{temporary_email}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "791437e2-1bf8-4b80-ab59-437bc09a42fc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Account confirmed automatically.\");\r",
                  "});"
                ],
                "_lastExecutionId": "5dc66524-a140-4af5-932f-589b2e6038d9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "confirm-sign-up",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "01c10224-de7e-45dd-a95e-6ae65ba36b86",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\":\"testuser374931@yopmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ae632666-e1d1-4e6a-9eeb-e0b23b94941b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:35 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "380"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              73,
              100,
              34,
              58,
              34,
              101,
              97,
              54,
              53,
              57,
              57,
              100,
              101,
              45,
              52,
              55,
              50,
              101,
              45,
              52,
              102,
              54,
              100,
              45,
              56,
              55,
              49,
              55,
              45,
              97,
              57,
              48,
              49,
              53,
              48,
              49,
              53,
              53,
              56,
              51,
              51,
              34,
              44,
              34,
              72,
              84,
              84,
              80,
              83,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              50,
              48,
              48,
              44,
              34,
              72,
              84,
              84,
              80,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              77,
              111,
              110,
              44,
              32,
              50,
              50,
              32,
              74,
              117,
              108,
              32,
              50,
              48,
              50,
              52,
              32,
              49,
              49,
              58,
              52,
              48,
              58,
              51,
              54,
              32,
              71,
              77,
              84,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              120,
              45,
              97,
              109,
              122,
              45,
              106,
              115,
              111,
              110,
              45,
              49,
              46,
              49,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              50,
              34,
              44,
              34,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              107,
              101,
              101,
              112,
              45,
              97,
              108,
              105,
              118,
              101,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              105,
              100,
              34,
              58,
              34,
              101,
              97,
              54,
              53,
              57,
              57,
              100,
              101,
              45,
              52,
              55,
              50,
              101,
              45,
              52,
              102,
              54,
              100,
              45,
              56,
              55,
              49,
              55,
              45,
              97,
              57,
              48,
              49,
              53,
              48,
              49,
              53,
              53,
              56,
              51,
              51,
              34,
              125,
              44,
              34,
              82,
              101,
              116,
              114,
              121,
              65,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              34,
              58,
              48,
              125,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              99,
              111,
              110,
              102,
              105,
              114,
              109,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              109,
              97,
              116,
              105,
              99,
              97,
              108,
              108,
              121,
              46,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 723,
          "responseSize": 380
        },
        "id": "8400c3f5-6a57-4e40-ad05-040e60b9342b",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6be7b7e1-a457-4cb4-8680-280ef589097e",
          "length": 34,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f40ff30f-5fa0-457e-8463-5ec78806c657"
        },
        "item": {
          "id": "c32c4493-8471-48ec-8532-6a2843513033",
          "name": "Validate the user should not be able to confirm email for not registered Email.",
          "request": {
            "url": {
              "path": [
                "confirm-sign-up",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\":\"{{mailinator_email}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e04da69d-faf3-4a4d-9697-e1070d99eccb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Error message is valid',()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"User does not exist.\");\r",
                  "});"
                ],
                "_lastExecutionId": "c570f7e9-63d7-4b5f-9c1d-97808510bea3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "28ee65c5-762d-46ab-9106-2b9b6a776e5d",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "b2bbb9b7-2470-41e1-ad9e-974ce6661314"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "confirm-sign-up",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "994e636d-bcdb-4718-944e-b5360d7cd3e1",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "43",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\":\"d3q0essv@mailinator.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ff389cf4-ffae-4bb6-9c73-58851dfd05dc",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:36 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "51"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              115,
              101,
              114,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              101,
              120,
              105,
              115,
              116,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 691,
          "responseSize": 51
        },
        "id": "c32c4493-8471-48ec-8532-6a2843513033",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1d0c142d-93ce-4750-b9a2-5f9f5e238e0b",
          "length": 34,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ea9e4216-d646-4516-92ad-4338e01e1cb3"
        },
        "item": {
          "id": "eaff416c-0f70-4cd4-a72d-cc6dbd5783cd",
          "name": "Validate the user should not be able to confirm email if data format is incorrect or required field is missing",
          "request": {
            "url": {
              "path": [
                "confirm-sign-up",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8242eed6-8081-4877-8b6d-298998ce849f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});"
                ],
                "_lastExecutionId": "df2fa7af-a265-4e03-9527-ddfa2a32e6de"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "64052856-449c-4453-b52c-c2d24eb8e45b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "dc2f9188-853c-4e3f-b69f-bc1823e79568"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "confirm-sign-up",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bf3bf979-5932-46c2-98cd-44fb4d7d551a",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "10",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ff614449-a1df-41f5-9ed5-52a02298c56a",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:37 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 539,
          "responseSize": 53
        },
        "id": "eaff416c-0f70-4cd4-a72d-cc6dbd5783cd",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "aa3b48c1-dbe2-47c3-a52e-61fd074d6f49",
          "length": 34,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4756ee21-5c20-40b7-9655-bdc5178d628e"
        },
        "item": {
          "id": "fe91e6d8-5efb-4477-ae12-6db9809b7635",
          "name": "Validate the user should not be able to confirm email if incorrect CRUD operation is used.",
          "request": {
            "url": {
              "path": [
                "confirm-sign-up",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\":\"{{temporary_email}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "597db9f4-047f-465b-902e-78e0f9ea652b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "e6541d4f-67ff-4927-ba41-2c61bb037438"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "confirm-sign-up",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e3c31801-3c38-4b37-8e8c-66b5d94e6850",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\":\"testuser374931@yopmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c5eececd-139d-454b-9132-2c700bfac57a",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:37 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 594,
          "responseSize": 31
        },
        "id": "fe91e6d8-5efb-4477-ae12-6db9809b7635",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7e5f9678-cbb4-4f88-bfcb-8d1a5bb0294d",
          "length": 34,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5927ed61-2bd3-423a-bcb3-4a04fadb2903"
        },
        "item": {
          "id": "811109c1-96f1-441c-9930-923ceec66877",
          "name": "Validate the user should not be able to confirm email if the email already exists.",
          "request": {
            "url": {
              "path": [
                "confirm-sign-up",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\" : \"japepav263@fincainc.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c3e3a1-bebf-4d7e-9740-97ac85d77df6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(409);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Email address is already registered\");\r",
                  "});"
                ],
                "_lastExecutionId": "c653e89e-b876-40a9-91f2-4589b49bc758"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "81d0a85f-c65e-4e5b-8500-8f76b560cace",
                "type": "text/javascript",
                "exec": [],
                "_lastExecutionId": "a6aa40fa-5d5a-41b1-b050-b4ca9eed1183"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "confirm-sign-up",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cb2005e4-da6f-417a-ae40-a9ee57435769",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "45",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\" : \"japepav263@fincainc.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ce7616c4-77ff-46c3-b5d9-10a07fc1d5f7",
          "status": "Conflict",
          "code": 409,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:38 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "66"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              69,
              109,
              97,
              105,
              108,
              32,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              97,
              108,
              114,
              101,
              97,
              100,
              121,
              32,
              114,
              101,
              103,
              105,
              115,
              116,
              101,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 739,
          "responseSize": 66
        },
        "id": "811109c1-96f1-441c-9930-923ceec66877",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d67448fc-861e-405b-8800-05bf5e133812",
          "length": 34,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ed1eb94c-a376-4219-ac0f-15b18d85bfe6"
        },
        "item": {
          "id": "fa2eda98-1e94-4ea5-91ef-33c09a5bd1a2",
          "name": "Validate user should be able to login using valid credentials",
          "request": {
            "description": {
              "content": "Authenticates a user and returns an authentication token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-in",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  //\"email\": \"{{temporary_email}}\",\n     \"email\" : \"madhusmitanath80@gmail.com\",\n  \"password\": \"Mads!23456\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d1b1980a-c108-4010-bfc4-58669058cc78",
              "name": "Authentication successful",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a42f7304-fd75-4e78-a8a6-f814fcbb80d6",
              "name": "Unauthorized - Invalid credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4a872482-c05d-42fb-9161-ab3a120298f4",
              "name": "Forbidden - Account inactive",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2496cb0a-4c8f-453d-b28c-e7e9d6af47b8",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6929946d-368a-436f-b0ad-e5cdecad856f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Sign in successful!!\");\r",
                  "});\r",
                  " const jsonData = pm.response.json();\r",
                  "\r",
                  "// Extract tokens from AuthenticationResult\r",
                  "const tokenType = jsonData.AuthenticationResult.TokenType || \"Bearer\";\r",
                  "const accessToken = jsonData.AuthenticationResult.AccessToken;\r",
                  "const refreshToken = jsonData.AuthenticationResult.RefreshToken;\r",
                  "\r",
                  "if (accessToken && refreshToken) {\r",
                  "    const bearerToken = `${accessToken}`;\r",
                  "    pm.environment.set(\"bearer_token\", bearerToken);\r",
                  "    pm.environment.set(\"refresh_token\", refreshToken);\r",
                  "\r",
                  "    console.log(\"Bearer token saved:\", bearerToken);\r",
                  "    console.log(\"Refresh token saved:\", refreshToken);\r",
                  "} else {\r",
                  "    console.error(\"Tokens not found in the response\");\r",
                  "}\r",
                  "\r",
                  "var response = pm.response.json();\r",
                  "var id = response.user.id;\r",
                  "\r",
                  "pm.environment.set(\"uid\",id);\r",
                  ""
                ],
                "_lastExecutionId": "28419bcc-afda-44b3-a4ec-5011cdae5f4c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e7534e99-6d85-4ec5-9066-80584f3400ec",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "5bcd7954-e8e7-41c7-9bf5-72b38c942e31"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Authenticates a user and returns an authentication token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-in",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6f110afd-af8b-422d-aa9d-412d50020a54",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "78",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \n     \"email\" : \"madhusmitanath80@gmail.com\",\n  \"password\": \"Mads!23456\"\n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "b82cba05-ffe9-41d8-a674-6bee606ae85b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:39 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "4545"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              67,
              104,
              97,
              108,
              108,
              101,
              110,
              103,
              101,
              80,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              65,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              123,
              34,
              65,
              99,
              99,
              101,
              115,
              115,
              84,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              101,
              121,
              74,
              114,
              97,
              87,
              81,
              105,
              79,
              105,
              74,
              82,
              99,
              108,
              90,
              85,
              84,
              122,
              100,
              82,
              97,
              72,
              66,
              89,
              90,
              50,
              82,
              110,
              97,
              48,
              86,
              118,
              97,
              109,
              74,
              66,
              98,
              68,
              82,
              110,
              84,
              109,
              104,
              52,
              78,
              109,
              78,
              76,
              75,
              49,
              70,
              122,
              77,
              109,
              53,
              76,
              98,
              71,
              108,
              76,
              101,
              110,
              82,
              115,
              90,
              86,
              86,
              70,
              80,
              83,
              73,
              115,
              73,
              109,
              70,
              115,
              90,
              121,
              73,
              54,
              73,
              108,
              74,
              84,
              77,
              106,
              85,
              50,
              73,
              110,
              48,
              46,
              101,
              121,
              74,
              122,
              100,
              87,
              73,
              105,
              79,
              105,
              73,
              120,
              78,
              68,
              69,
              52,
              77,
              106,
              81,
              120,
              79,
              67,
              48,
              52,
              77,
              68,
              77,
              120,
              76,
              84,
              99,
              119,
              89,
              109,
              77,
              116,
              79,
              87,
              69,
              121,
              77,
              83,
              49,
              109,
              78,
              106,
              99,
              52,
              77,
              106,
              107,
              121,
              78,
              122,
              103,
              119,
              77,
              50,
              81,
              105,
              76,
              67,
              74,
              112,
              99,
              51,
              77,
              105,
              79,
              105,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              112,
              99,
              76,
              49,
              119,
              118,
              89,
              50,
              57,
              110,
              98,
              109,
              108,
              48,
              98,
              121,
              49,
              112,
              90,
              72,
              65,
              117,
              100,
              88,
              77,
              116,
              90,
              87,
              70,
              122,
              100,
              67,
              48,
              120,
              76,
              109,
              70,
              116,
              89,
              88,
              112,
              118,
              98,
              109,
              70,
              51,
              99,
              121,
              53,
              106,
              98,
              50,
              49,
              99,
              76,
              51,
              86,
              122,
              76,
              87,
              86,
              104,
              99,
              51,
              81,
              116,
              77,
              86,
              57,
              82,
              87,
              85,
              119,
              52,
              77,
              48,
              78,
              69,
              101,
              71,
              56,
              105,
              76,
              67,
              74,
              106,
              98,
              71,
              108,
              108,
              98,
              110,
              82,
              102,
              97,
              87,
              81,
              105,
              79,
              105,
              73,
              51,
              90,
              50,
              108,
              117,
              97,
              122,
              108,
              104,
              97,
              84,
              86,
              122,
              78,
              84,
              89,
              119,
              77,
              87,
              100,
              106,
              78,
              106,
              74,
              119,
              97,
              84,
              65,
              53,
              100,
              72,
              90,
              120,
              90,
              121,
              73,
              115,
              73,
              109,
              57,
              121,
              97,
              87,
              100,
              112,
              98,
              108,
              57,
              113,
              100,
              71,
              107,
              105,
              79,
              105,
              74,
              105,
              89,
              84,
              69,
              122,
              77,
              106,
              73,
              49,
              89,
              121,
              49,
              104,
              78,
              122,
              86,
              107,
              76,
              84,
              81,
              122,
              90,
              109,
              73,
              116,
              79,
              68,
              108,
              104,
              78,
              121,
              48,
              122,
              89,
              109,
              77,
              51,
              90,
              109,
              90,
              104,
              89,
              106,
              89,
              53,
              78,
              122,
              85,
              105,
              76,
              67,
              74,
              108,
              100,
              109,
              86,
              117,
              100,
              70,
              57,
              112,
              90,
              67,
              73,
              54,
              73,
              106,
              108,
              104,
              89,
              50,
              69,
              48,
              89,
              50,
              82,
              106,
              76,
              87,
              73,
              50,
              78,
              109,
              85,
              116,
              78,
              68,
              74,
              109,
              79,
              67,
              49,
              105,
              79,
              71,
              70,
              106,
              76,
              84,
              108,
              107,
              89,
              109,
              69,
              119,
              79,
              84,
              104,
              107,
              77,
              68,
              81,
              120,
              79,
              67,
              73,
              115,
              73,
              110,
              82,
              118,
              97,
              50,
              86,
              117,
              88,
              51,
              86,
              122,
              90,
              83,
              73,
              54,
              73,
              109,
              70,
              106,
              89,
              50,
              86,
              122,
              99,
              121,
              73,
              115,
              73,
              110,
              78,
              106,
              98,
              51,
              66,
              108,
              73,
              106,
              111,
              105,
              89,
              88,
              100,
              122,
              76,
              109,
              78,
              118,
              90,
              50,
              53,
              112,
              100,
              71,
              56,
              117,
              99,
              50,
              108,
              110,
              98,
              109,
              108,
              117,
              76,
              110,
              86,
              122,
              90,
              88,
              73,
              117,
              89,
              87,
              82,
              116,
              97,
              87,
              52,
              105,
              76,
              67,
              74,
              104,
              100,
              88,
              82,
              111,
              88,
              51,
              82,
              112,
              98,
              87,
              85,
              105,
              79,
              106,
              69,
              51,
              77,
              106,
              69,
              50,
              78,
              68,
              103,
              48,
              78,
              68,
              65,
              115,
              73,
              109,
              86,
              52,
              99,
              67,
              73,
              54,
              77,
              84,
              99,
              121,
              77,
              84,
              99,
              122,
              78,
              68,
              103,
              48,
              77,
              67,
              119,
              105,
              97,
              87,
              70,
              48,
              73,
              106,
              111,
              120,
              78,
              122,
              73,
              120,
              78,
              106,
              81,
              52,
              78,
              68,
              81,
              119,
              76,
              67,
              74,
              113,
              100,
              71,
              107,
              105,
              79,
              105,
              74,
              109,
              77,
              71,
              69,
              122,
              78,
              122,
              85,
              121,
              89,
              83,
              48,
              119,
              78,
              109,
              69,
              52,
              76,
              84,
              81,
              119,
              90,
              71,
              77,
              116,
              89,
              106,
              70,
              104,
              78,
              121,
              49,
              106,
              77,
              87,
              89,
              49,
              90,
              68,
              103,
              51,
              78,
              106,
              65,
              52,
              77,
              71,
              81,
              105,
              76,
              67,
              74,
              49,
              99,
              50,
              86,
              121,
              98,
              109,
              70,
              116,
              90,
              83,
              73,
              54,
              73,
              106,
              69,
              48,
              77,
              84,
              103,
              121,
              78,
              68,
              69,
              52,
              76,
              84,
              103,
              119,
              77,
              122,
              69,
              116,
              78,
              122,
              66,
              105,
              89,
              121,
              48,
              53,
              89,
              84,
              73,
              120,
              76,
              87,
              89,
              50,
              78,
              122,
              103,
              121,
              79,
              84,
              73,
              51,
              79,
              68,
              65,
              122,
              90,
              67,
              74,
              57,
              46,
              111,
              101,
              45,
              50,
              121,
              79,
              68,
              106,
              114,
              76,
              69,
              52,
              121,
              108,
              110,
              82,
              89,
              107,
              67,
              105,
              113,
              48,
              66,
              107,
              97,
              88,
              45,
              104,
              53,
              111,
              115,
              73,
              115,
              50,
              71,
              69,
              100,
              117,
              109,
              49,
              104,
              76,
              85,
              65,
              111,
              90,
              108,
              54,
              74,
              66,
              74,
              87,
              67,
              113,
              115,
              51,
              122,
              45,
              54,
              106,
              57,
              107,
              52,
              116,
              100,
              88,
              95,
              45,
              45,
              84,
              76,
              73,
              49,
              112,
              74,
              77,
              50,
              69,
              68,
              113,
              75,
              74,
              109,
              121,
              120,
              87,
              69,
              89,
              119,
              115,
              116,
              83,
              69,
              71,
              78,
              81,
              119,
              111,
              113,
              48,
              83,
              77,
              119,
              72,
              67,
              49,
              82,
              95,
              83,
              110,
              53,
              98,
              73,
              120,
              86,
              73,
              108,
              104,
              85,
              70,
              113,
              118,
              73,
              56,
              117,
              110,
              52,
              49,
              122,
              50,
              79,
              109,
              104,
              95,
              106,
              53,
              50,
              72,
              51,
              80,
              110,
              108,
              52,
              67,
              67,
              98,
              55,
              101,
              113,
              98,
              70,
              111,
              85,
              82,
              51,
              82,
              70,
              100,
              109,
              105,
              106,
              51,
              88,
              50,
              119,
              105,
              45,
              50,
              111,
              54,
              56,
              80,
              117,
              66,
              85,
              54,
              71,
              84,
              121,
              71,
              103,
              110,
              66,
              84,
              113,
              110,
              76,
              56,
              79,
              77,
              115,
              82,
              85,
              98,
              68,
              110,
              82,
              48,
              98,
              122,
              107,
              106,
              107,
              51,
              73,
              73,
              108,
              71,
              111,
              65,
              70,
              55,
              72,
              107,
              87,
              108,
              122,
              69,
              77,
              51,
              104,
              112,
              110,
              65,
              87,
              81,
              107,
              54,
              114,
              116,
              65,
              76,
              119,
              104,
              110,
              95,
              121,
              120,
              102,
              56,
              87,
              115,
              115,
              110,
              122,
              82,
              90,
              71,
              74,
              82,
              80,
              89,
              97,
              72,
              89,
              106,
              74,
              105,
              109,
              111,
              65,
              90,
              56,
              55,
              56,
              119,
              78,
              121,
              74,
              109,
              53,
              75,
              53,
              97,
              89,
              55,
              78,
              76,
              78,
              78,
              80,
              88,
              78,
              106,
              71,
              114,
              78,
              82,
              67,
              65,
              78,
              104,
              110,
              52,
              73,
              54,
              69,
              89,
              65,
              82,
              78,
              119,
              72,
              90,
              82,
              69,
              67,
              105,
              67,
              50,
              68,
              53,
              66,
              103,
              67,
              68,
              101,
              90,
              111,
              115,
              116,
              108,
              74,
              112,
              100,
              79,
              103,
              119,
              81,
              78,
              120,
              66,
              90,
              67,
              108,
              86,
              102,
              110,
              116,
              53,
              122,
              81,
              34,
              44,
              34,
              69,
              120,
              112,
              105,
              114,
              101,
              115,
              73,
              110,
              34,
              58,
              56,
              54,
              52,
              48,
              48,
              44,
              34,
              84,
              111,
              107,
              101,
              110,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              66,
              101,
              97,
              114,
              101,
              114,
              34,
              44,
              34,
              82,
              101,
              102,
              114,
              101,
              115,
              104,
              84,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              101,
              121,
              74,
              106,
              100,
              72,
              107,
              105,
              79,
              105,
              74,
              75,
              86,
              49,
              81,
              105,
              76,
              67,
              74,
              108,
              98,
              109,
              77,
              105,
              79,
              105,
              74,
              66,
              77,
              106,
              85,
              50,
              82,
              48,
              78,
              78,
              73,
              105,
              119,
              105,
              89,
              87,
              120,
              110,
              73,
              106,
              111,
              105,
              85,
              108,
              78,
              66,
              76,
              85,
              57,
              66,
              82,
              86,
              65,
              105,
              102,
              81,
              46,
              115,
              82,
              72,
              80,
              103,
              75,
              84,
              77,
              77,
              98,
              66,
              65,
              120,
              56,
              76,
              90,
              56,
              77,
              107,
              49,
              49,
              121,
              75,
              48,
              70,
              100,
              102,
              114,
              103,
              122,
              81,
              56,
              102,
              83,
              51,
              121,
              98,
              109,
              100,
              65,
              73,
              67,
              97,
              105,
              118,
              69,
              120,
              81,
              109,
              78,
              76,
              79,
              120,
              120,
              54,
              77,
              82,
              73,
              90,
              104,
              98,
              78,
              82,
              98,
              65,
              118,
              95,
              82,
              105,
              74,
              80,
              107,
              95,
              56,
              111,
              66,
              70,
              73,
              98,
              110,
              119,
              115,
              51,
              121,
              48,
              116,
              117,
              87,
              121,
              74,
              87,
              84,
              80,
              103,
              116,
              48,
              71,
              90,
              105,
              53,
              102,
              101,
              89,
              73,
              54,
              78,
              89,
              77,
              65,
              48,
              75,
              88,
              81,
              68,
              103,
              117,
              52,
              101,
              68,
              109,
              106,
              49,
              102,
              106,
              54,
              57,
              82,
              56,
              108,
              50,
              86,
              52,
              78,
              86,
              110,
              65,
              72,
              116,
              73,
              108,
              68,
              68,
              109,
              45,
              110,
              87,
              76,
              56,
              53,
              79,
              109,
              66,
              57,
              114,
              111,
              112,
              105,
              100,
              75,
              81,
              87,
              50,
              77,
              114,
              75,
              73,
              86,
              106,
              103,
              50,
              71,
              104,
              83,
              113,
              54,
              75,
              70,
              116,
              113,
              111,
              111,
              48,
              98,
              120,
              109,
              100,
              106,
              114,
              115,
              116,
              109,
              108,
              102,
              87,
              53,
              115,
              101,
              122,
              57,
              98,
              53,
              122,
              101,
              71,
              102,
              115,
              122,
              89,
              67,
              51,
              117,
              67,
              111,
              101,
              71,
              57,
              70,
              107,
              120,
              85,
              102,
              95,
              104,
              122,
              65,
              72,
              65,
              76,
              104,
              66,
              118,
              76,
              82,
              99,
              95,
              115,
              122,
              117,
              103,
              45,
              55,
              55,
              53,
              121,
              71,
              115,
              76,
              118,
              118,
              72,
              65,
              88,
              113,
              74,
              90,
              70,
              74,
              82,
              101,
              72,
              56,
              85,
              49,
              76,
              50,
              57,
              117,
              77,
              81,
              102,
              86,
              75,
              90,
              69,
              100,
              82,
              50,
              107,
              69,
              122,
              78,
              115,
              71,
              121,
              114,
              103,
              56,
              116,
              108,
              81,
              106,
              49,
              65,
              50,
              99,
              100,
              88,
              69,
              109,
              57,
              56,
              90,
              121,
              67,
              100,
              86,
              53,
              95,
              88,
              90,
              118,
              122,
              106,
              99,
              78,
              90,
              100,
              52,
              67,
              95,
              70,
              54,
              75,
              71,
              100,
              100,
              65,
              119,
              50,
              101,
              72,
              106,
              75,
              69,
              116,
              69,
              54,
              51,
              52,
              83,
              69,
              81,
              46,
              83,
              70,
              54,
              66,
              99,
              78,
              86,
              55,
              99,
              78,
              65,
              116,
              112,
              117,
              50,
              50,
              46,
              112,
              81,
              95,
              52,
              67,
              118,
              77,
              105,
              110,
              117,
              76,
              118,
              54,
              89,
              112,
              83,
              45,
              104,
              86,
              56,
              122,
              122,
              86,
              49,
              108,
              79,
              89,
              98,
              55,
              76,
              80,
              81,
              111,
              104,
              55,
              117,
              121,
              69,
              122,
              117,
              90,
              69,
              122,
              95,
              90,
              53,
              70,
              73,
              110,
              111,
              90,
              73,
              75,
              69,
              52,
              102,
              105,
              121,
              121,
              115,
              70,
              55,
              111,
              111,
              77,
              51,
              113,
              100,
              95,
              70,
              109,
              71,
              80,
              103,
              95,
              115,
              49,
              95,
              112,
              54,
              102,
              70,
              98,
              76,
              45,
              121,
              76,
              84,
              79,
              118,
              87,
              104,
              83,
              48,
              111,
              51,
              114,
              54,
              75,
              74,
              48,
              86,
              108,
              114,
              105,
              108,
              85,
              55,
              100,
              122,
              69,
              72,
              71,
              90,
              100,
              105,
              118,
              73,
              56,
              77,
              83,
              111,
              77,
              111,
              80,
              90,
              65,
              121,
              97,
              101,
              103,
              107,
              80,
              72,
              118,
              108,
              88,
              115,
              102,
              120,
              49,
              55,
              76,
              54,
              118,
              53,
              106,
              57,
              88,
              80,
              102,
              88,
              117,
              76,
              120,
              120,
              55,
              118,
              49,
              70,
              89,
              52,
              78,
              95,
              105,
              71,
              90,
              121,
              83,
              76,
              75,
              49,
              78,
              67,
              65,
              69,
              110,
              102,
              102,
              111,
              99,
              104,
              83,
              95,
              120,
              49,
              72,
              53,
              101,
              49,
              112,
              71,
              102,
              120,
              57,
              79,
              105,
              76,
              95,
              95,
              72,
              67,
              84,
              49,
              54,
              112,
              97,
              119,
              84,
              79,
              104,
              53,
              45,
              117,
              65,
              101,
              77,
              49,
              78,
              118,
              51,
              122,
              78,
              68,
              81,
              95,
              110,
              89,
              51,
              54,
              85,
              52,
              79,
              95,
              121,
              115,
              53,
              100,
              100,
              97,
              81,
              55,
              110,
              119,
              90,
              115,
              77,
              100,
              80,
              109,
              113,
              98,
              85,
              52,
              84,
              119,
              79,
              116,
              70,
              119,
              55,
              122,
              83,
              69,
              117,
              98,
              90,
              88,
              90,
              95,
              100,
              86,
              66,
              121,
              97,
              112,
              110,
              73,
              50,
              74,
              105,
              109,
              67,
              109,
              100,
              81,
              67,
              111,
              120,
              86,
              95,
              117,
              106,
              106,
              107,
              110,
              121,
              45,
              97,
              90,
              114,
              95,
              75,
              102,
              95,
              77,
              49,
              55,
              100,
              85,
              70,
              86,
              75,
              84,
              115,
              104,
              118,
              88,
              112,
              56,
              76,
              118,
              72,
              88,
              73,
              120,
              100,
              69,
              80,
              109,
              80,
              71,
              104,
              68,
              83,
              105,
              116,
              112,
              73,
              86,
              66,
              102,
              67,
              79,
              95,
              80,
              95,
              78,
              102,
              86,
              102,
              105,
              99,
              89,
              90,
              80,
              98,
              50,
              120,
              65,
              121,
              121,
              70,
              48,
              49,
              48,
              78,
              100,
              76,
              84,
              97,
              80,
              81,
              87,
              90,
              53,
              104,
              55,
              106,
              65,
              80,
              109,
              108,
              102,
              67,
              51,
              121,
              69,
              49,
              50,
              74,
              68,
              56,
              77,
              101,
              76,
              105,
              102,
              104,
              56,
              69,
              68,
              113,
              45,
              78,
              119,
              101,
              108,
              52,
              70,
              120,
              71,
              98,
              84,
              122,
              80,
              100,
              87,
              111,
              55,
              122,
              55,
              57,
              89,
              81,
              51,
              107,
              86,
              97,
              89,
              102,
              85,
              78,
              52,
              108,
              45,
              99,
              48,
              106,
              101,
              108,
              77,
              104,
              109,
              65,
              78,
              53,
              114,
              66,
              113,
              118,
              120,
              76,
              120,
              118,
              80,
              79,
              81,
              118,
              116,
              117,
              45,
              97,
              119,
              95,
              111,
              77,
              69,
              88,
              105,
              51,
              115,
              107,
              69,
              88,
              100,
              55,
              50,
              81,
              115,
              66,
              71,
              103,
              66,
              82,
              118,
              49,
              88,
              101,
              52,
              56,
              103,
              56,
              102,
              72,
              69,
              53,
              76,
              76,
              48,
              105,
              86,
              53,
              118,
              56,
              50,
              73,
              78,
              81,
              114,
              104,
              51,
              72,
              75,
              105,
              65,
              71,
              89,
              50,
              82,
              113,
              69,
              49,
              72,
              65,
              104,
              65,
              100,
              118,
              45,
              71,
              52,
              56,
              95,
              56,
              86,
              114,
              54,
              53,
              121,
              51,
              80,
              119,
              101,
              99,
              121,
              75,
              85,
              104,
              79,
              122,
              45,
              85,
              83,
              56,
              71,
              109,
              66,
              104,
              120,
              107,
              83,
              109,
              48,
              103,
              56,
              118,
              82,
              78,
              106,
              74,
              103,
              76,
              86,
              84,
              48,
              74,
              77,
              82,
              87,
              90,
              56,
              45,
              104,
              118,
              101,
              87,
              100,
              74,
              72,
              73,
              71,
              87,
              48,
              51,
              77,
              121,
              109,
              97,
              109,
              103,
              56,
              105,
              98,
              121,
              50,
              51,
              74,
              115,
              105,
              86,
              104,
              118,
              109,
              110,
              90,
              78,
              66,
              97,
              73,
              65,
              49,
              48,
              80,
              80,
              73,
              72,
              67,
              76,
              107,
              110,
              68,
              112,
              66,
              105,
              51,
              52,
              52,
              69,
              74,
              89,
              45,
              50,
              65,
              120,
              120,
              56,
              95,
              84,
              105,
              65,
              48,
              80,
              86,
              55,
              110,
              77,
              80,
              106,
              80,
              114,
              122,
              87,
              49,
              102,
              81,
              101,
              103,
              45,
              72,
              100,
              97,
              109,
              78,
              83,
              109,
              68,
              107,
              65,
              113,
              111,
              82,
              75,
              104,
              70,
              52,
              122,
              71,
              50,
              76,
              70,
              65,
              80,
              107,
              80,
              83,
              75,
              78,
              52,
              69,
              107,
              85,
              85,
              107,
              117,
              70,
              82,
              89,
              121,
              72,
              97,
              56,
              45,
              75,
              113,
              50,
              112,
              104,
              87,
              80,
              49,
              45,
              106,
              69,
              122,
              99,
              83,
              70,
              109,
              118,
              78,
              73,
              109,
              85,
              87,
              83,
              69,
              83,
              114,
              53,
              86,
              85,
              65,
              72,
              95,
              90,
              49,
              112,
              111,
              83,
              112,
              112,
              116,
              113,
              109,
              105,
              65,
              120,
              71,
              113,
              118,
              86,
              103,
              85,
              81,
              103,
              86,
              105,
              74,
              103,
              84,
              74,
              103,
              84,
              101,
              85,
              73,
              48,
              110,
              67,
              72,
              104,
              54,
              98,
              56,
              90,
              107,
              78,
              83,
              83,
              87,
              122,
              49,
              55,
              100,
              118,
              74,
              69,
              83,
              85,
              106,
              95,
              45,
              70,
              65,
              103,
              70,
              110,
              82,
              57,
              69,
              115,
              121,
              45,
              113,
              51,
              97,
              83,
              45,
              88,
              68,
              84,
              56,
              112,
              118,
              106,
              84,
              113,
              66,
              110,
              86,
              113,
              122,
              90,
              48,
              52,
              54,
              106,
              67,
              95,
              113,
              85,
              112,
              56,
              81,
              75,
              80,
              83,
              80,
              98,
              70,
              54,
              95,
              56,
              83,
              99,
              84,
              52,
              95,
              74,
              80,
              55,
              89,
              53,
              118,
              56,
              103,
              80,
              82,
              72,
              66,
              65,
              74,
              86,
              75,
              66,
              104,
              104,
              106,
              116,
              86,
              112,
              74,
              106,
              95,
              82,
              99,
              72,
              51,
              75,
              111,
              97,
              49,
              82,
              69,
              98,
              112,
              116,
              86,
              57,
              102,
              49,
              55,
              102,
              80,
              113,
              70,
              49,
              70,
              120,
              65,
              101,
              82,
              115,
              49,
              108,
              88,
              120,
              109,
              65,
              101,
              111,
              70,
              104,
              110,
              77,
              48,
              116,
              52,
              80,
              109,
              109,
              121,
              74,
              89,
              100,
              66,
              111,
              103,
              87,
              49,
              84,
              120,
              110,
              52,
              119,
              53,
              95,
              79,
              50,
              122,
              89,
              74,
              77,
              116,
              101,
              54,
              105,
              48,
              83,
              109,
              97,
              86,
              86,
              102,
              50,
              72,
              116,
              99,
              45,
              78,
              97,
              66,
              108,
              119,
              80,
              73,
              77,
              71,
              88,
              53,
              83,
              113,
              65,
              114,
              80,
              99,
              95,
              54,
              115,
              90,
              113,
              121,
              97,
              57,
              112,
              97,
              95,
              45,
              74,
              95,
              89,
              90,
              108,
              110,
              81,
              116,
              78,
              56,
              107,
              116,
              112,
              78,
              55,
              117,
              67,
              121,
              65,
              71,
              69,
              88,
              105,
              52,
              84,
              118,
              109,
              100,
              48,
              57,
              70,
              56,
              86,
              50,
              101,
              52,
              100,
              99,
              121,
              76,
              88,
              102,
              117,
              72,
              107,
              114,
              107,
              113,
              66,
              121,
              81,
              104,
              109,
              84,
              111,
              53,
              79,
              81,
              117,
              74,
              106,
              85,
              115,
              77,
              48,
              103,
              50,
              49,
              116,
              112,
              73,
              104,
              75,
              118,
              78,
              57,
              118,
              107,
              85,
              87,
              105,
              122,
              105,
              77,
              74,
              65,
              76,
              102,
              80,
              74,
              116,
              82,
              87,
              66,
              102,
              48,
              106,
              110,
              48,
              103,
              121,
              107,
              95,
              121,
              106,
              57,
              71,
              120,
              122,
              122,
              87,
              100,
              56,
              121,
              75,
              113,
              57,
              51,
              72,
              77,
              83,
              118,
              51,
              110,
              78,
              110,
              57,
              72,
              45,
              56,
              117,
              81,
              74,
              110,
              84,
              67,
              111,
              85,
              106,
              102,
              69,
              100,
              104,
              88,
              100,
              50,
              68,
              99,
              103,
              97,
              112,
              79,
              103,
              48,
              70,
              112,
              100,
              71,
              55,
              76,
              49,
              109,
              111,
              67,
              79,
              79,
              84,
              121,
              89,
              110,
              68,
              100,
              105,
              80,
              87,
              48,
              104,
              103,
              66,
              55,
              65,
              51,
              107,
              118,
              81,
              117,
              66,
              84,
              100,
              103,
              115,
              56,
              116,
              112,
              50,
              118,
              110,
              88,
              55,
              99,
              49,
              117,
              75,
              50,
              121,
              72,
              119,
              117,
              102,
              89,
              81,
              100,
              52,
              81,
              75,
              52,
              54,
              117,
              89,
              119,
              120,
              100,
              98,
              97,
              101,
              67,
              77,
              99,
              115,
              75,
              90,
              78,
              70,
              101,
              102,
              100,
              111,
              104,
              71,
              105,
              84,
              109,
              104,
              45,
              66,
              50,
              89,
              105,
              102,
              77,
              45,
              97,
              98,
              87,
              45,
              106,
              54,
              121,
              110,
              69,
              120,
              117,
              80,
              117,
              66,
              115,
              82,
              52,
              81,
              109,
              119,
              75,
              56,
              77,
              88,
              55,
              106,
              103,
              78,
              49,
              70,
              100,
              78,
              110,
              113,
              105,
              101,
              56,
              119,
              54,
              73,
              83,
              90,
              66,
              80,
              107,
              69,
              90,
              80,
              99,
              79,
              50,
              69,
              87,
              80,
              86,
              100,
              49,
              80,
              57,
              110,
              78,
              112,
              55,
              57,
              69,
              116,
              88,
              117,
              74,
              73,
              66,
              112,
              81,
              98,
              116,
              112,
              53,
              98,
              51,
              122,
              121,
              109,
              75,
              83,
              66,
              85,
              108,
              53,
              73,
              46,
              79,
              74,
              119,
              70,
              52,
              48,
              79,
              49,
              72,
              72,
              57,
              77,
              79,
              116,
              108,
              88,
              108,
              106,
              111,
              112,
              87,
              119,
              34,
              44,
              34,
              73,
              100,
              84,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              101,
              121,
              74,
              114,
              97,
              87,
              81,
              105,
              79,
              105,
              74,
              119,
              82,
              106,
              78,
              111,
              99,
              85,
              103,
              119,
              78,
              121,
              115,
              49,
              98,
              69,
              70,
              108,
              86,
              109,
              78,
              106,
              100,
              122,
              81,
              48,
              100,
              68,
              77,
              48,
              78,
              85,
              108,
              78,
              90,
              122,
              70,
              89,
              88,
              67,
              57,
              81,
              99,
              68,
              108,
              82,
              86,
              70,
              78,
              116,
              86,
              48,
              120,
              70,
              87,
              88,
              104,
              109,
              87,
              84,
              48,
              105,
              76,
              67,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              83,
              85,
              122,
              73,
              49,
              78,
              105,
              74,
              57,
              46,
              101,
              121,
              74,
              122,
              100,
              87,
              73,
              105,
              79,
              105,
              73,
              120,
              78,
              68,
              69,
              52,
              77,
              106,
              81,
              120,
              79,
              67,
              48,
              52,
              77,
              68,
              77,
              120,
              76,
              84,
              99,
              119,
              89,
              109,
              77,
              116,
              79,
              87,
              69,
              121,
              77,
              83,
              49,
              109,
              78,
              106,
              99,
              52,
              77,
              106,
              107,
              121,
              78,
              122,
              103,
              119,
              77,
              50,
              81,
              105,
              76,
              67,
              74,
              108,
              98,
              87,
              70,
              112,
              98,
              70,
              57,
              50,
              90,
              88,
              74,
              112,
              90,
              109,
              108,
              108,
              90,
              67,
              73,
              54,
              100,
              72,
              74,
              49,
              90,
              83,
              119,
              105,
              97,
              88,
              78,
              122,
              73,
              106,
              111,
              105,
              97,
              72,
              82,
              48,
              99,
              72,
              77,
              54,
              88,
              67,
              57,
              99,
              76,
              50,
              78,
              118,
              90,
              50,
              53,
              112,
              100,
              71,
              56,
              116,
              97,
              87,
              82,
              119,
              76,
              110,
              86,
              122,
              76,
              87,
              86,
              104,
              99,
              51,
              81,
              116,
              77,
              83,
              53,
              104,
              98,
              87,
              70,
              54,
              98,
              50,
              53,
              104,
              100,
              51,
              77,
              117,
              89,
              50,
              57,
              116,
              88,
              67,
              57,
              49,
              99,
              121,
              49,
              108,
              89,
              88,
              78,
              48,
              76,
              84,
              70,
              102,
              85,
              86,
              108,
              77,
              79,
              68,
              78,
              68,
              82,
              72,
              104,
              118,
              73,
              105,
              119,
              105,
              89,
              50,
              57,
              110,
              98,
              109,
              108,
              48,
              98,
              122,
              112,
              49,
              99,
              50,
              86,
              121,
              98,
              109,
              70,
              116,
              90,
              83,
              73,
              54,
              73,
              106,
              69,
              48,
              77,
              84,
              103,
              121,
              78,
              68,
              69,
              52,
              76,
              84,
              103,
              119,
              77,
              122,
              69,
              116,
              78,
              122,
              66,
              105,
              89,
              121,
              48,
              53,
              89,
              84,
              73,
              120,
              76,
              87,
              89,
              50,
              78,
              122,
              103,
              121,
              79,
              84,
              73,
              51,
              79,
              68,
              65,
              122,
              90,
              67,
              73,
              115,
              73,
              109,
              57,
              121,
              97,
              87,
              100,
              112,
              98,
              108,
              57,
              113,
              100,
              71,
              107,
              105,
              79,
              105,
              74,
              105,
              89,
              84,
              69,
              122,
              77,
              106,
              73,
              49,
              89,
              121,
              49,
              104,
              78,
              122,
              86,
              107,
              76,
              84,
              81,
              122,
              90,
              109,
              73,
              116,
              79,
              68,
              108,
              104,
              78,
              121,
              48,
              122,
              89,
              109,
              77,
              51,
              90,
              109,
              90,
              104,
              89,
              106,
              89,
              53,
              78,
              122,
              85,
              105,
              76,
              67,
              74,
              104,
              100,
              87,
              81,
              105,
              79,
              105,
              73,
              51,
              90,
              50,
              108,
              117,
              97,
              122,
              108,
              104,
              97,
              84,
              86,
              122,
              78,
              84,
              89,
              119,
              77,
              87,
              100,
              106,
              78,
              106,
              74,
              119,
              97,
              84,
              65,
              53,
              100,
              72,
              90,
              120,
              90,
              121,
              73,
              115,
              73,
              109,
              86,
              50,
              90,
              87,
              53,
              48,
              88,
              50,
              108,
              107,
              73,
              106,
              111,
              105,
              79,
              87,
              70,
              106,
              89,
              84,
              82,
              106,
              90,
              71,
              77,
              116,
              89,
              106,
              89,
              50,
              90,
              83,
              48,
              48,
              77,
              109,
              89,
              52,
              76,
              87,
              73,
              52,
              89,
              87,
              77,
              116,
              79,
              87,
              82,
              105,
              89,
              84,
              65,
              53,
              79,
              71,
              81,
              119,
              78,
              68,
              69,
              52,
              73,
              105,
              119,
              105,
              100,
              71,
              57,
              114,
              90,
              87,
              53,
              102,
              100,
              88,
              78,
              108,
              73,
              106,
              111,
              105,
              97,
              87,
              81,
              105,
              76,
              67,
              74,
              104,
              100,
              88,
              82,
              111,
              88,
              51,
              82,
              112,
              98,
              87,
              85,
              105,
              79,
              106,
              69,
              51,
              77,
              106,
              69,
              50,
              78,
              68,
              103,
              48,
              78,
              68,
              65,
              115,
              73,
              109,
              53,
              104,
              98,
              87,
              85,
              105,
              79,
              105,
              74,
              78,
              89,
              87,
              82,
              111,
              100,
              88,
              78,
              116,
              97,
              88,
              82,
              104,
              73,
              69,
              53,
              104,
              100,
              71,
              103,
              105,
              76,
              67,
              74,
              108,
              101,
              72,
              65,
              105,
              79,
              106,
              69,
              51,
              77,
              106,
              69,
              51,
              77,
              122,
              81,
              52,
              78,
              68,
              65,
              115,
              73,
              109,
              108,
              104,
              100,
              67,
              73,
              54,
              77,
              84,
              99,
              121,
              77,
              84,
              89,
              48,
              79,
              68,
              81,
              48,
              77,
              67,
              119,
              105,
              97,
              110,
              82,
              112,
              73,
              106,
              111,
              105,
              79,
              87,
              81,
              49,
              78,
              84,
              77,
              120,
              77,
              122,
              73,
              116,
              78,
              122,
              85,
              51,
              79,
              67,
              48,
              48,
              78,
              106,
              77,
              119,
              76,
              84,
              103,
              50,
              77,
              109,
              69,
              116,
              77,
              71,
              81,
              120,
              90,
              84,
              99,
              122,
              79,
              84,
              99,
              50,
              78,
              50,
              74,
              107,
              73,
              105,
              119,
              105,
              90,
              87,
              49,
              104,
              97,
              87,
              119,
              105,
              79,
              105,
              74,
              116,
              89,
              87,
              82,
              111,
              100,
              88,
              78,
              116,
              97,
              88,
              82,
              104,
              98,
              109,
              70,
              48,
              97,
              68,
              103,
              119,
              81,
              71,
              100,
              116,
              89,
              87,
              108,
              115,
              76,
              109,
              78,
              118,
              98,
              83,
              74,
              57,
              46,
              121,
              111,
              114,
              85,
              52,
              66,
              107,
              69,
              52,
              99,
              82,
              111,
              75,
              71,
              75,
              107,
              45,
              106,
              78,
              115,
              85,
              120,
              48,
              107,
              54,
              100,
              120,
              90,
              65,
              53,
              90,
              67,
              73,
              57,
              65,
              68,
              111,
              48,
              82,
              72,
              103,
              50,
              120,
              45,
              51,
              101,
              110,
              69,
              120,
              71,
              55,
              101,
              74,
              87,
              104,
              104,
              118,
              105,
              79,
              84,
              57,
              85,
              65,
              116,
              76,
              54,
              69,
              80,
              110,
              113,
              99,
              65,
              79,
              80,
              84,
              119,
              88,
              69,
              112,
              88,
              116,
              115,
              97,
              68,
              98,
              88,
              65,
              67,
              76,
              48,
              57,
              110,
              79,
              70,
              116,
              113,
              103,
              56,
              55,
              65,
              114,
              73,
              88,
              86,
              79,
              97,
              117,
              117,
              101,
              104,
              95,
              83,
              85,
              109,
              56,
              82,
              70,
              71,
              119,
              105,
              72,
              67,
              83,
              68,
              67,
              108,
              120,
              78,
              45,
              55,
              109,
              116,
              89,
              84,
              95,
              49,
              115,
              84,
              74,
              81,
              77,
              110,
              48,
              82,
              101,
              100,
              80,
              118,
              84,
              110,
              72,
              66,
              89,
              113,
              69,
              121,
              107,
              71,
              50,
              50,
              70,
              72,
              67,
              100,
              74,
              114,
              118,
              76,
              103,
              105,
              109,
              101,
              79,
              114,
              68,
              122,
              78,
              116,
              67,
              119,
              102,
              111,
              71,
              82,
              114,
              77,
              78,
              82,
              117,
              100,
              57,
              79,
              48,
              53,
              45,
              107,
              108,
              75,
              104,
              70,
              74,
              122,
              97,
              107,
              68,
              119,
              120,
              114,
              95,
              70,
              107,
              49,
              116,
              49,
              81,
              67,
              112,
              86,
              116,
              120,
              114,
              49,
              84,
              95,
              119,
              77,
              116,
              109,
              77,
              95,
              109,
              65,
              112,
              98,
              116,
              50,
              85,
              112,
              71,
              73,
              115,
              107,
              104,
              105,
              80,
              85,
              85,
              106,
              98,
              106,
              100,
              105,
              79,
              50,
              122,
              103,
              78,
              112,
              67,
              79,
              117,
              102,
              106,
              105,
              86,
              100,
              45,
              54,
              45,
              109,
              90,
              84,
              81,
              84,
              105,
              72,
              75,
              117,
              110,
              97,
              119,
              109,
              73,
              106,
              122,
              115,
              81,
              120,
              116,
              109,
              74,
              50,
              83,
              95,
              116,
              98,
              110,
              49,
              115,
              51,
              97,
              49,
              121,
              121,
              48,
              53,
              77,
              65,
              77,
              106,
              113,
              82,
              118,
              83,
              90,
              73,
              71,
              65,
              101,
              88,
              53,
              115,
              121,
              99,
              67,
              88,
              112,
              99,
              88,
              97,
              115,
              67,
              117,
              102,
              66,
              90,
              95,
              70,
              53,
              100,
              76,
              65,
              34,
              125,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              105,
              103,
              110,
              32,
              105,
              110,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              33,
              33,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              101,
              98,
              101,
              54,
              99,
              50,
              49,
              45,
              97,
              48,
              102,
              102,
              45,
              52,
              54,
              102,
              57,
              45,
              56,
              51,
              48,
              51,
              45,
              49,
              99,
              53,
              57,
              99,
              49,
              54,
              97,
              48,
              57,
              48,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              109,
              97,
              100,
              104,
              117,
              115,
              109,
              105,
              116,
              97,
              110,
              97,
              116,
              104,
              56,
              48,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              110,
              95,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              100,
              105,
              99,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              49,
              51,
              102,
              51,
              102,
              101,
              97,
              45,
              99,
              101,
              50,
              98,
              45,
              52,
              100,
              54,
              53,
              45,
              57,
              102,
              98,
              55,
              45,
              101,
              49,
              52,
              101,
              100,
              57,
              51,
              102,
              56,
              54,
              55,
              51,
              34,
              44,
              34,
              116,
              97,
              115,
              107,
              95,
              105,
              100,
              34,
              58,
              34,
              102,
              98,
              55,
              51,
              48,
              50,
              53,
              55,
              45,
              56,
              49,
              98,
              53,
              45,
              52,
              100,
              52,
              54,
              45,
              56,
              55,
              50,
              100,
              45,
              100,
              101,
              53,
              57,
              48,
              97,
              100,
              101,
              52,
              100,
              53,
              49,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              34,
              58,
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              115,
              116,
              97,
              103,
              101,
              34,
              58,
              34,
              118,
              97,
              114,
              105,
              97,
              110,
              116,
              95,
              102,
              105,
              108,
              101,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              120,
              116,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              110,
              110,
              111,
              116,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              34,
              125,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1239,
          "responseSize": 4545
        },
        "id": "fa2eda98-1e94-4ea5-91ef-33c09a5bd1a2",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "265b075b-1df6-4d72-b87a-dae3e9c4515a",
          "length": 34,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ac33cd88-4928-4584-8664-b4279478e349"
        },
        "item": {
          "id": "20471029-b4e7-4053-b1dc-261b3f638209",
          "name": "Validate user should not be able to login using invalid email",
          "request": {
            "description": {
              "content": "Authenticates a user and returns an authentication token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-in",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n//   \"email\": \"{{temporary_email}}\",\n    \"email\" : \"madhusm0@gmail.com\",\n  \"password\": \"Abc@1234\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b03bd3b0-5a68-4ce7-a79c-c21ab3663b7a",
              "name": "Authentication successful",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0b444952-2eeb-4976-a0e5-76c89d37b0d6",
              "name": "Unauthorized - Invalid credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "847da9a4-cce1-4b2e-aeaa-68d1bbc835e1",
              "name": "Forbidden - Account inactive",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7718dad3-22ce-4f47-a14c-e4df53d4c660",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "10debe75-6f32-4516-b77c-1939e2e39798",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Email address is not registered\");\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "b18b7509-856e-4ac8-9313-5e9a8ac87fe7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4965debc-11e9-4dc0-8d37-f0691c43f55d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "f6ab6ba2-5de9-4647-8aa8-ab1a5ad25918"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Authenticates a user and returns an authentication token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-in",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c5be6df7-1077-47d8-bca3-35eed85da736",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "65",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n\n    \"email\" : \"madhusm0@gmail.com\",\n  \"password\": \"Abc@1234\"\n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "051ae63b-4110-4c81-a314-f311bbf8bab7",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:39 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              69,
              109,
              97,
              105,
              108,
              32,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              114,
              101,
              103,
              105,
              115,
              116,
              101,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 667,
          "responseSize": 62
        },
        "id": "20471029-b4e7-4053-b1dc-261b3f638209",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d509b93c-7969-4cca-ba65-bd8f056be695",
          "length": 34,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ba5a4afe-f40a-44e7-b08f-17fb23dfe01e"
        },
        "item": {
          "id": "354fb61c-29a7-462a-92ee-a4a959db8533",
          "name": "Validate user should not be able to login using invalid password",
          "request": {
            "description": {
              "content": "Authenticates a user and returns an authentication token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-in",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n   \"email\": \"{{temporary_email}}\",\n //   \"email\" : \"madhusmitanath80@gmail.com \",\n  \"password\": \"Mads\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1c3faf1b-32d5-433c-afed-2a6598655759",
              "name": "Authentication successful",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "848c19c2-1cee-442c-8e4c-07fede047a77",
              "name": "Unauthorized - Invalid credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8a3ecd9d-ddc5-4f17-9749-bd2cc7a1abdb",
              "name": "Forbidden - Account inactive",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "de4e3e02-94aa-44bc-952e-f229076b008a",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "707fe6b4-31fe-42df-8639-5c849b1d8b6e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Error message is valid',()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                  "});"
                ],
                "_lastExecutionId": "10f6753c-bd13-4d8f-87f0-98db0dc1f67b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "58f4e5fa-aa7b-41a2-832a-76eff9f2757e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "fc9db31e-c0f7-4af2-87de-1cb2348b1cdd"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Authenticates a user and returns an authentication token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-in",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d12ab150-eb8d-4d68-ab7d-8e859cd527fa",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "68",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n   \"email\": \"testuser374931@yopmail.com\",\n \n  \"password\": \"Mads\"\n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "bb5a7a25-0f56-4ac0-bfa5-31b64bbaeafd",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:41 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1089,
          "responseSize": 54
        },
        "id": "354fb61c-29a7-462a-92ee-a4a959db8533",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ba24257c-1c60-4e51-8563-7f518ef60fc2",
          "length": 34,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c9d5db2f-ceff-4d88-b825-8d746876d90f"
        },
        "item": {
          "id": "cb9fec5b-d8cd-4682-ae74-0c0237eddc16",
          "name": "Validate user should not be able to login using missing password",
          "request": {
            "description": {
              "content": "Authenticates a user and returns an authentication token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-in",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{temporary_email}}\"\n    // \"email\" : \"madhusmitanath80@gmail.com\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cb64d540-7d9f-4cf5-8f60-87ef8a6f4716",
              "name": "Authentication successful",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fc1ac876-28d9-4aca-99b9-d66c35d68f7d",
              "name": "Unauthorized - Invalid credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6fefbc1d-a8f3-467c-8beb-bfecac451bc5",
              "name": "Forbidden - Account inactive",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a296ae72-1657-48e3-80f2-14688c5ee0c9",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "32d6adab-0884-4d72-ab8c-6b9009ca3ba1",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "19cbcadf-74dd-4907-b5ab-c6acb82aef0e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "085dd30a-3a55-4b31-a5e2-60bb34114972",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "b89f1c4d-2fab-4448-9e80-38326858e9ce"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Authenticates a user and returns an authentication token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-in",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "634e3515-fc51-4f13-8f6d-5f8cd0a0a81c",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "48",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"testuser374931@yopmail.com\"\n    \n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "62fb360a-fa39-448b-8951-4a11060c5c07",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:42 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 805,
          "responseSize": 53
        },
        "id": "cb9fec5b-d8cd-4682-ae74-0c0237eddc16",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "51149640-144a-4784-bad6-4c0727366d39",
          "length": 34,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d4324516-f997-4da4-8549-c7a0d0508d4b"
        },
        "item": {
          "id": "0a7a6932-0997-4c72-ac78-b15502edb572",
          "name": "Validate user should not be able to login using missing email",
          "request": {
            "description": {
              "content": "Authenticates a user and returns an authentication token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-in",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n//   \"email\": \"{{temporary_email}}\",\n    \"password\":\"Mads!234\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3dcf4306-aa8b-4e1c-8080-d502b3cf031f",
              "name": "Authentication successful",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9669a2c0-6b67-4151-8940-6dc016791195",
              "name": "Unauthorized - Invalid credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "621704fa-328c-4ec4-bd1a-7abf54745afd",
              "name": "Forbidden - Account inactive",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "02cb135b-0a93-421a-83d8-f8a8aa1c36d4",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2a4d0c4-7eea-4398-839b-6067b5bb6c29",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid', () => {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Unknown error occurred\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "e7685eb9-dca9-4fcd-9c04-a4549ff22bba"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4c8663a3-0f53-4e17-a8a6-4c4aecc0fcd3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "eb23530d-dee9-458c-8f7c-38c45fca7636"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Authenticates a user and returns an authentication token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-in",
              ""
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9be2cd87-da34-45a6-8ba8-e7c206027b1e",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "30",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n\n    \"password\":\"Mads!234\"\n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "553370d4-c56e-4832-bf77-0d396b7877f7",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              110,
              107,
              110,
              111,
              119,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 647,
          "responseSize": 53
        },
        "id": "0a7a6932-0997-4c72-ac78-b15502edb572",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "509e892b-630e-4133-8652-84c9c2f29811",
          "length": 34,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6b5dfd28-ab8d-4066-babc-9407820fad15"
        },
        "item": {
          "id": "7f2539a5-09e3-4a2d-987b-ea5f72589909",
          "name": "Validate user should not be able to log in  with incorrect credentials",
          "request": {
            "description": {
              "content": "Authenticates a user and returns an authentication token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-in"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{temporary_email}}\",\n  \"password\": \"Madhusmita@12\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0df4b548-969f-4893-b305-662afeb1d2ee",
              "name": "Authentication successful",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "90da0117-2cc9-4356-9c8a-6d00ddfb042d",
              "name": "Unauthorized - Invalid credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "85399dd9-8d9b-476b-b619-4e44c73fcc9e",
              "name": "Forbidden - Account inactive",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "936278e4-411a-4a1e-9dae-c4da7ae81f58",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "065d97eb-805a-428a-bd5b-cd7918abfb62",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test('Error message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Password is not correct\");\r",
                  "});"
                ],
                "_lastExecutionId": "ca298f1c-9858-4c6a-8f4f-619d89e4e13f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3ee5e971-ada2-46b4-8fa7-5f3a770f3d41",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "2b128ee9-b829-4f23-8492-9491578fe31e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Authenticates a user and returns an authentication token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-in"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "73136e12-7c6c-4835-b9a0-9fb30fc5ba71",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "74",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"testuser374931@yopmail.com\",\n  \"password\": \"Madhusmita@12\"\n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "84778b05-958e-4494-afef-d2762231655d",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 844,
          "responseSize": 54
        },
        "id": "7f2539a5-09e3-4a2d-987b-ea5f72589909",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c54a6238-c257-41a6-aa93-260740e87d05",
          "length": 34,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6fb9ef38-1c89-4bd6-8527-f5b37583b62e"
        },
        "item": {
          "id": "af23618d-d3e8-4239-afb4-c196ceaa8621",
          "name": "Validate user should not be able to log in  if user is not confirmed.",
          "request": {
            "description": {
              "content": "Authenticates a user and returns an authentication token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "sign-in"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"hofyipedri@gufum.com\",\n  \"password\": \"GodSigma@1234\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d32adbde-400e-4e52-95a3-ce471cae6320",
              "name": "Authentication successful",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"last_login\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a19e7e7e-fd6e-4301-b6a9-a7d5d906afdf",
              "name": "Unauthorized - Invalid credentials",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f87e03a3-6516-4985-adda-a7172e725385",
              "name": "Forbidden - Account inactive",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fc46a332-5c11-43c8-a011-e24147ca18b7",
              "name": "In case of server fails to respond",
              "originalRequest": {
                "url": {
                  "path": [
                    "signin"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": \"<string>\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1fae4b1d-d4e3-4d93-9a46-41040185c180",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(403);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test('Error Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"User has not been confirmed by the admin\");\r",
                  "});"
                ],
                "_lastExecutionId": "abb38669-1bc9-4ef8-96a6-1de3b22fa041"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "383ae575-a43e-4303-a43b-852878b33132",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "acbc1265-f95b-40a1-83c5-7d3fd805149b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Authenticates a user and returns an authentication token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-in"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "acfe87ec-68ac-4bd0-acd3-8bd49adbd9be",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "68",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"hofyipedri@gufum.com\",\n  \"password\": \"GodSigma@1234\"\n}",
            "options": {
              "raw": {
                "headerFamily": "json",
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "fcabf9f4-b7b8-4bf5-a8dd-ce353f07e565",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "71"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              115,
              101,
              114,
              32,
              104,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              98,
              101,
              101,
              110,
              32,
              99,
              111,
              110,
              102,
              105,
              114,
              109,
              101,
              100,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              97,
              100,
              109,
              105,
              110,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 538,
          "responseSize": 71
        },
        "id": "af23618d-d3e8-4239-afb4-c196ceaa8621",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Error Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7a9560c4-3787-41cf-a6bb-77fdddea19e9",
          "length": 34,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "be8f0fe1-22e9-447d-837d-2332ad19ca39"
        },
        "item": {
          "id": "e972846b-482e-4e00-9ebe-92349bfdf055",
          "name": "Validate user should not be able to  login with incorrect CRUD operation",
          "request": {
            "url": {
              "path": [
                "sign-in"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{temporary_email}}\",\r\n  \"password\": \"Abc@1234\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "36d7552d-950b-4a51-86f3-8b7c4f3be323",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "a52d2d95-ffca-483c-ba34-4c75a47e4abf"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-in"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6f4e16da-24c6-4559-a054-36b3e3166ced",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "72",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"testuser374931@yopmail.com\",\r\n  \"password\": \"Abc@1234\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c9d4c7f6-b32d-4f47-b38b-01e83e54b098",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:45 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 335,
          "responseSize": 31
        },
        "id": "e972846b-482e-4e00-9ebe-92349bfdf055",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "307e8f90-ae02-4f8e-9349-68cba67d9bf0",
          "length": 34,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4b421f29-31f2-42b7-b9cf-ae9908b3b8e8"
        },
        "item": {
          "id": "de1e9c6d-6fa8-4d63-bd51-4a4363f078d3",
          "name": "Validate user logged out successfully",
          "request": {
            "url": {
              "path": [
                "sign-out"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cf373850-6d81-4fef-a683-e0bbd3eb5ad4",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Sign out successful.\");\r",
                  "});"
                ],
                "_lastExecutionId": "1e720803-c5ec-4347-b951-12d434b57344"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5fe54598-e76f-425c-b0d9-c4d01010a575",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const token = pm.environment.get(\"bearer_token\");\r",
                  "if (token) {\r",
                  "    pm.request.headers.add({\r",
                  "        key: \"Authorization\",\r",
                  "        value: token\r",
                  "    });\r",
                  "} else {\r",
                  "    console.error(\"No Bearer token found\");\r",
                  "}\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "ef2b7ffd-1c42-44d1-bddb-f27e5e9c3eff"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-out"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxNDE4MjQxOC04MDMxLTcwYmMtOWEyMS1mNjc4MjkyNzgwM2QiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYTEzMjI1Yy1hNzVkLTQzZmItODlhNy0zYmM3ZmZhYjY5NzUiLCJldmVudF9pZCI6IjlhY2E0Y2RjLWI2NmUtNDJmOC1iOGFjLTlkYmEwOThkMDQxOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE2NDg0NDAsImV4cCI6MTcyMTczNDg0MCwiaWF0IjoxNzIxNjQ4NDQwLCJqdGkiOiJmMGEzNzUyYS0wNmE4LTQwZGMtYjFhNy1jMWY1ZDg3NjA4MGQiLCJ1c2VybmFtZSI6IjE0MTgyNDE4LTgwMzEtNzBiYy05YTIxLWY2NzgyOTI3ODAzZCJ9.oe-2yODjrLE4ylnRYkCiq0BkaX-h5osIs2GEdum1hLUAoZl6JBJWCqs3z-6j9k4tdX_--TLI1pJM2EDqKJmyxWEYwstSEGNQwoq0SMwHC1R_Sn5bIxVIlhUFqvI8un41z2Omh_j52H3Pnl4CCb7eqbFoUR3RFdmij3X2wi-2o68PuBU6GTyGgnBTqnL8OMsRUbDnR0bzkjk3IIlGoAF7HkWlzEM3hpnAWQk6rtALwhn_yxf8WssnzRZGJRPYaHYjJimoAZ878wNyJm5K5aY7NLNNPXNjGrNRCANhn4I6EYARNwHZRECiC2D5BgCDeZostlJpdOgwQNxBZClVfnt5zQ",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d45e7605-f4f6-4fd2-a92d-beb6129cf02d",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxNDE4MjQxOC04MDMxLTcwYmMtOWEyMS1mNjc4MjkyNzgwM2QiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYTEzMjI1Yy1hNzVkLTQzZmItODlhNy0zYmM3ZmZhYjY5NzUiLCJldmVudF9pZCI6IjlhY2E0Y2RjLWI2NmUtNDJmOC1iOGFjLTlkYmEwOThkMDQxOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE2NDg0NDAsImV4cCI6MTcyMTczNDg0MCwiaWF0IjoxNzIxNjQ4NDQwLCJqdGkiOiJmMGEzNzUyYS0wNmE4LTQwZGMtYjFhNy1jMWY1ZDg3NjA4MGQiLCJ1c2VybmFtZSI6IjE0MTgyNDE4LTgwMzEtNzBiYy05YTIxLWY2NzgyOTI3ODAzZCJ9.oe-2yODjrLE4ylnRYkCiq0BkaX-h5osIs2GEdum1hLUAoZl6JBJWCqs3z-6j9k4tdX_--TLI1pJM2EDqKJmyxWEYwstSEGNQwoq0SMwHC1R_Sn5bIxVIlhUFqvI8un41z2Omh_j52H3Pnl4CCb7eqbFoUR3RFdmij3X2wi-2o68PuBU6GTyGgnBTqnL8OMsRUbDnR0bzkjk3IIlGoAF7HkWlzEM3hpnAWQk6rtALwhn_yxf8WssnzRZGJRPYaHYjJimoAZ878wNyJm5K5aY7NLNNPXNjGrNRCANhn4I6EYARNwHZRECiC2D5BgCDeZostlJpdOgwQNxBZClVfnt5zQ",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "12793f01-5d99-4f08-87dd-06ece829214d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:45 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "368"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              73,
              100,
              34,
              58,
              34,
              49,
              49,
              101,
              50,
              49,
              102,
              50,
              50,
              45,
              99,
              100,
              57,
              53,
              45,
              52,
              51,
              101,
              54,
              45,
              57,
              99,
              57,
              100,
              45,
              101,
              54,
              98,
              51,
              100,
              49,
              100,
              55,
              54,
              49,
              57,
              49,
              34,
              44,
              34,
              72,
              84,
              84,
              80,
              83,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              50,
              48,
              48,
              44,
              34,
              72,
              84,
              84,
              80,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              77,
              111,
              110,
              44,
              32,
              50,
              50,
              32,
              74,
              117,
              108,
              32,
              50,
              48,
              50,
              52,
              32,
              49,
              49,
              58,
              52,
              48,
              58,
              52,
              54,
              32,
              71,
              77,
              84,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              120,
              45,
              97,
              109,
              122,
              45,
              106,
              115,
              111,
              110,
              45,
              49,
              46,
              49,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              50,
              34,
              44,
              34,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              107,
              101,
              101,
              112,
              45,
              97,
              108,
              105,
              118,
              101,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              101,
              50,
              49,
              102,
              50,
              50,
              45,
              99,
              100,
              57,
              53,
              45,
              52,
              51,
              101,
              54,
              45,
              57,
              99,
              57,
              100,
              45,
              101,
              54,
              98,
              51,
              100,
              49,
              100,
              55,
              54,
              49,
              57,
              49,
              34,
              125,
              44,
              34,
              82,
              101,
              116,
              114,
              121,
              65,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              34,
              58,
              48,
              125,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              105,
              103,
              110,
              32,
              111,
              117,
              116,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              46,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 643,
          "responseSize": 368
        },
        "id": "de1e9c6d-6fa8-4d63-bd51-4a4363f078d3",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7d4928f7-d59d-4ef2-be9d-ce8ae660fc07",
          "length": 34,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6ed2ba3e-21da-4ee1-9695-9353d7546b6e"
        },
        "item": {
          "id": "7ac7e264-f464-4d8e-af99-3d6c600fd489",
          "name": "Validate user should not be able to logged out successfully for invalid token",
          "request": {
            "url": {
              "path": [
                "sign-out"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI0NGI4YjRhOC04MDMxLTcwNjQtMGFjYy0wZGZkOTM3MDViYmUiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIyYTg5MTE0Yi01ZjAwLTQ2MjMtOGI2Yy1jYzEwODk3NzYxMzgiLCJldmVudF9pZCI6ImZiOWE5ODliLTlhMDEtNDBhNi05NzVmLWQ2YzNmYjNiY2MyNSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTcxNDQ4MDYsImV4cCI6MTcxNzE0ODQwNiwiaWF0IjoxNzE3MTQ0ODA2LCJqdGkiOiJiOGY0MmYyMC0wNGFmLTQwZjYtOWY3OS00ODY3NjI0MTI2ZWYiLCJ1c2VybmFtZSI6IjQ0YjhiNGE4LTgwMzEtNzA2NC0wYWNjLTBkZmQ5MzcwNWJiZSJ9.ZWrT7UJ9WnRBogOllKy9MqM_PvEj5U4DGEDcRubhX_fpz44y2VnLuVsDsVjSFlpvI-npnUG_b8xhZT1uL-4XWNkJcRKJNjaWQslyejbfJ_0f8TI2ikhERzES7HhmNeCWpmWl2Hc4rRUViY-I7IQvUu5zeQTnbv2IADKxvCBBkFH6RytYXlPwubRLsA4s8XKt5aiVhbj9PdpJYhdYHKQtc2L0iiEzwKRbVoqq_3ECyGNyf3vzCPBCQIojzuDSbeh7oFFJibpgtXqQIQMXDncMxZefz6eU1r_e3GqYehQGPPII7J7yd7lpyZ6vCOJgqIRdbyGDx_BntS4PhQ-Qj6Jggg",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f43ce661-5d0d-4152-bdf4-2c938399c640",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "c265b04c-9232-4964-ba53-c4c35f6a6634"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f0b082af-4385-4db5-ae5b-b96778599508",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "const token = pm.environment.get(\"bearer_token\");\r",
                  "if (token) {\r",
                  "    pm.request.headers.add({\r",
                  "        key: \"Authorization\",\r",
                  "        value: token\r",
                  "    });\r",
                  "} else {\r",
                  "    console.error(\"No Bearer token found\");\r",
                  "}\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "bfefd757-fbfd-4691-acd9-bc3d1eb2fd71"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-out"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI0NGI4YjRhOC04MDMxLTcwNjQtMGFjYy0wZGZkOTM3MDViYmUiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIyYTg5MTE0Yi01ZjAwLTQ2MjMtOGI2Yy1jYzEwODk3NzYxMzgiLCJldmVudF9pZCI6ImZiOWE5ODliLTlhMDEtNDBhNi05NzVmLWQ2YzNmYjNiY2MyNSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTcxNDQ4MDYsImV4cCI6MTcxNzE0ODQwNiwiaWF0IjoxNzE3MTQ0ODA2LCJqdGkiOiJiOGY0MmYyMC0wNGFmLTQwZjYtOWY3OS00ODY3NjI0MTI2ZWYiLCJ1c2VybmFtZSI6IjQ0YjhiNGE4LTgwMzEtNzA2NC0wYWNjLTBkZmQ5MzcwNWJiZSJ9.ZWrT7UJ9WnRBogOllKy9MqM_PvEj5U4DGEDcRubhX_fpz44y2VnLuVsDsVjSFlpvI-npnUG_b8xhZT1uL-4XWNkJcRKJNjaWQslyejbfJ_0f8TI2ikhERzES7HhmNeCWpmWl2Hc4rRUViY-I7IQvUu5zeQTnbv2IADKxvCBBkFH6RytYXlPwubRLsA4s8XKt5aiVhbj9PdpJYhdYHKQtc2L0iiEzwKRbVoqq_3ECyGNyf3vzCPBCQIojzuDSbeh7oFFJibpgtXqQIQMXDncMxZefz6eU1r_e3GqYehQGPPII7J7yd7lpyZ6vCOJgqIRdbyGDx_BntS4PhQ-Qj6Jggg",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cbfaa5e3-7b84-4604-80e4-05f774514f51",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI0NGI4YjRhOC04MDMxLTcwNjQtMGFjYy0wZGZkOTM3MDViYmUiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiIyYTg5MTE0Yi01ZjAwLTQ2MjMtOGI2Yy1jYzEwODk3NzYxMzgiLCJldmVudF9pZCI6ImZiOWE5ODliLTlhMDEtNDBhNi05NzVmLWQ2YzNmYjNiY2MyNSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTcxNDQ4MDYsImV4cCI6MTcxNzE0ODQwNiwiaWF0IjoxNzE3MTQ0ODA2LCJqdGkiOiJiOGY0MmYyMC0wNGFmLTQwZjYtOWY3OS00ODY3NjI0MTI2ZWYiLCJ1c2VybmFtZSI6IjQ0YjhiNGE4LTgwMzEtNzA2NC0wYWNjLTBkZmQ5MzcwNWJiZSJ9.ZWrT7UJ9WnRBogOllKy9MqM_PvEj5U4DGEDcRubhX_fpz44y2VnLuVsDsVjSFlpvI-npnUG_b8xhZT1uL-4XWNkJcRKJNjaWQslyejbfJ_0f8TI2ikhERzES7HhmNeCWpmWl2Hc4rRUViY-I7IQvUu5zeQTnbv2IADKxvCBBkFH6RytYXlPwubRLsA4s8XKt5aiVhbj9PdpJYhdYHKQtc2L0iiEzwKRbVoqq_3ECyGNyf3vzCPBCQIojzuDSbeh7oFFJibpgtXqQIQMXDncMxZefz6eU1r_e3GqYehQGPPII7J7yd7lpyZ6vCOJgqIRdbyGDx_BntS4PhQ-Qj6Jggg",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ae78408c-87c8-4bfc-9adc-b86b6f77fed0",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:47 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 294,
          "responseSize": 58
        },
        "id": "7ac7e264-f464-4d8e-af99-3d6c600fd489",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7bfaff2e-6a0e-4df1-8860-c4512cb17703",
          "length": 34,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f61d9550-9128-41e2-a9e7-7e2b137a28ce"
        },
        "item": {
          "id": "3d2df8ed-571e-459b-9220-03b019eb9380",
          "name": "Validate user should not be able to log out if the Token has expired",
          "request": {
            "url": {
              "path": [
                "sign-out"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TB5WJ_xJafS7ArMxfKnoqtEALVOdRZyDDtuRgrH2LAHRrL17S-2CzHEwq4lbezCFVXXAMn50txZWYEqn2Hp3fvlSmt3bEFWrF5pwUwsFp8VWoIOb1Wk-b4e_xof95_VAYb2rwu0i4haANxtw-G2OZT-Q-Fx7FjyimcMSzVvWKbc66ouua_7XP3b4jRrQjbsIrBgJcsTJfquJXNNv3OVV4VnLC5kuzgCyVACgwnhPss0M4bR3BGbilTTL_5C4OdJoKdlSAh074Eh3SG1zo6LTJDYYaf0V-q_ATsNMFMMP3XuNkWCrGl2ATk4CB0MwAyLgu-vfaT9w25N_nP2UJ3GyHQ.ExNGC4kPQo_2ufSp.A5JKSBX87-Ya4dCmffTibMGzbLSOSFf0sHHu7QL_SKVfFMBl6CGHOmk5ebRvhilwHNT3S0DX-UFWKdVylqPWHbDZgR8vUSwWqFeK_4tMp3Jiavvoi7KAh_MNH5aGQrwWlC08SVPFnVjssOsWYJgZWexJonrY2fr1ESEmYndmfpEFDpmRqC_WNXlITOGZoHJ4zTkjf96vl_Tl-_ssW8ZQ_tzy7DlDiTKe7JeI_KAhGJkUSiPwbeQUQFRYT0rOqSaykl2etaMv73XW71FbBt2ti3PCeyGsESYURWoFpW9CgeJHqjTVkTHMSIwuB0zbgpZ_JRDH-QIO1378f5hHax8iB4Nv0uFocUcksScbWlu6Cf7BDXMHew0wUoXo0nPftSEiXe4QtyQDx_H6gHDZC3ZhGKmWWu8XP6rAp7Uh1XPudx7mogsCc1kAwis3fbfwsaGiCJhv8_fAmp5GfcLS_qjig-_IL8aOz8aG60KjjzeAOwpi8j9jQAO2Dbq7e55T41dZ5LK0p7Ckk2zoJlAE9xSPBL894b_eTMStRMVK_Ys1x2aLLt2BPVUREcSOb-jIh7fzJ8yin4cFKJtMAUwBJmmTxwqN0NrD3qRXEVu0O6_RgdkEqZGyGLJS0V2l2LD2OAcRixc-6S8bX7Z2_b7C_fSBl88MqPVRPOGmROVdbbr3R__9QLAOwmb6UKJ_h8NaNQ8Q6ReTjshb1d93W2lvFWS8gDz2bpICHvK-FrgrO4wa3S9wpjrfZUvXKoJxi0_vNg7-kTf_bJE4y77EsBP3-Bd7t_BkfdkBA6tugVh_M_EJb2ciGGtV8LfLXtm_Fv0tQGowihuQdRtEytj7nE2soD1ni8Tqt1YRF5eqi4dzb4qAS2-ofk4FxdXvCMIsmVZ-ESw-FOynXdTitb7LcNcB3TGHpcjfPfkRvap-cFlVcHmaRW2IzAcwIUmkPRLD9lVjPWoB0akhDqC7Gw72z5yAerSJzqroj2SElP0VuSoxAZvCste6Oai1fk2urFdPLwqn74ddnOVq9HTKMveyuGfA-JnpzjgB5e11IQleMETGF63qSPNh3n3EQLNC69zpLiIDn5ng-F-869EcEOMWwV1Z75mnYUU0rNcCfGnxzW8_eqbQ-tlBcu5oolhrSu1fDIocSx2a7oBARt4-O-AYRvHLqxyxBcNqiCcnF9hnyRKJE6cl_Hb561WauwZH4nDAFmK6_KbqxVCuAdEWMYn9pknl8e7siLoa-P07HFQZCWPfqH5_dB1C4QZ3O1y2rxcEHXHFDmENxiSZY6Hb-hDjAoLjYiKizTMHXP12ClaN34NtrjD6kUfgn6DHRNynezVMxaI.ZNqwRdcFFkSt6GesuuYpXw",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0ae65264-f67e-49e3-bd89-95669a4991fc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().status).to.eql(\"error\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "ff8042e8-88be-4a56-967c-2c45e09973a2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-out"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TB5WJ_xJafS7ArMxfKnoqtEALVOdRZyDDtuRgrH2LAHRrL17S-2CzHEwq4lbezCFVXXAMn50txZWYEqn2Hp3fvlSmt3bEFWrF5pwUwsFp8VWoIOb1Wk-b4e_xof95_VAYb2rwu0i4haANxtw-G2OZT-Q-Fx7FjyimcMSzVvWKbc66ouua_7XP3b4jRrQjbsIrBgJcsTJfquJXNNv3OVV4VnLC5kuzgCyVACgwnhPss0M4bR3BGbilTTL_5C4OdJoKdlSAh074Eh3SG1zo6LTJDYYaf0V-q_ATsNMFMMP3XuNkWCrGl2ATk4CB0MwAyLgu-vfaT9w25N_nP2UJ3GyHQ.ExNGC4kPQo_2ufSp.A5JKSBX87-Ya4dCmffTibMGzbLSOSFf0sHHu7QL_SKVfFMBl6CGHOmk5ebRvhilwHNT3S0DX-UFWKdVylqPWHbDZgR8vUSwWqFeK_4tMp3Jiavvoi7KAh_MNH5aGQrwWlC08SVPFnVjssOsWYJgZWexJonrY2fr1ESEmYndmfpEFDpmRqC_WNXlITOGZoHJ4zTkjf96vl_Tl-_ssW8ZQ_tzy7DlDiTKe7JeI_KAhGJkUSiPwbeQUQFRYT0rOqSaykl2etaMv73XW71FbBt2ti3PCeyGsESYURWoFpW9CgeJHqjTVkTHMSIwuB0zbgpZ_JRDH-QIO1378f5hHax8iB4Nv0uFocUcksScbWlu6Cf7BDXMHew0wUoXo0nPftSEiXe4QtyQDx_H6gHDZC3ZhGKmWWu8XP6rAp7Uh1XPudx7mogsCc1kAwis3fbfwsaGiCJhv8_fAmp5GfcLS_qjig-_IL8aOz8aG60KjjzeAOwpi8j9jQAO2Dbq7e55T41dZ5LK0p7Ckk2zoJlAE9xSPBL894b_eTMStRMVK_Ys1x2aLLt2BPVUREcSOb-jIh7fzJ8yin4cFKJtMAUwBJmmTxwqN0NrD3qRXEVu0O6_RgdkEqZGyGLJS0V2l2LD2OAcRixc-6S8bX7Z2_b7C_fSBl88MqPVRPOGmROVdbbr3R__9QLAOwmb6UKJ_h8NaNQ8Q6ReTjshb1d93W2lvFWS8gDz2bpICHvK-FrgrO4wa3S9wpjrfZUvXKoJxi0_vNg7-kTf_bJE4y77EsBP3-Bd7t_BkfdkBA6tugVh_M_EJb2ciGGtV8LfLXtm_Fv0tQGowihuQdRtEytj7nE2soD1ni8Tqt1YRF5eqi4dzb4qAS2-ofk4FxdXvCMIsmVZ-ESw-FOynXdTitb7LcNcB3TGHpcjfPfkRvap-cFlVcHmaRW2IzAcwIUmkPRLD9lVjPWoB0akhDqC7Gw72z5yAerSJzqroj2SElP0VuSoxAZvCste6Oai1fk2urFdPLwqn74ddnOVq9HTKMveyuGfA-JnpzjgB5e11IQleMETGF63qSPNh3n3EQLNC69zpLiIDn5ng-F-869EcEOMWwV1Z75mnYUU0rNcCfGnxzW8_eqbQ-tlBcu5oolhrSu1fDIocSx2a7oBARt4-O-AYRvHLqxyxBcNqiCcnF9hnyRKJE6cl_Hb561WauwZH4nDAFmK6_KbqxVCuAdEWMYn9pknl8e7siLoa-P07HFQZCWPfqH5_dB1C4QZ3O1y2rxcEHXHFDmENxiSZY6Hb-hDjAoLjYiKizTMHXP12ClaN34NtrjD6kUfgn6DHRNynezVMxaI.ZNqwRdcFFkSt6GesuuYpXw",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cd5d8fe5-98c7-40cf-bbd8-0570eb0c5e70",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TB5WJ_xJafS7ArMxfKnoqtEALVOdRZyDDtuRgrH2LAHRrL17S-2CzHEwq4lbezCFVXXAMn50txZWYEqn2Hp3fvlSmt3bEFWrF5pwUwsFp8VWoIOb1Wk-b4e_xof95_VAYb2rwu0i4haANxtw-G2OZT-Q-Fx7FjyimcMSzVvWKbc66ouua_7XP3b4jRrQjbsIrBgJcsTJfquJXNNv3OVV4VnLC5kuzgCyVACgwnhPss0M4bR3BGbilTTL_5C4OdJoKdlSAh074Eh3SG1zo6LTJDYYaf0V-q_ATsNMFMMP3XuNkWCrGl2ATk4CB0MwAyLgu-vfaT9w25N_nP2UJ3GyHQ.ExNGC4kPQo_2ufSp.A5JKSBX87-Ya4dCmffTibMGzbLSOSFf0sHHu7QL_SKVfFMBl6CGHOmk5ebRvhilwHNT3S0DX-UFWKdVylqPWHbDZgR8vUSwWqFeK_4tMp3Jiavvoi7KAh_MNH5aGQrwWlC08SVPFnVjssOsWYJgZWexJonrY2fr1ESEmYndmfpEFDpmRqC_WNXlITOGZoHJ4zTkjf96vl_Tl-_ssW8ZQ_tzy7DlDiTKe7JeI_KAhGJkUSiPwbeQUQFRYT0rOqSaykl2etaMv73XW71FbBt2ti3PCeyGsESYURWoFpW9CgeJHqjTVkTHMSIwuB0zbgpZ_JRDH-QIO1378f5hHax8iB4Nv0uFocUcksScbWlu6Cf7BDXMHew0wUoXo0nPftSEiXe4QtyQDx_H6gHDZC3ZhGKmWWu8XP6rAp7Uh1XPudx7mogsCc1kAwis3fbfwsaGiCJhv8_fAmp5GfcLS_qjig-_IL8aOz8aG60KjjzeAOwpi8j9jQAO2Dbq7e55T41dZ5LK0p7Ckk2zoJlAE9xSPBL894b_eTMStRMVK_Ys1x2aLLt2BPVUREcSOb-jIh7fzJ8yin4cFKJtMAUwBJmmTxwqN0NrD3qRXEVu0O6_RgdkEqZGyGLJS0V2l2LD2OAcRixc-6S8bX7Z2_b7C_fSBl88MqPVRPOGmROVdbbr3R__9QLAOwmb6UKJ_h8NaNQ8Q6ReTjshb1d93W2lvFWS8gDz2bpICHvK-FrgrO4wa3S9wpjrfZUvXKoJxi0_vNg7-kTf_bJE4y77EsBP3-Bd7t_BkfdkBA6tugVh_M_EJb2ciGGtV8LfLXtm_Fv0tQGowihuQdRtEytj7nE2soD1ni8Tqt1YRF5eqi4dzb4qAS2-ofk4FxdXvCMIsmVZ-ESw-FOynXdTitb7LcNcB3TGHpcjfPfkRvap-cFlVcHmaRW2IzAcwIUmkPRLD9lVjPWoB0akhDqC7Gw72z5yAerSJzqroj2SElP0VuSoxAZvCste6Oai1fk2urFdPLwqn74ddnOVq9HTKMveyuGfA-JnpzjgB5e11IQleMETGF63qSPNh3n3EQLNC69zpLiIDn5ng-F-869EcEOMWwV1Z75mnYUU0rNcCfGnxzW8_eqbQ-tlBcu5oolhrSu1fDIocSx2a7oBARt4-O-AYRvHLqxyxBcNqiCcnF9hnyRKJE6cl_Hb561WauwZH4nDAFmK6_KbqxVCuAdEWMYn9pknl8e7siLoa-P07HFQZCWPfqH5_dB1C4QZ3O1y2rxcEHXHFDmENxiSZY6Hb-hDjAoLjYiKizTMHXP12ClaN34NtrjD6kUfgn6DHRNynezVMxaI.ZNqwRdcFFkSt6GesuuYpXw",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "90bcdc6c-3614-4cac-ad0a-3d25ec74340d",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:47 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 370,
          "responseSize": 58
        },
        "id": "3d2df8ed-571e-459b-9220-03b019eb9380",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6ed56130-108a-464e-97ce-067b079bad3b",
          "length": 34,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d8436857-94c8-4ffb-bf52-faef9ddb2278"
        },
        "item": {
          "id": "64cd32a5-80d0-4312-bfbe-fbe09e7aeba6",
          "name": "Validate user should not be able to register with incorrect CRUD operation",
          "request": {
            "url": {
              "path": [
                "sign-out"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TB5WJ_xJafS7ArMxfKnoqtEALVOdRZyDDtuRgrH2LAHRrL17S-2CzHEwq4lbezCFVXXAMn50txZWYEqn2Hp3fvlSmt3bEFWrF5pwUwsFp8VWoIOb1Wk-b4e_xof95_VAYb2rwu0i4haANxtw-G2OZT-Q-Fx7FjyimcMSzVvWKbc66ouua_7XP3b4jRrQjbsIrBgJcsTJfquJXNNv3OVV4VnLC5kuzgCyVACgwnhPss0M4bR3BGbilTTL_5C4OdJoKdlSAh074Eh3SG1zo6LTJDYYaf0V-q_ATsNMFMMP3XuNkWCrGl2ATk4CB0MwAyLgu-vfaT9w25N_nP2UJ3GyHQ.ExNGC4kPQo_2ufSp.A5JKSBX87-Ya4dCmffTibMGzbLSOSFf0sHHu7QL_SKVfFMBl6CGHOmk5ebRvhilwHNT3S0DX-UFWKdVylqPWHbDZgR8vUSwWqFeK_4tMp3Jiavvoi7KAh_MNH5aGQrwWlC08SVPFnVjssOsWYJgZWexJonrY2fr1ESEmYndmfpEFDpmRqC_WNXlITOGZoHJ4zTkjf96vl_Tl-_ssW8ZQ_tzy7DlDiTKe7JeI_KAhGJkUSiPwbeQUQFRYT0rOqSaykl2etaMv73XW71FbBt2ti3PCeyGsESYURWoFpW9CgeJHqjTVkTHMSIwuB0zbgpZ_JRDH-QIO1378f5hHax8iB4Nv0uFocUcksScbWlu6Cf7BDXMHew0wUoXo0nPftSEiXe4QtyQDx_H6gHDZC3ZhGKmWWu8XP6rAp7Uh1XPudx7mogsCc1kAwis3fbfwsaGiCJhv8_fAmp5GfcLS_qjig-_IL8aOz8aG60KjjzeAOwpi8j9jQAO2Dbq7e55T41dZ5LK0p7Ckk2zoJlAE9xSPBL894b_eTMStRMVK_Ys1x2aLLt2BPVUREcSOb-jIh7fzJ8yin4cFKJtMAUwBJmmTxwqN0NrD3qRXEVu0O6_RgdkEqZGyGLJS0V2l2LD2OAcRixc-6S8bX7Z2_b7C_fSBl88MqPVRPOGmROVdbbr3R__9QLAOwmb6UKJ_h8NaNQ8Q6ReTjshb1d93W2lvFWS8gDz2bpICHvK-FrgrO4wa3S9wpjrfZUvXKoJxi0_vNg7-kTf_bJE4y77EsBP3-Bd7t_BkfdkBA6tugVh_M_EJb2ciGGtV8LfLXtm_Fv0tQGowihuQdRtEytj7nE2soD1ni8Tqt1YRF5eqi4dzb4qAS2-ofk4FxdXvCMIsmVZ-ESw-FOynXdTitb7LcNcB3TGHpcjfPfkRvap-cFlVcHmaRW2IzAcwIUmkPRLD9lVjPWoB0akhDqC7Gw72z5yAerSJzqroj2SElP0VuSoxAZvCste6Oai1fk2urFdPLwqn74ddnOVq9HTKMveyuGfA-JnpzjgB5e11IQleMETGF63qSPNh3n3EQLNC69zpLiIDn5ng-F-869EcEOMWwV1Z75mnYUU0rNcCfGnxzW8_eqbQ-tlBcu5oolhrSu1fDIocSx2a7oBARt4-O-AYRvHLqxyxBcNqiCcnF9hnyRKJE6cl_Hb561WauwZH4nDAFmK6_KbqxVCuAdEWMYn9pknl8e7siLoa-P07HFQZCWPfqH5_dB1C4QZ3O1y2rxcEHXHFDmENxiSZY6Hb-hDjAoLjYiKizTMHXP12ClaN34NtrjD6kUfgn6DHRNynezVMxaI.ZNqwRdcFFkSt6GesuuYpXw",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b4588a72-6319-4d6e-b4e5-bba1a8b91262",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "a1e2a05e-52bb-4777-aa6f-1578c4171c0e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-out"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TB5WJ_xJafS7ArMxfKnoqtEALVOdRZyDDtuRgrH2LAHRrL17S-2CzHEwq4lbezCFVXXAMn50txZWYEqn2Hp3fvlSmt3bEFWrF5pwUwsFp8VWoIOb1Wk-b4e_xof95_VAYb2rwu0i4haANxtw-G2OZT-Q-Fx7FjyimcMSzVvWKbc66ouua_7XP3b4jRrQjbsIrBgJcsTJfquJXNNv3OVV4VnLC5kuzgCyVACgwnhPss0M4bR3BGbilTTL_5C4OdJoKdlSAh074Eh3SG1zo6LTJDYYaf0V-q_ATsNMFMMP3XuNkWCrGl2ATk4CB0MwAyLgu-vfaT9w25N_nP2UJ3GyHQ.ExNGC4kPQo_2ufSp.A5JKSBX87-Ya4dCmffTibMGzbLSOSFf0sHHu7QL_SKVfFMBl6CGHOmk5ebRvhilwHNT3S0DX-UFWKdVylqPWHbDZgR8vUSwWqFeK_4tMp3Jiavvoi7KAh_MNH5aGQrwWlC08SVPFnVjssOsWYJgZWexJonrY2fr1ESEmYndmfpEFDpmRqC_WNXlITOGZoHJ4zTkjf96vl_Tl-_ssW8ZQ_tzy7DlDiTKe7JeI_KAhGJkUSiPwbeQUQFRYT0rOqSaykl2etaMv73XW71FbBt2ti3PCeyGsESYURWoFpW9CgeJHqjTVkTHMSIwuB0zbgpZ_JRDH-QIO1378f5hHax8iB4Nv0uFocUcksScbWlu6Cf7BDXMHew0wUoXo0nPftSEiXe4QtyQDx_H6gHDZC3ZhGKmWWu8XP6rAp7Uh1XPudx7mogsCc1kAwis3fbfwsaGiCJhv8_fAmp5GfcLS_qjig-_IL8aOz8aG60KjjzeAOwpi8j9jQAO2Dbq7e55T41dZ5LK0p7Ckk2zoJlAE9xSPBL894b_eTMStRMVK_Ys1x2aLLt2BPVUREcSOb-jIh7fzJ8yin4cFKJtMAUwBJmmTxwqN0NrD3qRXEVu0O6_RgdkEqZGyGLJS0V2l2LD2OAcRixc-6S8bX7Z2_b7C_fSBl88MqPVRPOGmROVdbbr3R__9QLAOwmb6UKJ_h8NaNQ8Q6ReTjshb1d93W2lvFWS8gDz2bpICHvK-FrgrO4wa3S9wpjrfZUvXKoJxi0_vNg7-kTf_bJE4y77EsBP3-Bd7t_BkfdkBA6tugVh_M_EJb2ciGGtV8LfLXtm_Fv0tQGowihuQdRtEytj7nE2soD1ni8Tqt1YRF5eqi4dzb4qAS2-ofk4FxdXvCMIsmVZ-ESw-FOynXdTitb7LcNcB3TGHpcjfPfkRvap-cFlVcHmaRW2IzAcwIUmkPRLD9lVjPWoB0akhDqC7Gw72z5yAerSJzqroj2SElP0VuSoxAZvCste6Oai1fk2urFdPLwqn74ddnOVq9HTKMveyuGfA-JnpzjgB5e11IQleMETGF63qSPNh3n3EQLNC69zpLiIDn5ng-F-869EcEOMWwV1Z75mnYUU0rNcCfGnxzW8_eqbQ-tlBcu5oolhrSu1fDIocSx2a7oBARt4-O-AYRvHLqxyxBcNqiCcnF9hnyRKJE6cl_Hb561WauwZH4nDAFmK6_KbqxVCuAdEWMYn9pknl8e7siLoa-P07HFQZCWPfqH5_dB1C4QZ3O1y2rxcEHXHFDmENxiSZY6Hb-hDjAoLjYiKizTMHXP12ClaN34NtrjD6kUfgn6DHRNynezVMxaI.ZNqwRdcFFkSt6GesuuYpXw",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "06cf87e2-798c-4b53-afad-da3fd165a987",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.TB5WJ_xJafS7ArMxfKnoqtEALVOdRZyDDtuRgrH2LAHRrL17S-2CzHEwq4lbezCFVXXAMn50txZWYEqn2Hp3fvlSmt3bEFWrF5pwUwsFp8VWoIOb1Wk-b4e_xof95_VAYb2rwu0i4haANxtw-G2OZT-Q-Fx7FjyimcMSzVvWKbc66ouua_7XP3b4jRrQjbsIrBgJcsTJfquJXNNv3OVV4VnLC5kuzgCyVACgwnhPss0M4bR3BGbilTTL_5C4OdJoKdlSAh074Eh3SG1zo6LTJDYYaf0V-q_ATsNMFMMP3XuNkWCrGl2ATk4CB0MwAyLgu-vfaT9w25N_nP2UJ3GyHQ.ExNGC4kPQo_2ufSp.A5JKSBX87-Ya4dCmffTibMGzbLSOSFf0sHHu7QL_SKVfFMBl6CGHOmk5ebRvhilwHNT3S0DX-UFWKdVylqPWHbDZgR8vUSwWqFeK_4tMp3Jiavvoi7KAh_MNH5aGQrwWlC08SVPFnVjssOsWYJgZWexJonrY2fr1ESEmYndmfpEFDpmRqC_WNXlITOGZoHJ4zTkjf96vl_Tl-_ssW8ZQ_tzy7DlDiTKe7JeI_KAhGJkUSiPwbeQUQFRYT0rOqSaykl2etaMv73XW71FbBt2ti3PCeyGsESYURWoFpW9CgeJHqjTVkTHMSIwuB0zbgpZ_JRDH-QIO1378f5hHax8iB4Nv0uFocUcksScbWlu6Cf7BDXMHew0wUoXo0nPftSEiXe4QtyQDx_H6gHDZC3ZhGKmWWu8XP6rAp7Uh1XPudx7mogsCc1kAwis3fbfwsaGiCJhv8_fAmp5GfcLS_qjig-_IL8aOz8aG60KjjzeAOwpi8j9jQAO2Dbq7e55T41dZ5LK0p7Ckk2zoJlAE9xSPBL894b_eTMStRMVK_Ys1x2aLLt2BPVUREcSOb-jIh7fzJ8yin4cFKJtMAUwBJmmTxwqN0NrD3qRXEVu0O6_RgdkEqZGyGLJS0V2l2LD2OAcRixc-6S8bX7Z2_b7C_fSBl88MqPVRPOGmROVdbbr3R__9QLAOwmb6UKJ_h8NaNQ8Q6ReTjshb1d93W2lvFWS8gDz2bpICHvK-FrgrO4wa3S9wpjrfZUvXKoJxi0_vNg7-kTf_bJE4y77EsBP3-Bd7t_BkfdkBA6tugVh_M_EJb2ciGGtV8LfLXtm_Fv0tQGowihuQdRtEytj7nE2soD1ni8Tqt1YRF5eqi4dzb4qAS2-ofk4FxdXvCMIsmVZ-ESw-FOynXdTitb7LcNcB3TGHpcjfPfkRvap-cFlVcHmaRW2IzAcwIUmkPRLD9lVjPWoB0akhDqC7Gw72z5yAerSJzqroj2SElP0VuSoxAZvCste6Oai1fk2urFdPLwqn74ddnOVq9HTKMveyuGfA-JnpzjgB5e11IQleMETGF63qSPNh3n3EQLNC69zpLiIDn5ng-F-869EcEOMWwV1Z75mnYUU0rNcCfGnxzW8_eqbQ-tlBcu5oolhrSu1fDIocSx2a7oBARt4-O-AYRvHLqxyxBcNqiCcnF9hnyRKJE6cl_Hb561WauwZH4nDAFmK6_KbqxVCuAdEWMYn9pknl8e7siLoa-P07HFQZCWPfqH5_dB1C4QZ3O1y2rxcEHXHFDmENxiSZY6Hb-hDjAoLjYiKizTMHXP12ClaN34NtrjD6kUfgn6DHRNynezVMxaI.ZNqwRdcFFkSt6GesuuYpXw",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "752fae48-77d7-4e52-a6d5-1a943f3a853b",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:47 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "GET"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 267,
          "responseSize": 31
        },
        "id": "64cd32a5-80d0-4312-bfbe-fbe09e7aeba6",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c5f3b933-3aa2-4d6e-8be5-b4bfd7388bce",
          "length": 34,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3570c1db-800f-4eec-993e-32e7e31f38f8"
        },
        "item": {
          "id": "7f03b690-e3ea-44ab-bb74-bad508931e71",
          "name": "Validate the user should not be able to logout if already logged out.",
          "request": {
            "url": {
              "path": [
                "sign-out"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bearer_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "090ad2cd-6a83-4901-b5d5-f597264df958",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response Message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Token is invalid or expired\");\r",
                  "});"
                ],
                "_lastExecutionId": "3976692c-b280-4e97-a661-e12e835bd516"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8887d248-8304-4d1c-b0c8-d660e8d58a8c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "aee607df-074b-4623-ab1b-288dc0551851"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "sign-out"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxNDE4MjQxOC04MDMxLTcwYmMtOWEyMS1mNjc4MjkyNzgwM2QiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYTEzMjI1Yy1hNzVkLTQzZmItODlhNy0zYmM3ZmZhYjY5NzUiLCJldmVudF9pZCI6IjlhY2E0Y2RjLWI2NmUtNDJmOC1iOGFjLTlkYmEwOThkMDQxOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE2NDg0NDAsImV4cCI6MTcyMTczNDg0MCwiaWF0IjoxNzIxNjQ4NDQwLCJqdGkiOiJmMGEzNzUyYS0wNmE4LTQwZGMtYjFhNy1jMWY1ZDg3NjA4MGQiLCJ1c2VybmFtZSI6IjE0MTgyNDE4LTgwMzEtNzBiYy05YTIxLWY2NzgyOTI3ODAzZCJ9.oe-2yODjrLE4ylnRYkCiq0BkaX-h5osIs2GEdum1hLUAoZl6JBJWCqs3z-6j9k4tdX_--TLI1pJM2EDqKJmyxWEYwstSEGNQwoq0SMwHC1R_Sn5bIxVIlhUFqvI8un41z2Omh_j52H3Pnl4CCb7eqbFoUR3RFdmij3X2wi-2o68PuBU6GTyGgnBTqnL8OMsRUbDnR0bzkjk3IIlGoAF7HkWlzEM3hpnAWQk6rtALwhn_yxf8WssnzRZGJRPYaHYjJimoAZ878wNyJm5K5aY7NLNNPXNjGrNRCANhn4I6EYARNwHZRECiC2D5BgCDeZostlJpdOgwQNxBZClVfnt5zQ",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "53a6669f-9436-4be4-82ce-eff76ad21255",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJraWQiOiJRclZUTzdRaHBYZ2Rna0VvamJBbDRnTmh4NmNLK1FzMm5LbGlLenRsZVVFPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxNDE4MjQxOC04MDMxLTcwYmMtOWEyMS1mNjc4MjkyNzgwM2QiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RWUw4M0NEeG8iLCJjbGllbnRfaWQiOiI3Z2luazlhaTVzNTYwMWdjNjJwaTA5dHZxZyIsIm9yaWdpbl9qdGkiOiJiYTEzMjI1Yy1hNzVkLTQzZmItODlhNy0zYmM3ZmZhYjY5NzUiLCJldmVudF9pZCI6IjlhY2E0Y2RjLWI2NmUtNDJmOC1iOGFjLTlkYmEwOThkMDQxOCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MjE2NDg0NDAsImV4cCI6MTcyMTczNDg0MCwiaWF0IjoxNzIxNjQ4NDQwLCJqdGkiOiJmMGEzNzUyYS0wNmE4LTQwZGMtYjFhNy1jMWY1ZDg3NjA4MGQiLCJ1c2VybmFtZSI6IjE0MTgyNDE4LTgwMzEtNzBiYy05YTIxLWY2NzgyOTI3ODAzZCJ9.oe-2yODjrLE4ylnRYkCiq0BkaX-h5osIs2GEdum1hLUAoZl6JBJWCqs3z-6j9k4tdX_--TLI1pJM2EDqKJmyxWEYwstSEGNQwoq0SMwHC1R_Sn5bIxVIlhUFqvI8un41z2Omh_j52H3Pnl4CCb7eqbFoUR3RFdmij3X2wi-2o68PuBU6GTyGgnBTqnL8OMsRUbDnR0bzkjk3IIlGoAF7HkWlzEM3hpnAWQk6rtALwhn_yxf8WssnzRZGJRPYaHYjJimoAZ878wNyJm5K5aY7NLNNPXNjGrNRCANhn4I6EYARNwHZRECiC2D5BgCDeZostlJpdOgwQNxBZClVfnt5zQ",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3389bd4d-df25-4fe5-bb6b-417a70c5917e",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:48 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "58"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              105,
              115,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 381,
          "responseSize": 58
        },
        "id": "7f03b690-e3ea-44ab-bb74-bad508931e71",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ba59d587-a019-4e36-a342-aef8b61ce10f",
          "length": 34,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "44594888-f43d-432a-82d5-c141019b9e27"
        },
        "item": {
          "id": "d936ad41-39b7-4057-a1c8-8d9c21140950",
          "name": "Validate the verification code has been sent to the user successfully.",
          "request": {
            "url": {
              "path": [
                "forgot-password"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\":\"{{temporary_email}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f35d1b7-8452-473f-bc99-0897de7a4d45",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`Status Code is ${pm.response.code === 200 ? 'valid' : 'invalid'}`, () => {\r",
                  "    const expectedStatusCode = 200;\r",
                  "    const actualStatusCode = pm.response.code;\r",
                  "    pm.expect(actualStatusCode, `Expected status code ${expectedStatusCode} but got ${actualStatusCode}`).to.equal(expectedStatusCode);\r",
                  "});\r",
                  "\r",
                  "pm.test(`Response Message is ${pm.response.json().message === \"OTP sent successfully\" ? 'valid' : 'invalid'}`, () => {\r",
                  "    const expectedMessage = \"OTP sent successfully\";\r",
                  "    const actualMessage = pm.response.json().message;\r",
                  "    pm.expect(actualMessage, `Expected response message \"${expectedMessage}\" but got \"${actualMessage}\"`).to.eql(expectedMessage);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "e13ee0b8-151b-43aa-905e-23a221433aa5"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5a78c4d8-a0cd-46b2-b03e-09f96ceecea3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "da3c996b-e3bb-47b2-8d21-1ec8f3feead0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "forgot-password"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f6b3d5ba-a86a-4a55-a51d-00af555e69ff",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\":\"testuser374931@yopmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "90d75a36-fa08-488b-aa18-d32df13e4a16",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:48 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "470"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              67,
              111,
              100,
              101,
              68,
              101,
              108,
              105,
              118,
              101,
              114,
              121,
              68,
              101,
              116,
              97,
              105,
              108,
              115,
              34,
              58,
              123,
              34,
              68,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              116,
              42,
              42,
              42,
              64,
              121,
              42,
              42,
              42,
              34,
              44,
              34,
              68,
              101,
              108,
              105,
              118,
              101,
              114,
              121,
              77,
              101,
              100,
              105,
              117,
              109,
              34,
              58,
              34,
              69,
              77,
              65,
              73,
              76,
              34,
              44,
              34,
              65,
              116,
              116,
              114,
              105,
              98,
              117,
              116,
              101,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              125,
              44,
              34,
              82,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              77,
              101,
              116,
              97,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              73,
              100,
              34,
              58,
              34,
              50,
              100,
              98,
              53,
              101,
              99,
              100,
              50,
              45,
              53,
              49,
              53,
              100,
              45,
              52,
              48,
              56,
              52,
              45,
              98,
              54,
              56,
              102,
              45,
              101,
              51,
              50,
              99,
              56,
              99,
              54,
              101,
              97,
              53,
              54,
              99,
              34,
              44,
              34,
              72,
              84,
              84,
              80,
              83,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              50,
              48,
              48,
              44,
              34,
              72,
              84,
              84,
              80,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              77,
              111,
              110,
              44,
              32,
              50,
              50,
              32,
              74,
              117,
              108,
              32,
              50,
              48,
              50,
              52,
              32,
              49,
              49,
              58,
              52,
              48,
              58,
              52,
              57,
              32,
              71,
              77,
              84,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              120,
              45,
              97,
              109,
              122,
              45,
              106,
              115,
              111,
              110,
              45,
              49,
              46,
              49,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              49,
              48,
              48,
              34,
              44,
              34,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              107,
              101,
              101,
              112,
              45,
              97,
              108,
              105,
              118,
              101,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              98,
              53,
              101,
              99,
              100,
              50,
              45,
              53,
              49,
              53,
              100,
              45,
              52,
              48,
              56,
              52,
              45,
              98,
              54,
              56,
              102,
              45,
              101,
              51,
              50,
              99,
              56,
              99,
              54,
              101,
              97,
              53,
              54,
              99,
              34,
              125,
              44,
              34,
              82,
              101,
              116,
              114,
              121,
              65,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              34,
              58,
              48,
              125,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              84,
              80,
              32,
              115,
              101,
              110,
              116,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 918,
          "responseSize": 470
        },
        "id": "d936ad41-39b7-4057-a1c8-8d9c21140950",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e45f21f7-16d2-4cf8-9d2d-d53b45b675aa",
          "length": 34,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "915d1d75-c247-4205-93d5-b1868fd98475"
        },
        "item": {
          "id": "247ab4f8-7147-4389-9241-91dfa91262d7",
          "name": "Validate the verification code has not been sent to the user as an unregistered email is provided.",
          "request": {
            "url": {
              "path": [
                "forgot-password"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\":\"madhusmitanath0327@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7f6d9d5-7ade-4482-a028-035e22e4fe4c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Email address is not registered\");\r",
                  "});"
                ],
                "_lastExecutionId": "60ef4917-6b27-49e2-8386-a0aaf205f175"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f4ce283e-a918-4ca9-9b2d-28fca050673b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "09050959-4600-4356-8191-e104c70b6d52"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "forgot-password"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cde6f773-5dd3-4cca-85d2-1e23321e6097",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "48",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\":\"madhusmitanath0327@gmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f7b8ca24-acd8-4fe1-8ee2-003c85797e8f",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              69,
              109,
              97,
              105,
              108,
              32,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              114,
              101,
              103,
              105,
              115,
              116,
              101,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 348,
          "responseSize": 62
        },
        "id": "247ab4f8-7147-4389-9241-91dfa91262d7",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8cc37ade-40e0-4845-970e-8ba55e932e3e",
          "length": 34,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7f0c1ec3-3127-4095-9917-00e8677eca45"
        },
        "item": {
          "id": "380a9269-a9d6-453a-a049-9b4a50c0d519",
          "name": "Validate the verification code has not been sent to the user as an incorrect email is provided",
          "request": {
            "url": {
              "path": [
                "forgot-password"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\":\"madhusmitanath0327@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9163527a-0db1-4493-a3ee-83cdd61d4c8c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response has all required fields\", ()=> {\r",
                  "    pm.expect(response).to.have.property(\"status\");\r",
                  "    pm.expect(response).to.have.property(\"message\");\r",
                  "});\r",
                  "\r",
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().message).to.eql(\"Email address is not registered\");\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "718c6fe3-238b-4e78-8227-2102870770e3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ea3fcd55-5eaf-4922-8232-bb60ca0a30c6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "4339ad53-2e99-41c5-b1f5-a897c671a7fd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "forgot-password"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2cc22d0a-ce90-4da4-b71c-24976f068dba",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "48",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\":\"madhusmitanath0327@gmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "a497fa69-9a3e-4574-83c1-35769f518fff",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              69,
              109,
              97,
              105,
              108,
              32,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              114,
              101,
              103,
              105,
              115,
              116,
              101,
              114,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 367,
          "responseSize": 62
        },
        "id": "380a9269-a9d6-453a-a049-9b4a50c0d519",
        "assertions": [
          {
            "assertion": "Response has all required fields",
            "skipped": false
          },
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response message is Valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "df7cf902-bcb1-4100-9feb-9e2ae24e3b08",
          "length": 34,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a55ac328-c007-41bc-a777-a5f3b2a36905"
        },
        "item": {
          "id": "92c53a8d-cf15-4ad3-84aa-4acc33c1753f",
          "name": "Validate the verification code has not been sent to the user whose email is not confirmed",
          "request": {
            "url": {
              "path": [
                "forgot-password"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\":\"alon.naveen@floodouts.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a70c04a6-e626-49ad-b4f2-203af574c280",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`Status Code is ${pm.response.code === 403 ? 'valid' : 'invalid'}`, () => {\r",
                  "    const expectedStatusCode = 403;\r",
                  "    const actualStatusCode = pm.response.code;\r",
                  "    pm.expect(actualStatusCode, `Expected status code ${expectedStatusCode} but got ${actualStatusCode}`).to.equal(expectedStatusCode);\r",
                  "});\r",
                  "\r",
                  "pm.test(`Response Message is ${pm.response.json().message === \"User has not been confirmed by the admin\" ? 'valid' : 'invalid'}`, () => {\r",
                  "    const expectedMessage = \"User has not been confirmed by the admin\";\r",
                  "    const actualMessage = pm.response.json().message;\r",
                  "    pm.expect(actualMessage, `Expected response message \"${expectedMessage}\" but got \"${actualMessage}\"`).to.eql(expectedMessage);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "b36897f7-d1b0-415f-b712-1cc10f68e1d9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "97e16f6b-686d-42c8-9f27-500212e3e125",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "02132d46-28a6-4f4a-a8a2-241512cf8e17"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "forgot-password"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "52565925-37ae-4467-bf35-41edde2229d2",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "45",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\":\"alon.naveen@floodouts.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "4715bbde-790c-4285-8cc5-556731952a4a",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "71"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              115,
              101,
              114,
              32,
              104,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              98,
              101,
              101,
              110,
              32,
              99,
              111,
              110,
              102,
              105,
              114,
              109,
              101,
              100,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              97,
              100,
              109,
              105,
              110,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 386,
          "responseSize": 71
        },
        "id": "92c53a8d-cf15-4ad3-84aa-4acc33c1753f",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Response Message is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "86829d1c-5e05-48b1-bb42-7b0d95a0781e",
          "length": 34,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4c26fbef-2e29-423c-b92f-05d94aceee0c"
        },
        "item": {
          "id": "3de07dd0-ea86-44cb-8b32-e8c3d9abe915",
          "name": "Validate the user should not receive a verification code if incorrect CRUD operation is used.",
          "request": {
            "url": {
              "path": [
                "forgot-password"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\":\"{{temporary_email}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056d33ad-82c0-41b9-aa30-030fc247d7a2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test('Status Code is valid',()=>{\r",
                  "    pm.response.to.have.status(405);\r",
                  "});\r",
                  "\r",
                  "pm.test('Status message is Valid', ()=>{\r",
                  "    pm.expect(pm.response.json().detail).to.eql(\"Method Not Allowed\");\r",
                  "});"
                ],
                "_lastExecutionId": "6baeb246-f6e8-4691-a100-3884a7cac46f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7bc58acb-c376-48cb-8eed-757002a9bd7c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "07837c52-1d69-443b-bea3-415ac7ecadfb"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "forgot-password"
            ],
            "host": [
              "3",
              "137",
              "2",
              "183"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "373e3c81-4a50-41d2-bd67-b348f9bae6d1",
              "system": true
            },
            {
              "key": "Host",
              "value": "3.137.2.183:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\":\"testuser374931@yopmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "cee6d91e-f0ba-4976-bb0b-6da608e61408",
          "status": "Method Not Allowed",
          "code": 405,
          "header": [
            {
              "key": "date",
              "value": "Mon, 22 Jul 2024 11:40:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "allow",
              "value": "POST"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 266,
          "responseSize": 31
        },
        "id": "3de07dd0-ea86-44cb-8b32-e8c3d9abe915",
        "assertions": [
          {
            "assertion": "Status Code is valid",
            "skipped": false
          },
          {
            "assertion": "Status message is Valid",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 7758
    },
    "failures": [],
    "error": null
  }
}